<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework</name>
  </assembly>
  <members>
    <member name="E:Microsoft.Win32.FileDialog.FileOk">
      <summary>当用户通过单击 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 的“打开”按钮或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 的“保存”按钮选择某个文件名时发生。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AnchorChanged">
      <summary>当添加、 删除或修改的批注列表中的定位点时发生 <see cref="P:System.Windows.Annotations.Annotation.Anchors" />。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AuthorChanged">
      <summary>当添加、 删除或修改的批注列表中的一位作者时发生 <see cref="P:System.Windows.Annotations.Annotation.Authors" />。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.CargoChanged">
      <summary>当添加、 删除或修改的批注列表中的货物时发生 <see cref="P:System.Windows.Annotations.Annotation.Cargos" />。</summary>
    </member>
    <member name="E:System.Windows.Annotations.AnnotationResource.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>有关此成员的说明，请参阅 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />。</summary>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorPart.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>此事件支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged">
      <summary>当存储区中任何 <see cref="T:System.Windows.Annotations.Annotation" /> 上的定位点更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged">
      <summary>当存储区中任何 <see cref="T:System.Windows.Annotations.Annotation" /> 上的作者更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged">
      <summary>当存储区中任何 <see cref="T:System.Windows.Annotations.Annotation" /> 上的 cargo 更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged">
      <summary>向存储区中添加或从存储区中删除 <see cref="T:System.Windows.Annotations.Annotation" /> 时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.Activated">
      <summary>当应用程序成为前台应用程序时出现。</summary>
    </member>
    <member name="E:System.Windows.Application.Deactivated">
      <summary>应用程序不再前台应用程序时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.DispatcherUnhandledException">
      <summary>当应用程序引发但未处理异常时出现。</summary>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>应用程序关闭，且无法取消之前发生。</summary>
    </member>
    <member name="E:System.Windows.Application.FragmentNavigation">
      <summary>当应用程序中的导航器开始导航到内容片段中，如果所需的片段是在当前的内容中，或源后立即发生导航 XAML 已加载内容，如果所需的片段位于不同的内容。</summary>
    </member>
    <member name="E:System.Windows.Application.LoadCompleted">
      <summary>导航到的应用程序中的导航器的内容已被加载，分析，并开始呈现时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.Navigated">
      <summary>当找到应用程序中的导航器要将其导航到的内容后，尽管可能未完成加载时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.Navigating">
      <summary>当应用程序中的导航器在请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationFailed">
      <summary>在应用程序中的导航器导航到所请求的内容时发生错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationProgress">
      <summary>在由应用程序可以提供导航进度信息中的导航器的下载过程中定期发生。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationStopped">
      <summary>发生时 StopLoading 调用应用程序中的导航器的方法，或者当前导航正在进行时，通过导航器请求新导航时发生时。</summary>
    </member>
    <member name="E:System.Windows.Application.SessionEnding">
      <summary>当用户结束时发生 Windows 通过注销或关闭操作系统的会话。</summary>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>发生时 <see cref="M:System.Windows.Application.Run" /> 方法 <see cref="T:System.Windows.Application" /> 调用对象。</summary>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 属性更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 属性更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>当所返回的集合时发生 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectionModeChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.CalendarDateRange.PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>组合框的下拉列表关闭时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>当打开组合框的下拉列表时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Closed">
      <summary>时发生的特定实例 <see cref="T:System.Windows.Controls.ContextMenu" /> 关闭。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Opened">
      <summary>当打开上下文菜单的特定实例时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing">
      <summary>发生时 <see cref="T:System.Windows.Controls.ContextMenu" /> 关闭。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening">
      <summary>发生时 <see cref="T:System.Windows.Controls.ContextMenu" /> 随即打开。</summary>
    </member>
    <member name="E:System.Windows.Controls.Control.MouseDoubleClick">
      <summary>在双击或多次单击鼠标按钮时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
      <summary>在用户单击鼠标按钮两次或更多次时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AddingNewItem">
      <summary>新项添加到之前发生 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns">
      <summary>所有列的自动生成完成后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
      <summary>自动生成单独的列时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
      <summary>发生行或单元格进入编辑模式之前。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
      <summary>在单元格的编辑将在提交或取消前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 其中一个列更改属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
      <summary>当用户使用鼠标拖动后释放列标题时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
      <summary>每次鼠标位置发生更改时在用户拖动列标题时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
      <summary>当用户开始使用鼠标拖动列标题时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
      <summary>在列移至的显示顺序中的新位置时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
      <summary>在列移至的显示顺序中的新位置之前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent">
      <summary>默认行内容准备好之后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
      <summary>在 <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 属性的值更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.InitializingNewItem">
      <summary>创建一个新项时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
      <summary>之后，将会 <see cref="T:System.Windows.Controls.DataGridRow" /> 已实例化，以便您可以自定义它然后使用它。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
      <summary>新的行的详细信息模板应用于行时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
      <summary>在单元格进入编辑模式时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
      <summary>当某一行的可见性详细信息元素更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
      <summary>在提交或取消行编辑之前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.SelectedCellsChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.DataGrid.SelectedCells" /> 集合更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.Sorting">
      <summary>对列进行排序时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
      <summary>发生时 <see cref="T:System.Windows.Controls.DataGridRow" /> 对象将成为可供重用。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
      <summary>行详细信息元素成为可供重用时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Selected">
      <summary>选择该单元格时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Unselected">
      <summary>清除选择单元格时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent">
      <summary>准备单元格剪贴板内容后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent">
      <summary>在剪贴板内容移至该单元格之前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Selected">
      <summary>当选择行时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Unselected">
      <summary>清除行选择时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>出现在下拉列表 <see cref="T:System.Windows.Controls.Calendar" /> 已关闭。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>出现在下拉列表 <see cref="T:System.Windows.Controls.Calendar" /> 打开。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>发生时 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 设置为不能被解释为日期或不能所选日期的值。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 属性更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Collapsed">
      <summary>发生时的内容窗口 <see cref="T:System.Windows.Controls.Expander" /> 控制关闭和仅 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 是否可见。</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Expanded">
      <summary>发生时的内容窗口 <see cref="T:System.Windows.Controls.Expander" /> 控件打开以显示其标头和内容。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.ContentRendered">
      <summary>之后，将会 <see cref="T:System.Windows.Controls.Frame" /> 呈现内容。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
      <summary>导航到内容片段开始时发生，这会立即发生，如果所需的片段位于当前内容中或之后对源 XAML 已加载内容，如果所需的片段位于不同的内容。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.LoadCompleted">
      <summary>导航到内容均已加载，分析，并开始呈现时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigated">
      <summary>找到后，并可从要导航到内容时发生 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性，尽管可能未完成加载。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigating">
      <summary>请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationFailed">
      <summary>在浏览到所请求内容时将引发错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationProgress">
      <summary>若要提供导航进度信息在下载过程中定期发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationStopped">
      <summary>发生时 <see cref="M:System.Windows.Controls.Frame.StopLoading" /> 调用方法时，或者当前导航正在进行时请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>发生时的任何值 <see cref="T:System.Windows.Controls.GridViewColumn" /> 属性更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.DpiChanged">
      <summary>在其的图像位于的屏幕的 DPI 显示更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>在图像中失败时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
      <summary>在当前的编辑模式更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
      <summary>发生时 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 属性将替换为。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 属性 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象已更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 属性 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象已更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.Gesture">
      <summary>发生时 <see cref="T:System.Windows.Controls.InkCanvas" /> 检测到笔势。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanged">
      <summary>发生时对所选内容 <see cref="T:System.Windows.Controls.InkCanvas" /> 更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanging">
      <summary>要选择一组新的墨迹笔划和/或元素时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoved">
      <summary>用户移动选定的笔画和/或元素后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoving">
      <summary>发生移动所选的笔画和元素之前。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResized">
      <summary>当用户调整大小的笔画和/或元素选择时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResizing">
      <summary>发生所选的笔画和元素调整大小时之前。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeCollected">
      <summary>当用户绘制的笔画添加到时发生 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErased">
      <summary>当用户擦除笔画时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErasing">
      <summary>用户擦除笔画之前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
      <summary>发生时 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性将替换为。</summary>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件由引发 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 以通知项集合已更改的布局。</summary>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" /> 事件由引发 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 以通知其状态已更改的控件。</summary>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Selected">
      <summary>发生时 <see cref="T:System.Windows.Controls.ListBoxItem" /> 处于选中状态。</summary>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Unselected">
      <summary>发生时 <see cref="T:System.Windows.Controls.ListBoxItem" /> 取消选择。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingEnded">
      <summary>媒体缓冲结束时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingStarted">
      <summary>媒体缓冲开始时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>媒体结束时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>遇到错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>媒体加载已完成时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.ScriptCommand">
      <summary>在媒体中遇到的脚本命令时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Checked">
      <summary>检查菜单项时出现。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Click">
      <summary>发生时 <see cref="T:System.Windows.Controls.MenuItem" /> 时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuClosed">
      <summary>发生时的状态 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 属性更改为 false。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuOpened">
      <summary>发生时的状态 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 属性更改为 true。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Unchecked">
      <summary>发生时 <see cref="T:System.Windows.Controls.MenuItem" /> 处于未选中状态。</summary>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>当 <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 属性的值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>发生时 <see cref="T:System.Windows.Controls.Button" /> 时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
      <summary>发生时 <see cref="T:System.Windows.Media.Visual" /> 元素 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 连接。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
      <summary>发生时 <see cref="T:System.Windows.Media.Visual" /> 元素 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 已断开连接。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
      <summary>发生时的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 使用此查看器相关联的项 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 属性) 的更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>发生时 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性更改为 false。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>发生时 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性更改为 true。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>范围值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>发生一次或多次作为内容将在滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 当用户将 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 使用鼠标。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Selected">
      <summary>当选择某个项时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>出现时选择的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
      <summary>取消选择某个项时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
      <summary>选定文本更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
      <summary>在文本元素中的内容更改的情况下发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>发生时 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件失去鼠标捕获。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>根据鼠标位置更改时出现了一个或多个次 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件具有逻辑焦点和鼠标捕获。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>发生时 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件接收逻辑焦点和鼠标捕获。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>发生时 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 已选中。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>发生时的状态 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 既不是也关闭。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>发生时 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 处于未选中状态。</summary>
    </member>
    <member name="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
      <summary>在检测到滚动位置、范围或视区大小的变化时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>发生时 <see cref="T:System.Windows.Controls.ToolTip" /> 已关闭，并且不再可见。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>发生时 <see cref="T:System.Windows.Controls.ToolTip" /> 变得可见。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipClosing">
      <summary>发生时 <see cref="T:System.Windows.Controls.ToolTip" /> 关闭。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipOpening">
      <summary>发生时 <see cref="T:System.Windows.Controls.ToolTip" /> 随即打开。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>发生时 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 更改。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>发生时 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从更改 true 到 false。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>发生时 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从更改 false 到 true。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>发生时 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性 <see cref="T:System.Windows.Controls.TreeViewItem" /> 从更改 false 到 true。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>发生时 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性 <see cref="T:System.Windows.Controls.TreeViewItem" /> 从更改 true 到 false。</summary>
    </member>
    <member name="E:System.Windows.Controls.Validation.Error">
      <summary>在绑定元素遇到验证错误时发生，但仅针对 <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> 值设置为 true 的绑定。</summary>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
      <summary>通过重新虚拟项时发生 <see cref="T:System.Windows.Controls.ItemsControl" /> 的此实例与该键相关联 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</summary>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>要导航到的文档完成下载时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigated">
      <summary>定位到要导航到的文档并开始下载时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigating">
      <summary>正好在导航到某个文档之前发生。</summary>
    </member>
    <member name="E:System.Windows.Data.Binding.SourceUpdated">
      <summary>当值从绑定目标传输到绑定源时发生，但只针对 <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 值设置为 true 的绑定。</summary>
    </member>
    <member name="E:System.Windows.Data.Binding.TargetUpdated">
      <summary>当一个值从绑定源传输到绑定目标时发生，但仅限于其 <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 值设置为 true 的绑定。</summary>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionRegistering">
      <summary>数据绑定系统通知集合时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
      <summary>数据绑定系统通知集合视图时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <summary>包含的集合更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>在包含的集合已更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CollectionChanged">
      <summary>当视图已更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanged">
      <summary>在 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanging">
      <summary>发生时 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 正在更改。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>当视图已更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在属性值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>提供筛选逻辑。</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <summary>通过添加或删除某个项而使集合更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>在集合更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded">
      <summary>在附加托管的调试器时，将泛型就会发生 <see cref="T:System.Windows.ResourceDictionary" /> 由应用程序加载对象。</summary>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded">
      <summary>发生在附加托管的调试器，并应用了主题 <see cref="T:System.Windows.ResourceDictionary" /> 由应用程序加载对象。</summary>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded">
      <summary>当托管的调试器已连接并处于一个主题时发生 <see cref="T:System.Windows.ResourceDictionary" /> 对象是从应用程序中卸载。</summary>
    </member>
    <member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
      <summary>添加或从中删除元素时发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>上单击鼠标左键时发生 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
      <summary>在请求导航事件时发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
      <summary>发生时 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 已完成。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
      <summary>当在派生类中重写，将发生情况时 <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 执行操作。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
      <summary>当在派生类中重写操作完成时发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
      <summary>当在派生类中重写，只需前发生 <see cref="T:System.Printing.PrintTicket" /> 添加到由流 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> 或 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> 方法。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
      <summary>当在派生类中重写，将发生情况时 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 更新其进度。</summary>
    </member>
    <member name="E:System.Windows.Documents.TextRange.Changed">
      <summary>在重新定位范围以覆盖新的内容时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuClosing">
      <summary>即将关闭任何元素上的上下文菜单时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuOpening">
      <summary> 当打开任何元素上的上下文菜单时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.DataContextChanged">
      <summary> 此元素的数据上下文更改时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Initialized">
      <summary> 发生时这 <see cref="T:System.Windows.FrameworkContentElement" /> 初始化。 这样的情况相符其中的值 <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> 属性从更改 false （或未定义） 到 true。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Loaded">
      <summary> 当对元素进行布局、呈现，且可将其用于交互时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.SourceUpdated">
      <summary>当任何关联的参与此元素的更改上的绑定的数据源时出现。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.TargetUpdated">
      <summary> 当参与此元素上的绑定的任意关联目标属性更改时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipClosing">
      <summary> 在元素上的任何工具提示将关闭之前发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipOpening">
      <summary> 当在元素上的任何工具提示打开时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Unloaded">
      <summary>当从一个已加载的元素的元素树，移除元素时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuClosing">
      <summary>即将关闭任何元素上的上下文菜单时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuOpening">
      <summary>当打开任何元素上的上下文菜单时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.DataContextChanged">
      <summary>在此元素的数据上下文更改时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Initialized">
      <summary>发生时这 <see cref="T:System.Windows.FrameworkElement" /> 初始化。 此事件的情况相符其中的值 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性从更改 false （或未定义） 到 true。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>当对元素进行布局、呈现，且可将其用于交互时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.RequestBringIntoView">
      <summary>发生时 <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> 在此元素时调用。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>发生时既 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 或 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 属性将在此元素的值更改。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.SourceUpdated">
      <summary>对于此元素上的绑定的任何现有属性的源值更改时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.TargetUpdated">
      <summary>当此元素上的任何属性绑定的目标值发生更改时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipClosing">
      <summary>在元素上的任何工具提示将关闭之前发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipOpening">
      <summary>当在元素上的任何工具提示打开时发生。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>该元素将从已加载的元素的元素树中删除时发生。</summary>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.DpiChanged">
      <summary>在其 HwndHost 是的屏幕的 DPI 显示更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.MessageHook">
      <summary>发生托管窗口收到每个未处理消息。</summary>
    </member>
    <member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
      <summary>发生时 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 遇到意外情况。</summary>
    </member>
    <member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
      <summary>在异步加载操作完成时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>导航到内容片段开始时发生，这会立即发生，如果所需的片段位于当前内容中或之后对源 XAML 已加载内容，如果所需的片段位于不同的内容。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
      <summary>导航到内容均已加载，分析，并开始呈现时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>找到后，并可从要导航到内容时发生 <see cref="P:System.Windows.Navigation.NavigationService.Content" /> 属性，尽管可能未完成加载。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>导航到所请求内容时出现错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
      <summary>若要提供导航进度信息在下载过程中定期发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>发生时 <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> 调用方法时，或者当前导航正在进行时请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
      <summary>导航到内容片段开始时发生，这会立即发生，如果所需的片段位于当前内容中或之后对源 XAML 已加载内容，如果所需的片段位于不同的内容。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
      <summary>导航到内容均已加载，分析，并开始呈现时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
      <summary>找到后，并可从要导航到内容时发生 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性，尽管可能未完成加载。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
      <summary>请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
      <summary>在浏览到所请求内容时将引发错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
      <summary>若要提供导航进度信息在下载过程中定期发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
      <summary>发生时 <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> 调用方法时，或者当前导航正在进行时请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.PageFunction`1.Return">
      <summary>当被调用时发生 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回，并且仅由调用页上进行处理。</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRejected">
      <summary>跳转项都未成功添加到跳转列表在 Windows 外壳时发生。</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
      <summary>跳转项以前在跳转列表由用户从列表中移除时发生。</summary>
    </member>
    <member name="E:System.Windows.Shell.ThumbButtonInfo.Click">
      <summary>单击缩略图按钮时发生。</summary>
    </member>
    <member name="E:System.Windows.SystemParameters.StaticPropertyChanged">
      <summary>在其中一个属性发生更改时发生。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>在控件转换到另一个状态后发生。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>当一个控件开始转换到另一个状态时发生。</summary>
    </member>
    <member name="E:System.Windows.Window.Activated">
      <summary>在窗口成为前台窗口时发生。</summary>
    </member>
    <member name="E:System.Windows.Window.Closed">
      <summary>当窗口即将关闭时发生。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> 设置，或 <see cref="M:System.Windows.Window.Show" />, ，<see cref="M:System.Windows.Window.ShowDialog" />, ，或 <see cref="M:System.Windows.Window.Hide" /> 窗口关闭时调用。</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
      <summary>之后立即发生 <see cref="M:System.Windows.Window.Close" /> 被调用，并且可以处理以取消关闭窗口。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> 设置，或 <see cref="M:System.Windows.Window.Show" />, ，<see cref="M:System.Windows.Window.ShowDialog" />, ，或 <see cref="M:System.Windows.Window.Close" /> 窗口关闭时调用。</exception>
    </member>
    <member name="E:System.Windows.Window.ContentRendered">
      <summary>在呈现窗口的内容之后发生。</summary>
    </member>
    <member name="E:System.Windows.Window.Deactivated">
      <summary>当窗口变得后台窗口时发生。</summary>
    </member>
    <member name="E:System.Windows.Window.DpiChanged">
      <summary>是窗口屏幕的 DPI 显示更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Window.LocationChanged">
      <summary>当窗口的位置会发生更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Window.SourceInitialized">
      <summary>引发此事件以支持与互操作 Win32。 请参阅 <see cref="T:System.Windows.Interop.HwndSource" />。</summary>
    </member>
    <member name="E:System.Windows.Window.StateChanged">
      <summary>发生时窗口的 <see cref="P:System.Windows.Window.WindowState" /> 属性更改。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>标识 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.ClearHighlightsCommand">
      <summary>表示清除突出显示当前所选内容的批注的命令。</summary>
      <returns>全部清除的路由的命令从突出显示批注当前所选内容。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateHighlightCommand">
      <summary>表示当前所选内容创建突出显示批注的命令。</summary>
      <returns>要创建突出显示批注，请对当前选定内容的路由的命令。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand">
      <summary>表示用于创建当前所选内容上墨迹便笺批注的命令。</summary>
      <returns>要创建在当前所选内容上墨迹便笺批注的路由的命令。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand">
      <summary>表示用于创建对当前选定内容的文本便笺批注的命令。</summary>
      <returns>要创建文本便笺批注，请对当前选定内容的路由的命令。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteAnnotationsCommand">
      <summary>表示用于删除所有墨迹注释、 文本便笺并突出显示的命令中当前所选内容的批注。</summary>
      <returns>删除所有墨迹注释、 文本便笺和突出显示的路由的命令中当前所选内容的批注。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteStickyNotesCommand">
      <summary>表示用于删除当前所选内容中的所有墨迹便笺和文本便笺批注的命令。</summary>
      <returns>若要删除当前所选内容中的所有墨迹注释和文本注释批注路由的命令。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BaselineOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontFamily" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.FontFamily" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontSize" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontStretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.FontStretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontWeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.FontWeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Foreground" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.Foreground" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextDecorations" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.TextDecorations" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextEffects" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.TextEffects" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Text" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextTrimmingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextTrimming" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextTrimming" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextWrapping" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.AccessText.TextWrapping" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Border.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsCancelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 路由事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsEditableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.HasContentProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.ClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.OpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" />  附加事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HorizontalOffsetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.IsEnabledProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementRectangleProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementTargetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ShowOnDisabledProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.VerticalOffsetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontSize" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.FontSize" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Foreground" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.MouseDoubleClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Padding" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.Padding" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Template" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.Template" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.BeginEditCommand">
      <summary>表示指示想要开始编辑当前单元格或行的命令 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CancelEditCommand">
      <summary>表示指示想要取消任何挂起的更改到行或当前单元格并还原到之前的状态的命令 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 执行了命令。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserAddRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserDeleteRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CommitEditCommand">
      <summary>表示指示想要提交挂起更改对当前单元或行并退出编辑模式的命令。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentCellProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableColumnVirtualizationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableRowVirtualizationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinRowHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NewItemMarginProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowValidationErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.EditingElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.ElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsEditingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 路由事件。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 路由的事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 路由事件。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 路由的事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeStateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.ActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserResizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserSortProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CellStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DisplayIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DragIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsAutoGeneratedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MaxWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.VisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ItemsSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridHyperlinkColumn.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.AlternationIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsEditingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsNewItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemsPanelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 路由事件。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 路由的事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 路由事件。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 路由的事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ValidationErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DefinitionBase.SharedSizeGroupProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.DockProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveDownProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveLeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveRightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveUpProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalPageSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.MaxPagesAcrossProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ShowPageBordersProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalPageSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.CollapsedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Expander.Expanded" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToNextPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsFindEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPrintEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand">
      <summary>获取值，该值表示 切换查看模式 命令。</summary>
      <returns>该命令。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ViewingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.BackStackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.BackStack" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.ForwardStackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.SandboxExternalContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Frame.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.Source" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Frame.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.IsSharedSizeScopeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.DragIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ResizeBehavior" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.AllowsColumnReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.AllowsColumnReorder" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnCollectionProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.GridView.ColumnCollectionProperty" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContextMenuProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderToolTip" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.Width" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumnHeader.Column" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.RoleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumnHeader.Role" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenuProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewRowPresenter.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel">
      <summary>标识默认 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 创建面板用于控制项布局。</summary>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.DpiChangedEvent">
      <summary>一个 <see cref="T:System.Windows.RoutedEvent" /> 的 DPI 屏幕图像时更改。</summary>
      <returns>
        <see cref="T:System.Windows.RoutedEvent" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.ImageFailedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Image.ImageFailed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Image.ImageFailed" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Image.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Image.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchDirectionProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.StretchDirection" /> 依赖属性。</summary>
      <returns>标识符 <see cref="T:System.Windows.Controls.StretchDirection" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Image.Stretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Image.Stretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.GestureEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.HasItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.TargetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Label.Target" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Label.Target" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectedItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ListBoxItem.Selected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ListBoxItem.Selected" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListView.ViewProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListView.View" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ListView.View" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingEndedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingStartedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaEndedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaFailedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaOpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScriptCommandEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Menu.IsMainMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Click" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IconProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Icon" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.Icon" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.InputGestureTextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsPressedProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.RoleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Role" /> 依赖属性。</summary>
      <returns>标识符 <see cref="T:System.Windows.Controls.MenuItemRole" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UncheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Background" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Background" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Content" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Content" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.FontFamily" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Page.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.FontSize" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Page.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Foreground" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Page.KeepAliveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Page.TemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Template" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Template" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TitleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Title" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Panel.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.ZIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>标识路由的 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSortProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖属性键的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖属性键的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖属性键的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖属性键的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依赖属性。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
      <summary>该命令，以通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> ，用户正在拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</summary>
      <returns>当用户拖动时发生命令 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 上 <see cref="T:System.Windows.Controls.ScrollViewer" /> ，启用了延迟滚动。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
      <summary>该命令，以通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> ，用户正在拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 该垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</summary>
      <returns>该命令，以通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> ，用户正在拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 该垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在垂直方向的增大值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在垂直方向的增大值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在水平方向的减小值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在水平方向的减小值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在水平方向增加的值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在水平方向增加的值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在垂直方向的减小值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 在垂直方向的减小值的小幅度其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在垂直方向的值增加其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在垂直方向的值增加其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在水平方向的减小值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在水平方向的减小值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在水平方向增加的值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在水平方向增加的值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在垂直方向的减小值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 大量在垂直方向的减小值的按其 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 打开鼠标单击的点到 <see cref="T:System.Windows.Controls.ContextMenu" /> 中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 打开鼠标单击的点到 <see cref="T:System.Windows.Controls.ContextMenu" /> 中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
      <summary>内容滚动到的右下角的命令 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件。</summary>
      <returns>内容滚动到的右下角的命令 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
      <summary>内容滚动到的窗口左上角的命令 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件。</summary>
      <returns>内容滚动到的窗口左上角的命令 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
      <summary>将水平滚动的命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</summary>
      <returns>将水平滚动的命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
      <summary>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>执行滚动操作使得该命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
      <summary>将垂直滚动的命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</summary>
      <returns>将垂直滚动的命令 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中提供的值 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
      <summary> 标识 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill" /> 依赖属性。 此属性是只读的。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed" /> 依赖属性。 此属性是只读的。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> 依赖属性。 此属性是只读的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> 依赖属性。 此属性是只读的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> 依赖属性。 此属性是只读的。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Maximum" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Minimum" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Orientation" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ProgressBar.Orientation" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ProgressBar.Orientation" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollContentPresenter.CanContentScrollProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentVerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningDecelerationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningRatioProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 路由事件。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.DelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Delay" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.IntervalProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Interval" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickFrequencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Slider.TicksProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Ticks" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.SoundPlayerAction.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.SpellingReformProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.AuthorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand">
      <summary>表示一个命令，该命令的 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法删除一个 <see cref="T:System.Windows.Controls.StickyNoteControl" />。</summary>
      <returns>可用来移除 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 的 <see cref="T:System.Windows.Input.RoutedCommand" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkCommand">
      <summary>表示一个命令，该命令的 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法将墨迹手写便笺中的光标切换到几种可能的模式之一，包括绘制和擦除。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkSchemaName">
      <summary>获取墨迹手写便笺批注的 XML 类型。</summary>
      <returns>墨迹 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 实例化的 XML 类型的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.TextSchemaName">
      <summary>获取文本手写便笺批注的 XML 类型。</summary>
      <returns>文本 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 实例化的类型的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.TabStripPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Background" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BaselineOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依赖属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CharacterCasingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MinLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextSearch.Text" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextSearch.Text" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.Band" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.Band" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.Orientation" /> 依赖属性。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性。</summary>
      <returns>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 由公开的事件对象，使用 <see cref="T:System.Windows.Controls.ToolTipService" /> 服务才能显示工具提示。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 由公开的事件对象，使用 <see cref="T:System.Windows.Controls.ToolTipService" /> 服务才能显示工具提示。</summary>
      <returns>标识符 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 依赖属性。</summary>
      <returns>标识符 <see cref="F:System.Windows.Controls.TreeView.SelectedValuePathProperty" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> 路由事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> 路由的事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> 依赖属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
      <summary>由 <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> 路由事件标识。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
      <summary>由 <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> 路由事件标识。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.VirtualizationModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>标识 VirtualizingStackPanel.VirtualizationMode 附加属性。</summary>
      <returns>标识符 VirtualizingStackPanel.VirtualizationMode 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.DoNothing">
      <summary>用作返回值以指示绑定引擎不执行任何操作。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.IndexerName">
      <summary>用作 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 来指示索引器属性已更改。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <summary>标识 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <summary>标识 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <summary>标识 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Data.CollectionViewSource.View" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.Margin" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
      <summary> 标识 <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.Height" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.Height" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.Width" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Background" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.BleedBox" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.DocumentPage.BleedBox" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Left" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Left" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Right" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Right" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Top" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Top" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Floater.Width" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Floater.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
      <summary>标识 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.MarkerOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.MarkerOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.MarkerStyle" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.MarkerStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.StartIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.StartIndex" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.StartIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.PageContent.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.PageContent.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.PageContent.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Run.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Run.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Table.CellSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Table.CellSpacing" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.Table.CellSpacing" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableColumn.Background" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableColumn.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableColumn.Width" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableColumn.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.Background" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.Background" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.BindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.CursorProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DataContextProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ForceCursorProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.InputScopeProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LanguageProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Language" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Language" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LoadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.NameProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Name" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.Name" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.StyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.TagProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Tag" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkContentElement.Tag" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.UnloadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> 路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.BindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ForceCursorProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Height" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.Height" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.InputScopeProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.InputScope" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.InputScope" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Language" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Language" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LayoutTransformProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.Loaded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.Loaded" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.Margin" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Margin" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Name" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.Name" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的标识符。在注册路由事件时创建路由事件标识符。 这些标识符包含标识名称、所有者类型、处理程序类型、路由策略和、添加事件所有者的实用程序方法。 可以使用这些标识符添加类处理程序。有关注册路由的事件的详细信息，请参阅 <see cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />。 有关使用路由事件标识符添加类处理程序的详细信息，请参阅 <see cref="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.SizeChangedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Style" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.Style" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Tag" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.Tag" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UnloadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkElement.Unloaded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.Unloaded" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依赖属性标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.Width" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.FrameworkElement.Width" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性。</summary>
      <returns>附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
      <summary>一个 <see cref="T:System.Windows.RoutedEvent" /> 的 DPI 屏幕 HwndHost 时更改。</summary>
      <returns>
        <see cref="T:System.Windows.RoutedEvent" />。</returns>
    </member>
    <member name="F:System.Windows.Localization.AttributesProperty">
      <summary>标识 <see cref="P:System.Windows.Localization.Attributes" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Localization.Attributes" /> 附加属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Localization.CommentsProperty">
      <summary>标识 <see cref="P:System.Windows.Localization.Comments" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Localization.Comments" /> 附加属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunctionProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextFormattingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextRenderingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> 附加属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> 附加属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
      <summary>声明 可扩展应用程序标记语言 (XAML) 内容类型。</summary>
      <returns>一个字符串，用于标识 可扩展应用程序标记语言 (XAML) 作为 Multipurpose Internet Mail Extensions (MIME) 类型。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.X1" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Line.X1" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.X2" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Line.X2" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.Y1" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.Y1" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.Y2" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Line.Y2" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Path.Data" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Path.Data" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依赖属性。 此字段为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依赖项属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CaptionHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CornerRadiusProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.WindowChromeProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>标识 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
      <summary>标识 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.AllowsTransparencyProperty">
      <summary>标识 <see cref="P:System.Windows.Window.AllowsTransparency" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.AllowsTransparency" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.DpiChangedEvent">
      <summary>一个 <see cref="T:System.Windows.RoutedEvent" /> 屏幕窗口中的 DPI 时更改。</summary>
      <returns>
        <see cref="T:System.Windows.RoutedEvent" />。</returns>
    </member>
    <member name="F:System.Windows.Window.IconProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Icon" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.Icon" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.IsActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Window.IsActive" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.IsActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Left" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.Left" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.ResizeModeProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ResizeMode" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.ResizeMode" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowActivatedProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ShowActivated" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.ShowActivated" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowInTaskbarProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ShowInTaskbar" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.ShowInTaskbar" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.SizeToContentProperty">
      <summary>标识 <see cref="P:System.Windows.Window.SizeToContent" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.SizeToContent" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.TaskbarItemInfoProperty">
      <summary>标识 <see cref="P:System.Windows.Window.TaskbarItemInfo" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.TaskbarItemInfo" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.TitleProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Title" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.Title" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.TopmostProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Topmost" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Topmost" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Top" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.Top" /> 依赖项属性。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStateProperty">
      <summary>标识 <see cref="P:System.Windows.Window.WindowState" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.WindowState" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Window.WindowStyle" /> 依赖属性。</summary>
      <returns>标识符 <see cref="P:System.Windows.Window.WindowStyle" /> 依赖项属性。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.#ctor">
      <summary>提供对基类值在被派生类的构造函数调用时初始化。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
      <summary>确定是否存在足够的权限来显示一个对话框。</summary>
      <exception cref="T:System.Security.SecurityException">如果不存在足够的权限以显示对话框。</exception>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>定义要重写的通用对话框挂钩过程，以便向通用对话框添加特定功能。</summary>
      <param name="hwnd">Win32 对话框的窗口句柄。</param>
      <param name="msg">要处理的 Windows 消息 Win32 对话框。</param>
      <param name="wParam">用于对话框操作的参数。</param>
      <param name="lParam">用于对话框操作的参数。</param>
      <returns>始终返回 <see cref="F:System.IntPtr.Zero" />。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.Reset">
      <summary>当在派生类中重写，将通用对话框的属性重置为其默认值。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
      <summary>当在派生类中重写调用以显示特定类型的 Win32 通用对话框。</summary>
      <param name="hwndOwner">拥有对话框中的窗口句柄。</param>
      <returns>如果用户单击 确定 按钮将显示对话框 (例如 <see cref="T:Microsoft.Win32.OpenFileDialog" />, ，<see cref="T:Microsoft.Win32.SaveFileDialog" />)， true 返回; 否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
      <summary>显示通用对话框。</summary>
      <returns>如果用户单击对话框中显示确定按钮 (例如 <see cref="T:Microsoft.Win32.OpenFileDialog" />, ，<see cref="T:Microsoft.Win32.SaveFileDialog" />)， true 返回; 否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
      <summary>显示通用对话框。</summary>
      <param name="owner">对话框所在的窗口的句柄。</param>
      <returns>如果用户单击对话框中显示确定按钮 (例如 <see cref="T:Microsoft.Win32.OpenFileDialog" />, ，<see cref="T:Microsoft.Win32.SaveFileDialog" />)， true 返回; 否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.FileDialog" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>定义要重写的通用文件对话框挂钩过程，以便向文件对话框添加通用功能。</summary>
      <param name="hwnd">Win32 对话框的窗口句柄。</param>
      <param name="msg">要由 Win32 对话框进行处理的消息。</param>
      <param name="wParam">用于对话框操作的参数。</param>
      <param name="lParam">用于对话框操作的参数。</param>
      <returns>返回 <see cref="F:System.IntPtr.Zero" /> 以指示成功；否则返回非零值以指示失败。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Win32.FileDialog.FileOk" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.Reset">
      <summary>将文件对话框的所有属性设置回其初始值。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
      <summary>调用 <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> 以在派生类中显示文件对话框，如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />。</summary>
      <param name="hwndOwner">对话框所在的窗口的句柄。</param>
      <returns>如果用户单击显示的对话框（例如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）的“确定”按钮，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.ToString">
      <summary>返回表示文件对话框的字符串。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.FileDialog" /> 的 <see cref="T:System.String" /> 表示形式，其中包含从 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 选择的任何文件的完整路径名。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.Guid)">
      <summary>新实例初始化 <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> 类，具有指定的已知文件夹 GUID。</summary>
      <param name="knownFolder">已知文件夹 GUID。</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> 类，具有指定的路径。</summary>
      <param name="path">文件夹的路径。</param>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
      <summary>打开的文件的用户通过选择一个只读流 <see cref="T:Microsoft.Win32.OpenFileDialog" />。</summary>
      <returns>一个新 <see cref="T:System.IO.Stream" /> ，其中包含所选的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未不选定任何文件。</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
      <summary>创建一个数组，包含为用户使用选择的每个文件的一个只读流 <see cref="T:Microsoft.Win32.OpenFileDialog" />。</summary>
      <returns>多个新的数组 <see cref="T:System.IO.Stream" /> 对象，其中包含所选的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未不选定任何文件。</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.Reset">
      <summary>将重置所有 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 为其默认值的属性。</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
      <summary>创建用户使用选定的文件名的读 / 写文件流 <see cref="T:Microsoft.Win32.SaveFileDialog" />。</summary>
      <returns>一个新 <see cref="T:System.IO.Stream" /> ，其中包含所选的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未不选定任何文件。</exception>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.Reset">
      <summary>将重置所有 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 为其默认值的属性。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.UIElement" /> 的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>元素的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 属性值。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>将 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性的值设置为指定的元素。</summary>
      <param name="element">要向其写入附加属性的元素。</param>
      <param name="value">所需的 <see cref="T:System.Boolean" /> 值。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.Annotation" /> 类，该类具有指定的类型名称和命名空间。</summary>
      <param name="annotationType">批注的类型名称。</param>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName,System.Guid,System.DateTime,System.DateTime)">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。</summary>
      <param name="annotationType">批注的类型名称。</param>
      <param name="id">globally unique identifier (GUID) 的批注。</param>
      <param name="creationTime">日期和时间首次创建批注中。</param>
      <param name="lastModificationTime">日期和批注的上次修改的时间。</param>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.GetSchema">
      <summary>始终返回 null。  请参阅 批注架构 有关架构的详细信息。</summary>
      <returns>总是为 null。  请参阅 批注架构 有关架构的详细信息。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.ReadXml(System.Xml.XmlReader)">
      <summary>从指定的 <see cref="T:System.Xml.XmlReader" /> 反序列化 <see cref="T:System.Windows.Annotations.Annotation" />。</summary>
      <param name="reader">要用于对批注进行反序列化的 XML 读取器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.Annotation" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.WriteXml(System.Xml.XmlWriter)">
      <summary>对指定 <see cref="T:System.Xml.XmlWriter" /> 的批注进行序列化。</summary>
      <param name="writer">要用于对批注进行序列化的 XML 编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Object)">
      <summary> 初始化 <see cref="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs" /> 类的新实例。</summary>
      <param name="annotation">引发事件的批注。</param>
      <param name="action">作者操作执行 ︰ <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, ，<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, ，或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />。</param>
      <param name="author">正在更改的事件的作者对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> 是一个无效 <see cref="T:System.Windows.Annotations.AnnotationAction" />。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类基于指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 和批注存储 <see cref="T:System.IO.Stream" />。</summary>
      <param name="originalPaginator">要打印将批注添加到的文档。</param>
      <param name="annotationStore">要从中检索批注的批注存储流。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类基于指定 <see cref="T:System.Windows.Documents.DocumentPaginator" />, ，批注存储 <see cref="T:System.IO.Stream" />, ，和文本 <see cref="T:System.Windows.FlowDirection" />。</summary>
      <param name="originalPaginator">要打印将批注添加到的文档。</param>
      <param name="annotationStore">要从中检索批注的批注存储流。</param>
      <param name="flowDirection">文本流方向， <see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类基于指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 和 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />。</summary>
      <param name="originalPaginator">要打印将批注添加到的文档。</param>
      <param name="annotationStore">要从中检索批注的存储区。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类基于指定 <see cref="T:System.Windows.Documents.DocumentPaginator" />, ，<see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />, ，和文本 <see cref="T:System.Windows.FlowDirection" />。</summary>
      <param name="originalPaginator">要打印将批注添加到的文档。</param>
      <param name="annotationStore">要从中检索批注的存储区。</param>
      <param name="flowDirection">文本流方向， <see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)">
      <summary>取消使用给定 <paramref name="userState" /> 对象启动的所有异步操作。</summary>
      <param name="userState">在用于启动异步操作的调用中传递的由应用程序定义的唯一标识符。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount">
      <summary>强制的内容，更新分页 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 具有新的总和集 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 到 true。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)">
      <summary>启动内容的异步分页，使用新的总计更新 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />，然后在完成时将 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 设置为 true。</summary>
      <param name="userState">用于标识异步操作的应用程序定义的对象。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 以及指定的页号关联的用户的批注。</summary>
      <param name="pageNumber">从零开始的页码 <see cref="T:System.Windows.Documents.DocumentPage" /> 返回。</param>
      <returns>
        <see cref="T:System.Windows.Documents.DocumentPage" /> 指定 <paramref name="pageNumber" />; 或 <see cref="F:System.Windows.Documents.DocumentPage.Missing" />, ，如果指定 <paramref name="pageNumber" /> 不存在。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)">
      <summary>以异步方式返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 以及指定的页号关联的用户的批注。</summary>
      <param name="pageNumber">要检索的 <see cref="T:System.Windows.Documents.DocumentPage" /> 的从零开始的页码。</param>
      <param name="userState">用于标识异步操作的应用程序定义的对象。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.ClearHighlightsForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>清除所有突出显示与关联的查看器控件的当前选择从注释给定 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">要从中删除的批注服务突出显示批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateHighlightForSelection(System.Windows.Annotations.AnnotationService,System.String,System.Windows.Media.Brush)">
      <summary>使用指定关联的查看器控件对当前选定内容创建突出显示批注 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">要用于创建突出显示批注的批注服务。</param>
      <param name="author">批注的作者。</param>
      <param name="highlightBrush">要用来绘制突出显示对所选内容的画笔。</param>
      <returns>突出显示批注;或 null, ，如果没有选定的内容以突出显示。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。- 或 -<paramref name="highlightBrush" /> 在不 <see cref="T:System.Windows.Media.SolidColorBrush" />。</exception>
      <exception cref="T:System.InvalidOperationException">该查看器控件包含任何内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateInkStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>创建的墨迹手写便笺批注的查看器控件对当前选定内容关联的 <see cref="T:System.Windows.Annotations.AnnotationService" />...</summary>
      <param name="service">要用于创建墨迹手写便笺批注的批注服务。</param>
      <param name="author">批注的作者。</param>
      <returns>墨迹手写便笺批注;或 null, ，如果没有选定的内容进行批注。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
      <exception cref="T:System.InvalidOperationException">该查看器控件包含任何内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateTextStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>创建一个与指定关联的查看器控件对当前选定内容的粘滞便笺批注的文本 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">要用于创建文本手写便笺批注的批注服务。</param>
      <param name="author">批注的作者。</param>
      <returns>文本手写便笺批注;或 null, ，如果没有选定的内容进行批注。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
      <exception cref="T:System.InvalidOperationException">该查看器控件包含任何内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteInkStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>删除粘滞便笺批注完全包含在查看器控件的当前所选内容中与相关联的墨迹给定 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">从其要删除墨迹手写便笺批注的批注服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteTextStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>删除与完全包含在当前选择的查看器控件中的粘滞便笺批注关联的文本给定 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">从其删除文本粘滞便笺批注的批注服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.GetAnchorInfo(System.Windows.Annotations.AnnotationService,System.Windows.Annotations.Annotation)">
      <summary>返回 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 提供锁定有关的信息，如定位点位置，指定的批注的对象。</summary>
      <param name="service">要用于此操作的注释服务。</param>
      <param name="annotation">要获取定位信息的批注。</param>
      <returns>
        <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象，它提供有关指定批注的定位信息或 null 如果无法解析。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.Guid)">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <param name="id">globally unique identifier (GUID) 标识此资源。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 等于 Guid.Empty。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.String)">
      <summary>使用指定的名称初始化 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 类的新实例。</summary>
      <param name="name">一个名称以标识此资源从其他 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 和 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 在相同的批注中定义。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.GetSchema">
      <summary>始终返回 null。  请参阅 批注架构 有关架构的详细信息。</summary>
      <returns>总是为 null。  请参阅 批注架构 有关架构的详细信息。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.ReadXml(System.Xml.XmlReader)">
      <summary>反序列化 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 从指定 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader">要反序列化的 XML 读取器 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 从。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.Xml.XmlException">有关序列化的 XML <see cref="T:System.Windows.Annotations.AnnotationResource" /> 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.WriteXml(System.Xml.XmlWriter)">
      <summary>将序列化为 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 与指定 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer">要序列化的 XML 编写器 <see cref="T:System.Windows.Annotations.AnnotationResource" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)">
      <summary>初始化 <see cref="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)" /> 类的新实例。</summary>
      <param name="annotation">引发事件的批注。</param>
      <param name="action">该事件的操作。</param>
      <param name="resource">
        <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 事件的资源。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 为 null。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> 不是有效 <see cref="T:System.Windows.Annotations.AnnotationAction" /> 值。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类用于指定 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 控件。</summary>
      <param name="viewer">读取控件与相关联的文档 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类用于指定 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 控件。</summary>
      <param name="viewer">文档查看与关联的控件 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类用于指定 <see cref="T:System.Windows.Controls.DocumentViewer" /> 或 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 控件。</summary>
      <param name="viewer">文档查看与关联的控件 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Disable">
      <summary>禁用批注处理，并隐藏所有可见的批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Enable(System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>使 <see cref="T:System.Windows.Annotations.AnnotationService" /> 适用于给定 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 并显示所有可见的批注。</summary>
      <param name="annotationStore">要用于读取、 写入和显示批注的批注存储区。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotationStore" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentReader)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 关联与指定 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <param name="reader">要返回的文档读取器控件 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例。</param>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定的文档读取器控件; 关联或 null 如果指定的文档读取器没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 关联与指定 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <param name="viewer">若要返回的文档查看器控件 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例。</param>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定的文档查看器控件; 关联或 null 如果指定的查看器控件没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例与指定的文档查看控件相关联。</summary>
      <param name="viewer">文档查看控件返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例。</param>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定的文档查看控件，则关联或 null 如果指定的文档查看控件没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.ContentLocator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocator" /> 的可修改深层复制克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocator" /> 的可修改深层复制克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.GetSchema">
      <summary>始终返回 null。  请参阅 批注架构 有关架构的详细信息。</summary>
      <returns>总是为 null。  请参阅 批注架构 有关架构的详细信息</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.ReadXml(System.Xml.XmlReader)">
      <summary>从指定的 <see cref="T:System.Xml.XmlReader" /> 反序列化 <see cref="T:System.Windows.Annotations.ContentLocator" />。</summary>
      <param name="reader">要用于对 <see cref="T:System.Windows.Annotations.ContentLocator" /> 进行反序列化的 XML 读取器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)">
      <summary>返回一个值，该值指示是否的起始序列化的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 中指定的元素 <see cref="T:System.Windows.Annotations.ContentLocator" /> 与此相同 <see cref="T:System.Windows.Annotations.ContentLocator" />。</summary>
      <param name="locator">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> 与的列表 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素要与此比较 <see cref="T:System.Windows.Annotations.ContentLocator" />。</param>
      <returns>true 如果的起始序列 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 中此元素 <see cref="T:System.Windows.Annotations.ContentLocator" /> 匹配那些在指定 <paramref name="locator" />; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="locator" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.WriteXml(System.Xml.XmlWriter)">
      <summary>将 <see cref="T:System.Windows.Annotations.ContentLocator" /> 序列化为指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer">要用于对 <see cref="T:System.Windows.Annotations.ContentLocator" /> 进行序列化的 XML 编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorBase.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> 的可修改深层复制克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> 的可修改深层复制克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 的可修改深层复制克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 的可修改深层复制克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.GetSchema">
      <summary>始终返回 null。  请参阅 批注架构 有关架构的详细信息。</summary>
      <returns>总是为 null。  请参阅 批注架构 有关架构的详细信息。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.ReadXml(System.Xml.XmlReader)">
      <summary>从指定的 <see cref="T:System.Xml.XmlReader" /> 反序列化 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</summary>
      <param name="reader">要用于对 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 进行反序列化的 XML 读取器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>将 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 序列化为指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer">要用于对 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 进行序列化的 XML 编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.#ctor(System.Xml.XmlQualifiedName)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 具有指定的类型名称和命名空间的类。</summary>
      <param name="partType">类型名称和命名空间 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partType" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">字符串 <paramref name="partType" />。<see cref="P:System.Xml.XmlQualifiedName.Name" /> 或 <paramref name="partType" />。<see cref="P:System.Xml.XmlQualifiedName.Namespace" /> （或两者） 被 null 或为空。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 的可修改深层复制克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 的可修改深层复制克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Equals(System.Object)">
      <summary>返回一个值，该值指示是否给定 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 是否与此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />。</summary>
      <param name="obj">要比较相等的部件。</param>
      <returns>true 如果 <see cref="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs" /> 在这两个部分都相同; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.GetHashCode">
      <summary>返回此部分的哈希代码。</summary>
      <returns>此部分的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>将新 <see cref="T:System.Windows.Annotations.Annotation" /> 添加到存储区中。</summary>
      <param name="newAnnotation">要添加到存储区的批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Annotations.Annotation" /> 具有相同 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性值已存在存储区中。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)">
      <summary>从存储区中删除具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</summary>
      <param name="annotationId">要删除的批注的globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <returns>已删除的批注；如果在存储区中未找到具有指定 <paramref name="annotationId" /> 的批注，则为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose">
      <summary>释放由存储区占用的所有托管和非托管资源。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)">
      <summary>释放由存储区占用的非托管资源，并有选择地释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize">
      <summary>保证最终为此存储区调用 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Flush">
      <summary>强制将内部缓冲区中保留的所有批注数据写入基础存储设备中。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)">
      <summary>从存储区中返回具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</summary>
      <param name="annotationId">要返回的批注的globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <returns>具有给定 <paramref name="annotationId" /> 的批注；如果在存储区中未找到具有指定 <paramref name="annotationId" /> 的批注，则为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations">
      <summary>返回存储区中所有批注的列表。</summary>
      <returns>存储区中当前包含的所有批注的列表。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>返回批注的列表，这些批注具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以匹配 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列开头。</summary>
      <param name="anchorLocator">为其返回匹配批注的起始 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列。</param>
      <returns>具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以给定 <paramref name="anchorLocator" /> 开始并与之匹配的批注列表；如果找不到匹配的批注，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)">
      <summary>初始化 <see cref="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)" /> 类的新实例。</summary>
      <param name="action">该事件的操作。</param>
      <param name="annotation">添加或删除该批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 类，具有指定的 I/O <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream">用于读取和写入用户批注的 I/O 流。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})">
      <summary>新实例初始化 <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 类，具有指定的 I/O <see cref="T:System.IO.Stream" /> 和已知兼容命名空间的字典。</summary>
      <param name="stream">用于读取和写入用户批注的 I/O 流。</param>
      <param name="knownNamespaces">具有已知兼容的命名空间的列表的字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="stream" /> 包含无效的 XML。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="knownNamespaces" /> 字典包含重复的命名空间。- 或 -<paramref name="knownNamespaces" /> 字典包含具有的元素 null 键。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>将新 <see cref="T:System.Windows.Annotations.Annotation" /> 添加到存储区中。</summary>
      <param name="newAnnotation">要添加到存储区的批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Annotations.Annotation" /> 具有相同 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 已经位于存储区。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 尚未设置用于存储。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)">
      <summary>从存储区中删除具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</summary>
      <param name="annotationId">要删除的批注的globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <returns>已删除的批注；如果在存储区中未找到具有指定 <paramref name="annotationId" /> 的批注，则为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 尚未设置用于存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush">
      <summary>强制将内部缓冲区中保留的所有批注数据写入基础存储设备中。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 尚未设置用于存储。</exception>
      <exception cref="T:System.UnauthorizedAccessException">存储 I/O <see cref="T:System.IO.Stream" /> 是只读的无法访问为输出。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)">
      <summary>从存储区中返回具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</summary>
      <param name="annotationId">要返回的批注的globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <returns>具有批注给定 <paramref name="annotationId" />; 否则为 null 如果具有指定的批注 <paramref name="annotationId" /> 找不到存储区中。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations">
      <summary>返回存储区中所有批注的列表。</summary>
      <returns>目前，存储区中的所有批注的列表。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了对存储区。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>返回批注的列表，这些批注具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以匹配 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列开头。</summary>
      <param name="anchorLocator">为其返回匹配批注的起始 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列。</param>
      <returns>具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以给定 <paramref name="anchorLocator" /> 开始并与之匹配的批注列表；如果找不到匹配的批注，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)">
      <summary>返回作为输入命名空间兼容的命名空间的列表。</summary>
      <param name="name">要返回的命名空间列表的起始 URI 序列。</param>
      <returns>兼容与匹配的命名空间的列表 <paramref name="name" />; 否则为 null 如果没有找到兼容的命名空间。</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.Equals(System.Object)">
      <summary>返回一个值，该值指示文本锚点是否等于指定的对象。</summary>
      <param name="obj">要比较的对象。</param>
      <returns>如果两个实例相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.GetHashCode">
      <summary>返回文本锚点实例的哈希代码。</summary>
      <returns>文本锚点实例哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Application" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">多个实例的 <see cref="T:System.Windows.Application" /> 类创建每个 <see cref="T:System.AppDomain" />。</exception>
    </member>
    <member name="M:System.Windows.Application.FindResource(System.Object)">
      <summary>搜索 用户界面 (UI) 资源，如 <see cref="T:System.Windows.Style" /> 或 <see cref="T:System.Windows.Media.Brush" />, 、 与指定的键，将引发异常，如果找不到所请求的资源 (请参阅 XAML 资源)。</summary>
      <param name="resourceKey">要查找的资源的名称。</param>
      <returns>所请求的资源对象。 如果未找到请求的资源， <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 引发。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">无法找到资源。</exception>
    </member>
    <member name="M:System.Windows.Application.GetContentStream(System.Uri)">
      <summary>返回位于指定的内容数据文件的资源流 <see cref="T:System.Uri" /> (请参阅 WPF 应用程序资源、 内容和数据文件)。</summary>
      <param name="uriContent">使用相对 <see cref="T:System.Uri" /> ，它映射到松散资源。</param>
      <returns>一个 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> ，其中包含位于指定的内容数据文件 <see cref="T:System.Uri" />。 如果未找到松散资源，则返回 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Uri.OriginalString" /> 属性 <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> 是绝对 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.Windows.Application.GetCookie(System.Uri)">
      <summary>检索由指定的位置的 cookie <see cref="T:System.Uri" />。</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> 指定为其创建 cookie 的位置。</param>
      <returns>一个 <see cref="T:System.String" /> 值，如果存在 cookie; 否则为 <see cref="T:System.ComponentModel.Win32Exception" /> 引发。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">一个 Win32 错误由 InternetGetCookie 函数 (由调用 <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />) 如果在尝试检索指定的 cookie 出现问题。</exception>
    </member>
    <member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
      <summary>返回位于指定的源站点的数据文件的资源流 <see cref="T:System.Uri" /> (请参阅 WPF 应用程序资源、 内容和数据文件)。</summary>
      <param name="uriRemote">
        <see cref="T:System.Uri" /> ，它映射到在源站点的松散资源。</param>
      <returns>一个 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> ，其中包含位于指定的源站点的数据文件的资源流 <see cref="T:System.Uri" />。 如果未找到松散资源， null 返回。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Uri.OriginalString" /> 属性 <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> 或者不相对的或者是绝对地址而不是在 pack://siteoforigin:,,,/ 窗体。</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>返回位于指定的资源数据文件的资源流 <see cref="T:System.Uri" /> (请参阅 WPF 应用程序资源、 内容和数据文件)。</summary>
      <param name="uriResource">
        <see cref="T:System.Uri" /> ，它映射到嵌入的资源。</param>
      <returns>一个 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> ，其中包含位于指定的资源数据文件的资源流 <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Uri.OriginalString" /> 属性 <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 或者不相对的或者是绝对地址而不是在 pack://application:,,,/ 窗体。</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="T:System.Uri" /> 传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 找不到。</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>加载 XAML 位于指定的文件 uniform resource identifier (URI) 并将其转换到的根元素指定的对象实例 XAML 文件。</summary>
      <param name="component">与的根元素具有相同类型的对象 XAML 文件。</param>
      <param name="resourceLocator">一个 <see cref="T:System.Uri" /> ，它映射到一个相对 XAML 文件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Uri.OriginalString" /> 属性 <paramref name="resourceLocator" /><see cref="T:System.Uri" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> 是绝对 URI。</exception>
      <exception cref="T:System.Exception">
        <paramref name="component" /> 不匹配的根元素的类型 XAML 文件。</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Uri)">
      <summary>加载 XAML 位于指定的文件 uniform resource identifier (URI), ，并将其转换到的根元素指定的对象实例 XAML 文件。</summary>
      <param name="resourceLocator">一个 <see cref="T:System.Uri" /> ，它映射到一个相对 XAML 文件。</param>
      <returns>加载 XAML 文件中指定的根元素的一个实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Uri.OriginalString" /> 属性 <paramref name="resourceLocator" /><see cref="T:System.Uri" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> 是绝对 URI。</exception>
      <exception cref="T:System.Exception">该文件不是 XAML 文件。</exception>
    </member>
    <member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Activated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Deactivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Exit" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.ExitEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.FragmentNavigation" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.LoadCompleted" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Navigated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Navigating" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationFailed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationProgress" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationStopped" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.SessionEnding" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.SessionEndingCancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Startup" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.StartupEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.Run">
      <summary>启动 Windows Presentation Foundation (WPF) 应用程序。</summary>
      <returns>
        <see cref="T:System.Int32" /> 在应用程序关闭时，返回给操作系统的应用程序退出代码。 默认情况下，退出代码值为 0。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> 从浏览器承载的应用程序调用 (例如， XAML 浏览器应用程序 (XBAP))。</exception>
    </member>
    <member name="M:System.Windows.Application.Run(System.Windows.Window)">
      <summary>启动 Windows Presentation Foundation (WPF) 应用程序，并打开在指定的时段。</summary>
      <param name="window">一个 <see cref="T:System.Windows.Window" /> 应用程序启动时自动打开。</param>
      <returns>
        <see cref="T:System.Int32" /> 在应用程序关闭时，返回给操作系统的应用程序退出代码。 默认情况下，退出代码值为 0。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> 从浏览器承载的应用程序调用 (例如， XAML 浏览器应用程序 (XBAP))。</exception>
    </member>
    <member name="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
      <summary>创建指定的位置的 cookie <see cref="T:System.Uri" />。</summary>
      <param name="uri">
        <see cref="T:System.Uri" /> ，它指定应为其创建 cookie 的位置。</param>
      <param name="value">
        <see cref="T:System.String" /> ，其中包含 cookie 数据。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">一个 Win32 错误由 InternetSetCookie 函数 (由调用 <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />) 如果在尝试创建指定的 cookie 时出现问题。</exception>
    </member>
    <member name="M:System.Windows.Application.Shutdown">
      <summary>关闭应用程序。</summary>
    </member>
    <member name="M:System.Windows.Application.Shutdown(System.Int32)">
      <summary>关闭的应用程序将指定的退出代码返回给操作系统。</summary>
      <param name="exitCode">整数退出代码为应用程序的。 默认的退出代码为 0。</param>
    </member>
    <member name="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>针对指定的环境属性是可在当前范围内的查询。</summary>
      <param name="propertyName">请求的环境属性的名称。</param>
      <returns>true 如果请求的环境属性可用;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Application.TryFindResource(System.Object)">
      <summary>搜索指定的资源。</summary>
      <param name="resourceKey">要查找的资源的名称。</param>
      <returns>所请求的资源对象。 如果找不到所请求的资源，则返回空引用。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
      <summary>确定是否当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework 特性 是否与指定对象相等。 </summary>
      <param name="obj">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 要与当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />。</param>
      <returns>如果指定的 true 等于当前的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />，则为 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.NET Framework 特性 的哈希代码。</summary>
      <returns>32 位无符号整数值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 UI 自动化 对等关联的元素的控件类型。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 UI 自动化 对等机关联的控件的名称。</summary>
      <returns>包含“Button”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取支持相应元素指定的控件模式的对象，其中该元素与此自动化对关联。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>提供对基类值在被派生类的构造函数调用时初始化。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 此对等方与该键相关联。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAcceleratorKeyCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" /> 相关联的元素的加速键。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> 调用。</summary>
      <returns>包含加速键的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAutomationIdCore">
      <summary>获取 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 与此相关联的元素为 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</summary>
      <returns>字符串，其中包含 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>获取与此相关联的元素的类的名称 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>一个字符串，包含的类名称，减去加速键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取支持相应元素指定的控件模式的对象，其中该元素与此自动化对关联。</summary>
      <param name="patternInterface">一个指定控件模式的枚举值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />, ，<see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, ，<see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />, ，或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, ，此方法返回 this 指针; 否则，此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序。</summary>
      <param name="row">相关行的序号。</param>
      <param name="column">相关列的序号。</param>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>检索由指定的属性值的元素。</summary>
      <param name="startAfterProvider">将在其后开始搜索的容器中的项。</param>
      <param name="propertyId">包含要检索的值的属性。</param>
      <param name="value">要检索的值。</param>
      <returns>第一项相匹配的搜索条件;否则为 null 如果任何项不匹配。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>检索特定于控件的视图标识符的集合。</summary>
      <returns>标识可用于 UI 自动化元素的视图的值的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>检索特定于控件的视图的名称。</summary>
      <param name="viewId">视图的标识符。</param>
      <returns>视图的本地化的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>设置当前的特定于控件的视图。</summary>
      <param name="viewId">一个视图标识符。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> 不是受支持的视图集合的成员。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索所选的每个子元素的 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>获取表示表中所有列标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>检索表示表格中所有行标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.CheckBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> 关联的元素的 <see cref="T:System.Windows.Automation.Peers.AutomationControlType" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> 相关联的元素的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“CheckBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ComboBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetChildrenCore">
      <summary>获取子元素的集合。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>获取定义与此关联的类型的类的名称 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"组合框"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 的控件模式。</summary>
      <param name="pattern">枚举值之一。</param>
      <returns>如果 <paramref name="pattern" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，此方法将返回对 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 的当前实例的引用；否则，此方法将对 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 调用基实现。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.SetFocusCore">
      <summary>将键盘输入的焦点设置在 <see cref="T:System.Windows.Controls.ComboBox" /> 与此关联的控件 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 对象。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> 调用。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ComboBox" /> 与此关联的控件 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 对象不能接收焦点。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="val"> 控件的字符串值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContentTextAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>提供对基类值在被派生类的构造函数调用时初始化。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Automation.TextPattern" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContentTextAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.#ctor(System.Windows.Controls.ContextMenu)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ContextMenu" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ContextMenu" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ContextMenu" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"ContextMenu"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />, ，<see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />, ，或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, ，此方法返回 this 指针; 否则，此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序。</summary>
      <param name="row">相关行的序号。</param>
      <param name="column">相关列的序号。</param>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索所选的每个子元素的 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>获取表示表中所有列标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>检索表示表格中所有行标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">一个指定控件模式的枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">程序与此自动化同级元素。</param>
      <param name="dataGridColumn">
        <see cref="T:System.Windows.Controls.DataGrid" /> 列， <paramref name="item" /> 中。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">一个指定控件模式的枚举。</param>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象时，如果 <paramref name="patternInterface" /> 是支持的值; 否则为 null。 有关更多信息，请参见“备注”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送请求以激活控件并启动其单一、明确的操作。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>滚动容器对象的内容区域，以便显示该容器的可见区域 （视区） 内的控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>将当前元素添加到选定项的集合。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>取消选择任何所选的项目，然后选择当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索用来表示与表项或单元格关联的所有列标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索用来表示与表项或单元格关联的所有行标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>设置控件的值。</summary>
      <param name="value">要设置的值。 提供程序负责将值转换为适当的数据类型。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.DataGridCell" /> 对象，它是与此关联 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象是只读的。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项完全可访问性的 UI 自动化元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 中 <see cref="T:System.Windows.Controls.DataGridColumn" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。</param>
      <param name="column">与之关联的列 <see cref="P:System.Windows.Controls.DataGridColumn.Header" />。</param>
      <param name="peer">对于自动化对等方 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 关联 <see cref="T:System.Windows.Controls.DataGrid" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此关联的标头控件类型 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetClassNameCore">
      <summary>获取将区分开来由此所表示的标头的名称 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>类型名称 <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 属性与此关联 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">一个指定控件模式的枚举值。</param>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 对象时，如果 <paramref name="patternInterface" /> 是支持的值; 否则为 null。 有关更多信息，请参见“备注”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送请求以激活控件并启动其单一、明确的操作。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>标头和与之关联的列滚动 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 到视图。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>在所有情况下，将引发异常。</summary>
      <param name="x">未使用此参数。</param>
      <param name="y">未使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>调整与关联的列的宽度 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。</summary>
      <param name="width">新列的宽度，以像素为单位。</param>
      <param name="height">未使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">与此关联的列 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 无法调整大小。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>在所有情况下，将引发异常。</summary>
      <param name="degrees">未使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟列可为 UI 自动化元素完全访问。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>检索具有指定的属性值的元素。</summary>
      <param name="startAfter">将在其后开始搜索的容器中的项。</param>
      <param name="propertyId">包含要检索的值的属性。</param>
      <param name="value">要检索的值。</param>
      <returns>第一项相匹配的搜索条件;否则为 null 如果任何项不匹配。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.DataGridAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />。</param>
      <param name="dataGridPeer">
        <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.DataGrid" /> ，它持有 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">一个指定控件模式的枚举值。</param>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象时，如果 <paramref name="patternInterface" /> 是支持的值; 否则为 null。 有关更多信息，请参见“备注”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送请求以激活控件并启动其单一、明确的操作。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>检索由指定的属性值的元素。</summary>
      <param name="startAfter">将在其后开始搜索的容器中的项。</param>
      <param name="propertyId">包含要检索的值的属性。</param>
      <param name="value">要检索的值。</param>
      <returns>第一项相匹配的搜索条件;否则为 null 如果任何项不匹配。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>滚动容器对象来显示容器的可见区域 （视区） 中的控件的内容区域。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>将当前元素添加到选定项的集合。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除任何所选的项目，然后选择当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索所选的每个子元素的 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此自动化对等类关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">一个指定控件模式的枚举值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" />, ，此方法返回 this 指针; 否则，此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>隐藏所有节点、 控件或后代控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>显示所有子节点、 控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>设置控件的值。</summary>
      <param name="value">要设置的值。 提供程序负责将值转换为适当的数据类型。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取此控件模式实现 <see cref="T:System.Windows.Automation.Peers.DateTimeAutomationPeer" />。</summary>
      <param name="patternInterface">要检索的元素的实现模式的类型。</param>
      <returns>实现模式接口的对象或 null 如果指定的模式接口未实现此对等方。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送请求以激活控件并启动其单一、明确的操作。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>将当前元素添加到选定项的集合。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除任何所选的项目，然后选择当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索表示与某个表项或单元格关联的所有列标题的 UI 自动化提供程序集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索表示与某个表项或单元格关联的所有行标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项完全可访问性的 UI 自动化元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 关联的控件的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>在所有情况下均为 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetBoundingRectangleCore">
      <summary>获取 <see cref="T:System.Windows.Rect" /> ，它表示与此关联的元素的屏幕坐标 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> 调用。</summary>
      <returns>绑定矩形。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetChildrenCore">
      <summary>获取子元素的集合 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>因为 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 提供访问权限通过其内容 <see cref="T:System.Windows.Automation.TextPattern" />, ，此方法始终返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"文档"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClickablePointCore">
      <summary>获取 <see cref="T:System.Windows.Point" /> ，表示位于可点击空间 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>表示位于元素上的可点击空间的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 关联的 <see cref="T:System.Windows.FrameworkContentElement" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，则此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 理解为交互式元素的最终用户或用户可能了解 <see cref="T:System.Windows.FrameworkContentElement" /> 为组成的逻辑结构中的控件的 GUI。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsOffscreenCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 是否不在屏幕。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> 调用。</summary>
      <returns>如果该元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentPageView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识的字符串 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</summary>
      <returns>一个字符串，其中包含的自动化标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.#ctor(System.Windows.Controls.DocumentViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.DocumentViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.DocumentViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"DocumentViewer"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.DocumentViewer" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />，则此方法返回此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。 此方法还将 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 设置为 <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"DocumentViewer"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，则此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 引用。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Expander" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Expander" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Expander" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"扩展器"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Expander" /> 的控件模式。</summary>
      <param name="pattern">枚举值之一。</param>
      <returns>如果 <paramref name="pattern" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，此方法将返回对 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 的当前实例的引用，否则此方法将对返回 null 的 <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> 调用基实现。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.#ctor(System.Windows.Documents.FixedPage)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Documents.FixedPage" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.FixedPage" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Documents.FixedPage" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"FixedPage"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentPageViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"FlowDocumentPageViewer"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>名称 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />，则此方法返回 this 指针。 否则，该方法将返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>返回特定于控件的视图标识符的集合。</summary>
      <returns>标识可用于 UI 自动化元素的视图的值的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>返回特定于控件的视图的名称。</summary>
      <param name="viewId">视图的 ID。</param>
      <returns>特定于控件的视图的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>设置当前的特定于控件的视图。</summary>
      <param name="viewId">视图的 ID。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"FlowDocumentScrollViewer"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Frame" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Frame" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Frame" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"框架"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识的字符串 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</summary>
      <returns>用于唯一标识的字符串 <see cref="T:System.Windows.FrameworkContentElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetHelpTextCore">
      <summary>获取字符串，其中描述的功能的 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> 调用。</summary>
      <returns>一个字符串，描述元素的功能。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetLabeledByCore">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Label" /> 目标为 <see cref="T:System.Windows.FrameworkContentElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Label" /> 所使用的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.FrameworkElement" /> 关联的 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识的字符串 <see cref="T:System.Windows.FrameworkElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</summary>
      <returns>相关联的元素的自动标识符 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />, ，或 <see cref="F:System.String.Empty" /> 如果没有自动标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>获取用于描述与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的功能的字符串。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> 调用。</summary>
      <returns>帮助文本，通常是从 <see cref="T:System.Windows.Controls.ToolTip" />, ，或 <see cref="F:System.String.Empty" /> 如果没有任何帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的文本标签。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>程序与此自动化同级元素文本标签。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GridSplitter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.GridSplitter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"GridSplitter"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> 的控件模式。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="x"> 此控件左侧的绝对屏幕坐标。</param>
      <param name="y"> 此控件顶部的绝对屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="width"> 窗口的新宽度（以像素为单位）。</param>
      <param name="height"> 窗口的新高度（以像素为单位）。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="degrees">度来旋转该控件的数量。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.#ctor(System.Windows.Controls.GridView,System.Windows.Controls.ListView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Controls.GridView" /> 关联的 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</param>
      <param name="listview">
        <see cref="T:System.Windows.Controls.ListView" /> ， <see cref="T:System.Windows.Controls.GridView" /> 用作视图模式。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">若要创建的项。</param>
      <returns>创建的项。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetAutomationControlType">
      <summary>获取与此关联的元素的控件类型 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</summary>
      <returns>枚举中的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>获取指定的直接子元素的集合 UI 自动化 对等方。</summary>
      <param name="children">你想要获取的子对象的集合。</param>
      <returns>子对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <paramref name="patternInterface" /> 关联的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />, ，此方法返回实现该控件模式的对象，否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>项的集合发生更改时调用。</summary>
      <param name="e">与事件关联的数据。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ViewDetached">
      <summary>自定义视图不再应用到控件时调用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>返回指定的单元格的 UI 自动化提供程序。</summary>
      <param name="row">相关行的序号。</param>
      <param name="column">相关列的序号。</param>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>返回表示表中的所有列标题的 UI 自动化提供程序集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>返回表示表中的所有行标题的 UI 自动化提供程序集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 关联的元素的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>如果此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 与 <see cref="T:System.Windows.Controls.TextBlock" /> 元素关联，则此方法将返回 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />；否则此方法将返回 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetClassNameCore">
      <summary>获取与此关联的元素的名称 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 关联的元素的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.TableItem" />，则此方法返回当前 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示是否该元素，与此关联 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 理解为交互式元素的最终用户或用户可以理解为组成的逻辑结构中的控件的元素 GUI。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>如果此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 与关联 <see cref="T:System.Windows.Controls.TextBlock" /> 元素，则此方法返回 true; 否则为此方法返回子元素的列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索表示与某个表项或单元格关联的所有列标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索表示与某个表项或单元格关联的所有行标题的 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.GridViewColumnHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"GridViewColumnHeader"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="x"> 此控件左侧的绝对屏幕坐标。</param>
      <param name="y"> 此控件顶部的绝对屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="width"> 窗口的新宽度（以像素为单位）。</param>
      <param name="height"> 窗口的新高度（以像素为单位）。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="degrees"> 度来旋转该控件的数量。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.#ctor(System.Windows.Controls.GridViewHeaderRowPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Header" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"GridViewHeaderRowPresenter"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ListViewAutomationPeer)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 关联的数据项。</param>
      <param name="listviewAP">为此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 的父级的 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.DataItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的子元素的集合。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“ListViewItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.#ctor(System.Windows.Controls.GroupBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GroupBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.GroupBox" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.GroupBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"组合框"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的文本标签。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.#ctor(System.Windows.Controls.GroupItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GroupItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.GroupItem" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.GroupItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.GroupItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"GroupItem"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取控件模式对于 <see cref="T:System.Windows.Controls.GroupItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="pattern" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> 和 <see cref="T:System.Windows.Controls.GroupItem" />这与该键相关联 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 包含 <see cref="T:System.Windows.Controls.Expander" />, ，此方法返回当前实例的引用 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />。  否则，此方法在调用基实现 <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> 它将返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.#ctor(System.Windows.Documents.Hyperlink)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Documents.Hyperlink" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Documents.Hyperlink" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"超链接"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetNameCore">
      <summary>获取的文本标签 <see cref="T:System.Windows.Documents.Hyperlink" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 相关联的 <see cref="T:System.Windows.Documents.Hyperlink" /> 是否被最终用户理解为交互式的，用户可能将 <see cref="T:System.Windows.Documents.Hyperlink" /> 理解为组成 GUI 中控件的逻辑结构。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Image" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Image" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Image" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Image" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"映像"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.#ctor(System.Windows.Controls.InkCanvas)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.InkCanvas" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.InkCanvas" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.InkCanvas" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"InkCanvas"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.#ctor(System.Windows.Controls.InkPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.InkPresenter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.InkPresenter" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.InkPresenter" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"InkPresenter"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>提供对基类值在被派生类的构造函数调用时初始化。</summary>
      <param name="item">中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</param>
      <param name="itemsControlAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.ItemsControl" /> ，它持有 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的加速键。</summary>
      <returns>加速键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>获取与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的访问键。</summary>
      <returns>访问键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识的字符串 <see cref="T:System.Windows.UIElement" /> 对应于中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <returns>一个字符串，包含 UI 自动化 标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>获取 <see cref="T:System.Windows.Rect" /> ，它表示指定的绑定矩形 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>绑定矩形。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.UIElement" /> 对应于中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>获取 <see cref="T:System.Windows.Point" /> ，表示位于指定的可单击空间 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>表示可点击空间对指定的点 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>获取字符串，其中描述的功能的 <see cref="T:System.Windows.UIElement" /> 对应于中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <returns>帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>获取所传达的可视状态的指定字符串 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>状态。 示例包括"忙碌"或"联机"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>获取一个可读字符串，其中包含的类型项指定 <see cref="T:System.Windows.UIElement" /> 表示。</summary>
      <returns>项类型中。 示例包括"邮件"联系人"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Label" /> ，它是指向指定 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Label" /> 所使用的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>获取的文本标签 <see cref="T:System.Windows.UIElement" /> 对应于中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <returns>文本标签中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 在特定的方向的布局方式。</summary>
      <returns>指定的方向 <see cref="T:System.Windows.UIElement" />。 （可选），该方法返回 <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" /> 如果 <see cref="T:System.Windows.UIElement" /> 不布局在特定的方向。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方相关联的元素的指定的控件模式的对象。</summary>
      <param name="patternInterface">一个指定控件模式的枚举值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 键盘当前已经有输入焦点。</summary>
      <returns>true 如果指定 <see cref="T:System.Windows.UIElement" /> 具有键盘输入焦点; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 包含向用户显示的数据。</summary>
      <returns>true 如果该元素是内容的元素;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.UIElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 为交互式元素的最终用户理解。</summary>
      <returns>true 如果该元素是控件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 可以接收和发送事件。</summary>
      <returns>true 如果 UI 自动化 对等方可以接收和发送事件; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 可以接受键盘焦点。</summary>
      <returns>true 如果此元素可以接受键盘焦点，则否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 是否不在屏幕。</summary>
      <returns>true 如果指定 <see cref="T:System.Windows.UIElement" /> 不是在屏幕上; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 包含受保护的内容。</summary>
      <returns>true 如果指定 <see cref="T:System.Windows.UIElement" /> 包含受保护的内容; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>获取一个值，该值指示是否指定 <see cref="T:System.Windows.UIElement" /> 需要完成窗体上。</summary>
      <returns>true 如果指定 <see cref="T:System.Windows.UIElement" /> 要求必须已完成; 否则为是 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>将键盘输入的焦点设置在指定 <see cref="T:System.Windows.UIElement" />。<see cref="T:System.Windows.UIElement" /> 对应于中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项完全可访问性的 UI 自动化元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>提供对基类值在被派生类的构造函数调用时初始化。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ItemsControl" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>当在派生类中重写时创建的新实例 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 此集合 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
      <param name="item">与此关联的数据项 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</param>
      <returns>新 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 创建。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>返回指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <param name="item">要获取的项 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 有关。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 为指定的对象。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.ItemsControl" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ItemsControl" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>检索由指定的属性值的元素。</summary>
      <param name="startAfter">将在其后开始搜索的容器中的项。</param>
      <param name="propertyId">包含要检索的值的属性。</param>
      <param name="value">要检索的值。</param>
      <returns>第一项相匹配的搜索条件;否则为 null 如果任何项不匹配。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 关联 <see cref="T:System.Windows.Controls.ListView" /> ，它由这 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />。</param>
      <returns>新的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> 关联的元素的控件类型。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 枚举中的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>获取指定的直接子元素的集合 UI 自动化 对等方。</summary>
      <param name="children">列表项的自动化对等类。</param>
      <returns>自动化同级控件中的所有项。 如果视图不包含除了列表项的交互式或信息性元素，这些元素的自动化对等方必须添加到列表中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <paramref name="patternInterface" /> 关联的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>返回实现控件模式的对象。 如果此方法返回 null，则从 <see cref="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> 使用返回值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>由调用 <see cref="T:System.Windows.Controls.ListView" /> 的项的集合发生更改时。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
      <summary>自定义视图不再应用到时调用 <see cref="T:System.Windows.Controls.ListView" />。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.#ctor(System.Windows.Controls.Label)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Label" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Label" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Label" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"标签"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetNameCore">
      <summary>获取的文本标签 <see cref="T:System.Windows.Controls.Label" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ListBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListBoxItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ListBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"ListBox"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ListBoxItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。</param>
      <param name="selectorAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 的父级的这 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ListBoxItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“ListBoxItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />，则此方法返回此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 的当前实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“ListBoxItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.#ctor(System.Windows.Controls.ListView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ListView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 与此关联的实例 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListView" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.ListView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ListView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"ListView"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ListView" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>此 <see cref="T:System.Windows.Controls.ListView" /> 正在使用的视图的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。 默认 <see cref="T:System.Windows.Controls.ListView" /> 实现使用 <see cref="T:System.Windows.Controls.GridView" />，并且此方法返回 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.MediaElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MediaElement" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.MediaElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"MediaElement"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.#ctor(System.Windows.Controls.Menu)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Menu" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Menu" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Menu" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"菜单"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.#ctor(System.Windows.Controls.MenuItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAccessKeyCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的访问密钥。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> 的访问密钥。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的子元素的集合。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“MenuItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的文本标签。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.MenuItem" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.#ctor(System.Windows.Navigation.NavigationWindow)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 关联的 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"NavigationWindow"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.PasswordBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.PasswordBox" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.PasswordBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"PasswordBox"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.PasswordBox" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.IsPasswordCore">
      <summary>获取一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 相关联的 <see cref="T:System.Windows.Controls.PasswordBox" /> 是否包含受保护内容。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> 调用。</summary>
      <returns>true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 控件的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ProgressBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ProgressBar" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ProgressBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"ProgressBar"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ProgressBar" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />，且 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 为 true，则此方法返回 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 的当前实例；否则，此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="val"> 要设置的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.RadioButton" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RadioButton" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RadioButton" /> 对象的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"单选按钮"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RadioButton" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="val"> 要设置的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的名称。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"RepeatButton"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，则此方法返回对 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 的当前实例的引用，否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.RichTextBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RichTextBox" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>获取子元素的集合 <see cref="T:System.Windows.Controls.RichTextBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.RichTextBox" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"RichTextBox"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RichTextBox" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，则此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 引用。 如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />，则此方法返回新的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含单词 "ScrollBar" 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>具有 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NaN" /> 的值的一个 <see cref="T:System.Windows.Point" />；<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中仅可单击的点为子元素。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>获取一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是否按特定方向进行布局。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal" /> 或 <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical" />，具体取决于 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的方向。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"ScrollViewer"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ScrollViewer" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 作为交互式或分配给该控件中的逻辑结构的最终用户理解 GUI。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>如果 <see cref="P:System.Windows.FrameworkElement.TemplatedParent" /> 是 null, ，此方法返回 true; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="horizontalAmount"> 特定于控件的水平增量。</param>
      <param name="verticalAmount"> 特定于控件的垂直增量。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="horizontalPercent"> 水平滚动百分比。</param>
      <param name="verticalPercent"> 垂直滚动百分比。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />，则此方法返回指向当前实例的指针；否则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>UI 自动化提供程序的集合。 如果允许多重选择; 则为 true否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>在由派生类的构造函数被调用时，提供了对基类值的初始化。</summary>
      <param name="owner">与此关联的项对象 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />。</param>
      <param name="selectorAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.Primitives.Selector" /> ，它持有 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> 关联的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />，则此方法返回此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> 的当前实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.#ctor(System.Windows.Controls.Separator)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Separator" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Separator" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Separator" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Separator" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“分隔符”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Slider" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Slider" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Slider" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含 "Slider" 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>一个包含 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> 的 <see cref="T:System.Windows.Point" />；在 <see cref="T:System.Windows.Controls.TabControl" /> 中只有 <see cref="T:System.Windows.Controls.TabItem" /> 子元素是可点击的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"状态栏"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBarItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"StatusBarItem"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TabControl" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建一个新的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.TabItem" /> 新与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。</param>
      <returns>创建的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取子元素的集合 <see cref="T:System.Windows.Controls.TabItem" /> 新与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.TabItem" /> 新与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"TabControl"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>一个包含 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> 的 <see cref="T:System.Windows.Point" />；在 <see cref="T:System.Windows.Controls.TabControl" /> 中只有 <see cref="T:System.Windows.Controls.TabItem" /> 子元素是可点击的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.TabControlAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" />。</param>
      <param name="tabControlAutomationPeer">为此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 的父级的 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.TabItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个包含”TabItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" /> 的文本标签。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>包含标签的字符串。 如果设置，此方法将返回 <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 属性的值；否则此方法将返回 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.#ctor(System.Windows.Controls.TabItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TabItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.#ctor(System.Windows.Documents.Table)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Documents.Table" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.Table" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Table" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Documents.Table" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"Table"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.Table" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />，则此方法返回 this 指针；否则此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 相关联的 <see cref="T:System.Windows.Documents.Table" /> 是否被最终用户理解为交互式的或组成 GUI 中控件的逻辑结构。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序。</summary>
      <param name="row"> 相关行的序号。</param>
      <param name="column"> 相关列的序号。</param>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.#ctor(System.Windows.Documents.TableCell)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Documents.TableCell" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.TableCell" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Documents.TableCell" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"TableCell"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetLocalizedControlTypeCore">
      <summary>获取控件类型的本地化版本，该控件类型属于与 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.TableCell" />。</summary>
      <returns>包含“cell”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 关联的 <see cref="T:System.Windows.Documents.TableCell" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" />，则此方法返回 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 的当前实例；否则，此方法返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 相关联的 <see cref="T:System.Windows.Documents.TableCell" /> 是否被最终用户理解为交互式的或组成 GUI 中控件的逻辑结构。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Automation.TextPattern" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore">
      <summary>获取与此关联的元素的文本标签 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>值 <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 或 <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 如果已设置; 否则此方法返回一个空字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TextBlock" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TextBlock" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.TextBlock" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>一个子元素的集合或 null 如果 <see cref="T:System.Windows.Controls.TextBlock" /> 为空。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.TextBlock" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含单词"TextBlock"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.TextBlock" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> 是指最终用户理解为交互式，还是为组成的逻辑结构中的控件的理解 GUI。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</summary>
      <returns>false 如果该元素是一部分是模板;否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TextBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TextBox" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TextBox" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个包含“TextBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TextBox" /> 的控件模式。</summary>
      <param name="patternInterface">枚举中的一个值。</param>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 控件的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.#ctor(System.Windows.Documents.TextElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Documents.TextElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetBoundingRectangleCore">
      <summary>获取 <see cref="T:System.Windows.Rect" /> 表示的绑定矩形 <see cref="T:System.Windows.Documents.TextElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> ，它包含的元素的坐标或 <see cref="P:System.Windows.Rect.Empty" /> 如果该元素不 <see cref="T:System.Windows.Interop.HwndSource" /> 和 <see cref="T:System.Windows.PresentationSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> 相关联的 <see cref="T:System.Windows.Documents.TextElement" /> 的子元素的集合。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetClickablePointCore">
      <summary>获取 <see cref="T:System.Windows.Point" /> ，表示位于可点击空间 <see cref="T:System.Windows.Documents.TextElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Point" /> 允许单击的元素上。 点值 (<see cref="F:System.Double.NaN" />, ，<see cref="F:System.Double.NaN" />) 如果该元素不 <see cref="T:System.Windows.Interop.HwndSource" /> 和 <see cref="T:System.Windows.PresentationSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.IsOffscreenCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Documents.TextElement" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> 未显示在屏幕。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> 调用。</summary>
      <returns>如果该元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个包含"Thumb"的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“Button”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />，则此方法返回 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 的当前实例，否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.#ctor(System.Windows.Controls.ToolBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ToolBar" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ToolBar" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ToolBar" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含单词 "ToolBar" 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.#ctor(System.Windows.Controls.ToolTip)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> 的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ToolTip" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.ToolTip" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.ToolTip" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"工具提示"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TreeView" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>为此 <see cref="T:System.Windows.Controls.TreeView" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项创建 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例。</summary>
      <param name="item">与 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 关联的数据项。</param>
      <returns>针对 <paramref name="item" /> 的 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的子元素的集合。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 元素的集合，如果与此 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TreeView" /> 为空，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"树视图"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 的当前实例，或 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索所选的每个子元素的 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer,System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 类的新实例。</summary>
      <param name="item">中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。</param>
      <param name="itemsControlAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.ItemsControl" /> ，它持有 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</param>
      <param name="parentDataItemAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的父级至此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取的控件类型 <see cref="T:System.Windows.Controls.TreeViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>在所有情况下均为 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.TreeViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含值的字符串 TreeViewItem。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此关联的元素的控件模式 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。</summary>
      <param name="patternInterface">要检索的元素的实现模式的类型。</param>
      <returns>实现模式接口的对象或 null 如果指定的模式接口未实现此对等方。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>隐藏所有节点、 控件或后代控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>显示所有子节点、 控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>滚动容器对象的内容区域，以便显示该容器的可见区域 （视区） 内的控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>将当前元素添加到选定项的集合。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>选定项的集合中移除当前元素。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除任何所选内容，然后选择当前元素。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TreeViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>为此 <see cref="T:System.Windows.Controls.TreeView" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项创建 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例。</summary>
      <param name="item">与 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 关联的数据项。</param>
      <returns>针对 <paramref name="item" /> 的 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>返回指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <param name="item">要获取的项 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 有关。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 为指定的对象。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetChildrenCore">
      <summary>获取元素的子元素的集合 <see cref="T:System.Windows.Controls.TreeViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.TreeViewItem" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含"TreeViewItem"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的控件模式。</summary>
      <param name="patternInterface">枚举值之一。</param>
      <returns>如果 <paramref name="patternInterface" /> 为 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />、<see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，则此方法返回 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 的当前实例；否则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.#ctor(System.Windows.Controls.UserControl)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.UserControl" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.UserControl" /> 的控件类型。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Controls.UserControl" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />。 此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含控件的名称的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.#ctor(System.Windows.Controls.Viewport3D)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Viewport3D" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Viewport3D" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.Viewport3D" /> 的名称。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“Viewport3D”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.#ctor(System.Windows.Window)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Window" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 关联的 <see cref="T:System.Windows.Window" /> 的控件类型。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Window" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetBoundingRectangleCore">
      <summary>获取 <see cref="T:System.Windows.Rect" /> 表示的绑定矩形 <see cref="T:System.Windows.Window" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> ，它表示的屏幕坐标 <see cref="T:System.Windows.Window" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetClassNameCore">
      <summary>获取名称 <see cref="T:System.Windows.Window" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>一个字符串，包含单词"窗口"。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetNameCore">
      <summary>获取的文本标签 <see cref="T:System.Windows.Window" /> 这与该键相关联 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />。 由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</summary>
      <returns>一个字符串，包含 <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 或  <see cref="P:System.Windows.FrameworkElement.Name" /> 的 <see cref="T:System.Windows.Window" />, ，或 <see cref="F:System.String.Empty" /> 名称是否 null。</returns>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream)">
      <summary>新实例初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类基于在输入流。</summary>
      <param name="stream">输入的流的源 BAML。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream,System.Xaml.XamlReaderSettings)">
      <summary>新实例初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类根据输入的流和读取器设置。</summary>
      <param name="stream">输入的流的源 BAML。</param>
      <param name="xamlReaderSettings">读取器设置。 请参阅“备注”。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="xamlReaderSettings" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类，根据要读取本地文件的文件名。</summary>
      <param name="fileName">声明包含要读取的 BAML 的文件的文件路径的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">为 true 则释放托管资源；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Read">
      <summary>提供源 BAML 中的下一步 XAML 节点，如果一个节点可用。</summary>
      <returns>true 如果某个节点可用，则否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">遍历期间会释放读取器。</exception>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> 类的新实例。</summary>
      <param name="image">一个字符串进行分析以确定以下三个 URIs︰ 图像源、 源颜色上下文和目标颜色上下文。</param>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在应用了此扩展的属性上设置的对象。 有关 <see cref="T:System.Windows.ColorConvertedBitmapExtension" />, ，这是完成 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。 此服务需要提供的结果 <see cref="T:System.Windows.Markup.IUriContext" />。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 根据传递给构造函数的值。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ComponentResourceKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.ComponentResourceKey" /> , ，并指定 <see cref="T:System.Type" /> ，它定义了密钥，并要使用作为额外的资源标识符的对象。</summary>
      <param name="typeInTargetAssembly">定义资源键的类型。</param>
      <param name="resourceId">唯一标识符来区分这 <see cref="T:System.Windows.ComponentResourceKey" /> 与其他关联 <paramref name="typeInTargetAssembly" /> 类型。</param>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
      <summary>确定所提供的对象是否等于当前 <see cref="T:System.Windows.ComponentResourceKey" />。</summary>
      <param name="o">要与当前 <see cref="T:System.Windows.ComponentResourceKey" />。</param>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.GetHashCode">
      <summary>返回此哈希代码 <see cref="T:System.Windows.ComponentResourceKey" />。</summary>
      <returns>带符号的 32 位整数值。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.ToString">
      <summary>获取字符串表示形式 <see cref="T:System.Windows.ComponentResourceKey" />。</summary>
      <returns>字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Condition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例。</summary>
      <param name="binding">指定条件的属性的绑定。</param>
      <param name="conditionValue">条件的值。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.Condition" /> 类具有指定的属性和值。 此构造函数执行参数验证。</summary>
      <param name="conditionProperty">条件属性。</param>
      <param name="conditionValue">条件的值。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Condition" /> 类，具有指定的属性、 值和源对象的名称。</summary>
      <param name="conditionProperty">条件属性。</param>
      <param name="conditionValue">条件的值。</param>
      <param name="sourceName">x:Name 该对象具有 <paramref name="conditionProperty" />。</param>
    </member>
    <member name="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理标记扩展提供一个值的属性的情况 <see cref="T:System.Windows.Condition" /> 对象</summary>
      <param name="targetObject">标记扩展在其中设置值的对象。</param>
      <param name="eventArgs">适用于标记扩展处理的数据。</param>
    </member>
    <member name="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理的类型转换器提供一个值的属性的情况<see cref="T:System.Windows.Condition" /> 对象。</summary>
      <param name="targetObject">其中的类型转换器设置值的对象。</param>
      <param name="eventArgs">适用于类型转换器处理的数据。</param>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.ConditionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ConditionCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AccessText" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)">
      <summary>排列和大小的内容 <see cref="T:System.Windows.Controls.AccessText" /> 对象。</summary>
      <param name="arrangeSize">用于排列内容计算出的大小。</param>
      <returns>内容的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.GetVisualChild(System.Int32)">
      <summary>获取可见子元素的索引。</summary>
      <param name="index">要返回的可视子元素的索引。</param>
      <returns>返回一个整数，表示可见子元素的索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)">
      <summary>重新测量控件。</summary>
      <param name="constraint">控件的最大大小限制。 返回值不能超过此大小。</param>
      <returns>控件的大小。 不能超过最大大小限制为该控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">要添加到 <see cref="T:System.Windows.Controls.AccessText" /> 的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.AddingNewItemEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AddingNewItemEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.ArrangeOverride(System.Windows.Size)">
      <summary>将置于第一个可视子对象并返回的大小以所要求的此布局 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。</summary>
      <param name="arrangeBounds">大小指示此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象应该用于排列其子元素。</param>
      <returns>元素所需的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.GetVisualChild(System.Int32)">
      <summary>检索 <see cref="T:System.Windows.Media.Visual" /> 中指定索引处的子对象。</summary>
      <param name="index">指定要检索的子对象的索引。</param>
      <returns>指定索引处的可视子对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.MeasureOverride(System.Windows.Size)">
      <summary>确定大小的 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。</summary>
      <param name="constraint">返回值不应超过一个上限值。</param>
      <returns>所需的大小 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象不是模板的一部分。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 事件。 当调用此方法 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 内部。</summary>
      <param name="e">事件的参数。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象不是模板的一部分。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text"> 要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AlternationConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将整数中的某个对象转换为 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 列表。</summary>
      <param name="o">要用于查找中的某个对象的整数 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>对象、 处于的位置 <paramref name="o" /> 取模运算中的项数 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将转换中的某个对象 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 为整数的列表。</summary>
      <param name="o">要查找中的对象 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>索引 <paramref name="o" /> 知识库是否处于 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, ，则返回 – 1 如果中不存在 o <see cref="P:System.Windows.Controls.AlternationConverter.Values" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.BooleanToVisibilityConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将布尔值赋给 <see cref="T:System.Windows.Visibility" /> 枚举值。</summary>
      <param name="value">要转换的布尔值。 此值可以是标准的布尔值或可以为 null 的布尔值。</param>
      <param name="targetType">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>
        <see cref="F:System.Windows.Visibility.Visible" /> 如果 <paramref name="value" /> 是 true; 否则为 <see cref="F:System.Windows.Visibility.Collapsed" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将转换 <see cref="T:System.Windows.Visibility" /> 为布尔值的枚举值。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Visibility" /> 枚举值。</param>
      <param name="targetType">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>true 如果 <paramref name="value" /> 是 <see cref="F:System.Windows.Visibility.Visible" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Border" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.Border" /> 元素。</summary>
      <param name="finalSize">
        <see cref="T:System.Windows.Size" /> 此元素用来排列其子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.Border" /> 元素与其子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.Border" /> 过程中排列之前 <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不能超过限制。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示该元素的大小限制。</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
      <summary>在 <see cref="T:System.Windows.Controls.Border" /> 的呈现处理过程中，绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的内容。</summary>
      <param name="dc">定义要绘制的对象的 <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.BorderGapMaskConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>创建 <see cref="T:System.Windows.Media.VisualBrush" /> 用于绘制的边框 <see cref="T:System.Windows.Controls.GroupBox" /> 控件。</summary>
      <param name="values">三个数字表示数组 <see cref="T:System.Windows.Controls.GroupBox" /> 控制参数。  有关详细信息，请参阅备注。</param>
      <param name="targetType">未使用此参数。</param>
      <param name="parameter">左侧的可见的行的宽度 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 中 <see cref="T:System.Windows.Controls.GroupBox" />。</param>
      <param name="culture">未使用此参数。</param>
      <returns>一个 <see cref="T:System.Windows.Media.VisualBrush" /> 绘制周围的边框 <see cref="T:System.Windows.Controls.GroupBox" /> 控件，其中包含的差距 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 内容。</returns>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>未实现。</summary>
      <param name="value">未使用此参数。</param>
      <param name="targetTypes">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>在所有情况下均为 <see cref="F:System.Windows.Data.Binding.DoNothing" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Button" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.Button" /> 时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>创建一个适当 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> 对于此控件的一部分 WPF 基础结构。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> 对于此控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Calendar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>生成的可视树 <see cref="T:System.Windows.Controls.Calendar" /> 控制应用新模板时。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>返回 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 以供 Silverlight 自动化基础结构。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Calendar" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由的事件，在此控件有焦点用户按下某个键时发生。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由的事件，在此控件具有焦点时，用户释放某个键时发生。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 路由的事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>提供在选定日期的文本表示形式。</summary>
      <returns>在选定的日期，或为空字符串的文本表示如果 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 是 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Calendar" /> 此对象表示的日期。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>添加了之前的所有日期 <see cref="P:System.DateTime.Today" /> 到集合。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>返回一个值，表示此集合是否包含指定的日期。</summary>
      <param name="date">要搜索的日期。</param>
      <returns>true 如果集合包含指定的日期。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>返回一个值，表示此集合是否包含指定的日期范围。</summary>
      <param name="start">日期范围的开始。</param>
      <param name="end">日期范围的末尾。</param>
      <returns>true 如果在范围内的所有日期都包含在集合中;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>返回一个值，表示此集合是否包含指定的日期范围中的任何日期。</summary>
      <param name="range">要搜索的日期范围。</param>
      <returns>true 如果在范围内的任何日期包含集合中的否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类具有一个日期。</summary>
      <param name="day">要添加的日期。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类范围的日期。</summary>
      <param name="start">要表示的范围的开始。</param>
      <param name="end">要表示的范围的结束。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> 类的新实例。</summary>
      <param name="oldMode">以前的模式。</param>
      <param name="newMode">新的模式。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Canvas" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.Canvas" /> 元素。</summary>
      <param name="arrangeSize">大小指示此 <see cref="T:System.Windows.Controls.Canvas" /> 元素应用来排列其子元素。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.Canvas" /> 元素及其子代。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetBottom(System.Windows.UIElement)">
      <summary>返回给定依赖对象的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性的值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLayoutClip(System.Windows.Size)">
      <summary>返回一个指示如果将剪辑元素的区域的剪裁几何图形 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 属性设置为 true。</summary>
      <param name="layoutSlotSize">元素的可用大小。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Geometry" /> ，它表示如果剪辑区域 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 是 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>为给定的依赖对象获取 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性的值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Left" /> 坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetRight(System.Windows.UIElement)">
      <summary>为给定的依赖对象获取 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性的值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Right" /> 坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>为给定的依赖对象获取 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性的值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Top" /> 坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.Canvas" /> 为预期的过程中排列它们 <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 表示排列子内容所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置给定的依赖对象设置上的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性值。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="length">设置指定元素的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置给定的依赖对象设置上的 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性值。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="length">设置指定元素的 <see cref="P:System.Windows.Controls.Canvas.Left" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置给定的依赖对象设置上的 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性值。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="length">设置指定元素的 <see cref="P:System.Windows.Controls.Canvas.Right" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置给定的依赖对象设置上的 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性值。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="length">设置指定元素的 <see cref="P:System.Windows.Controls.Canvas.Top" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.CheckBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>时调用此方法的访问密钥 <see cref="T:System.Windows.Controls.CheckBox" /> 调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>为 <see cref="T:System.Windows.Controls.CheckBox" /> 创建一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>用于 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的 <see cref="T:System.Windows.Controls.CheckBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary> 响应 <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.#ctor(System.Object,System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" /> 类的新实例。</summary>
      <param name="value">
        <see cref="T:System.Object" /> 表示原始的数据值。</param>
      <param name="element">
        <see cref="T:System.Windows.UIElement" /> 表示数据值。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Add(System.Windows.Controls.ColumnDefinition)">
      <summary>添加 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 元素 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="value">标识 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 要添加到集合。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Clear">
      <summary>清除的内容 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Contains(System.Windows.Controls.ColumnDefinition)">
      <summary>确定是否给定 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 中存在 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="value">标识 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 正在测试。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.CopyTo(System.Windows.Controls.ColumnDefinition[],System.Int32)">
      <summary>将复制的数组 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象中的给定的索引位置到 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="array">一个 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象数组。</param>
      <param name="index">标识中的索引位置 <paramref name="array" /> 到 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象将会复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - 源 <see cref="T:System.Collections.ICollection" /> 中的元素个数大于从 <paramref name="index" /> 到目标数组末尾之间的可用空间。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.IndexOf(System.Windows.Controls.ColumnDefinition)">
      <summary>返回的索引位置的给定 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 内 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 所需的索引位置。</param>
      <returns>索引 <paramref name="value" /> 如果在集合中找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Insert(System.Int32,System.Windows.Controls.ColumnDefinition)">
      <summary>将插入 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 内指定的索引位置处 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="index">集合中插入项的位置。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Remove(System.Windows.Controls.ColumnDefinition)">
      <summary>删除 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="value">要从该集合中移除的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 在集合中找到并移除; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 指定的索引位置处。</summary>
      <param name="index">在集合中的位置 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 删除。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="index">在集合中的位置第一个 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 删除。</param>
      <param name="count">总次数 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#ColumnDefinition}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个从零开始 <see cref="T:System.Array" /> 接收复制的项从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
      <param name="index">在指定的第一个位置 <see cref="T:System.Array" /> 以接收复制的内容。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ComboBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定的项的元素。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项 （或是否可以作为） 自己 ItemContainer。</summary>
      <param name="item">指定的项。</param>
      <returns>true 如果该项是其自己 ItemContainer; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>时调用此方法 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>当组合框的弹出窗口关闭时报告。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>报告何时在组合框的弹出窗口随即打开。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>报告的 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> 属性已更改。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>在发生 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用以报告已松开鼠标左键。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>在发生 <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 附加路由事件时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>响应 <see cref="T:System.Windows.Controls.ComboBox" /> 通过引发选择更改 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ComboBoxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">旧的内容。</param>
      <param name="newContent">新内容。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>宣布推出，键盘焦点位于此元素上。</summary>
      <param name="e">键盘输入事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContentControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
      <summary>将指定的对象添加子级的形式 <see cref="T:System.Windows.Controls.ContentControl" />。</summary>
      <param name="value">要添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddText(System.String)">
      <summary>将添加到指定的文本字符串 <see cref="T:System.Windows.Controls.ContentControl" />。</summary>
      <param name="text">要添加的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的旧值。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 属性更改时发生。</summary>
      <param name="oldContentStringFormat">旧值 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />。</param>
      <param name="newContentStringFormat">新值 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性更改。</summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性的旧值。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性更改。</summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的旧值。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
      <summary>指示是否应保持 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性应为持久的; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value">  要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text">  要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContentPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>定位单个子元素并确定的内容 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象。</summary>
      <param name="arrangeSize">大小指示此 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象应该用于排列其子元素。</param>
      <returns>元素所需的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ChooseTemplate">
      <summary>返回要使用的模板。 这可能取决于内容或其他属性。</summary>
      <returns>要使用的 <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定大小的 <see cref="T:System.Windows.Controls.ContentPresenter" /> 基于大小调整属性中，对象边缘，并请求的子内容的大小。</summary>
      <param name="constraint">返回值不应超过一个上限值。</param>
      <returns>排列子内容所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)">
      <summary>时调用 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性更改。</summary>
      <param name="oldContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的旧值。</param>
      <param name="newContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>时调用 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改。</summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的旧值。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>时调用 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性更改。</summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的旧值。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>时调用 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改 </summary>
      <param name="oldTemplate">旧 <see cref="T:System.Windows.DataTemplate" /> 对象值。</param>
      <param name="newTemplate">新 <see cref="T:System.Windows.DataTemplate" /> 对象值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector">
      <summary>返回一个值，该值指示序列化进程是否应序列化的有效值 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContextMenu" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件发生。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.ContextMenu" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>报告的 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性已更改。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.ContentElement.KeyDown" /> 中的对象引发事件 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.ContentElement.KeyUp" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件发生。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>上下文菜单的可视父级发生更改时调用。</summary>
      <param name="oldParent">上下文菜单以前被附加到对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetContextMenu(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 有投影。</summary>
      <param name="element">对象传递给查询有关是否有投影。</param>
      <returns>一个布尔值， true 如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 有投影; false 否则为。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacement(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" />  属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary> 获取的值 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 指定对象的属性。</summary>
      <param name="element">对象传递给查询有关 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 属性。</param>
      <returns>值 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetContextMenu(System.Windows.DependencyObject,System.Windows.Controls.ContextMenu)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 指定对象的属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 有投影。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">布尔值，该值将设置， true 如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 有投影; false 否则为。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 指定对象的属性。</summary>
      <param name="element">对象上设置的值。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 指定对象的属性。</summary>
      <param name="element">设置值的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" />  指定对象的属性。</summary>
      <param name="element">对象上设置的值。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 指定对象的属性。</summary>
      <param name="element">对象上设置的值。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 指定对象的属性。</summary>
      <param name="element">设置值的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 指定对象的属性。</summary>
      <param name="element">设置值的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary> 设置的值 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 指定对象的属性。</summary>
      <param name="element">设置值的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Control" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
      <summary>调用以排列和调整大小的内容 <see cref="T:System.Windows.Controls.Control" /> 对象。</summary>
      <param name="arrangeBounds">用于排列内容计算出的大小。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
      <summary>调用以重新测量控件。</summary>
      <param name="constraint">该方法可返回最大大小。</param>
      <returns>该控件，最大值由指定的大小 <paramref name="constraint" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> 路由的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> 路由的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>在控件模板发生更改时调用。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Controls.Control" /> 对象。</summary>
      <returns>一个表示控件的字符串。</returns>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ControlTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.ControlTemplate" /> 与指定的目标类型的类。</summary>
      <param name="targetType">此模板适用于该类型。</param>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>检查模板化父级针对一组规则。</summary>
      <param name="templatedParent">此模板应用到的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> 不能为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 的类型必须匹配 <see cref="T:System.Windows.Controls.Control" /> 应用于。</exception>
      <exception cref="T:System.ArgumentException">您必须将关联 <see cref="T:System.Windows.Controls.ControlTemplate" /> 与 <see cref="T:System.Windows.Controls.Control" /> 通过设置 <see cref="P:System.Windows.Controls.Control.Template" /> 属性之前使用 <see cref="T:System.Windows.Controls.ControlTemplate" /> 上 <see cref="T:System.Windows.Controls.Control" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>执行验证检查的值。</summary>
      <param name="value">要检查的值。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <returns>验证的结果。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGrid" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
      <summary>调用 <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> 命令，会将当前单元格或行置于编辑模式。</summary>
      <returns>true 如果当前的单元格或行进入，编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>调用 <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> 命令，会将当前单元格或行置于编辑模式。</summary>
      <param name="editingEventArgs">如果调用事件处理程序，事件参数。 可为 null。</param>
      <returns>true 如果当前的单元格或行进入，编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
      <summary>调用 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令的单元格或行当前处于编辑模式。</summary>
      <returns>true 如果当前的单元格或行退出编辑模式，或者没有单元格或行处于编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
      <summary>调用 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令指定的单元格或行处于编辑模式。</summary>
      <param name="editingUnit">指定是否取消行或单元格的编辑操作的枚举值之一。</param>
      <returns>true 如果当前单元格或行退出编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>卸载指定的项的行。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.DataGridRow" /> 以清除。</param>
      <param name="item">行中包含的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearDetailsVisibilityForItem(System.Object)">
      <summary>清除 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性 <see cref="T:System.Windows.Controls.DataGridRow" /> ，表示指定的数据项。</summary>
      <param name="item">中的行的数据项 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 被清除。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ColumnFromDisplayIndex(System.Int32)">
      <summary>获取位于指定索引处的 <see cref="T:System.Windows.Controls.DataGridColumn" />。</summary>
      <param name="displayIndex">要检索的列的从零开始的索引。</param>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridColumn" /> 指定 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="displayIndex" /> 小于 0，或者大于或等于列数。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
      <summary>调用 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令的单元格或行当前处于编辑模式。</summary>
      <returns>true 如果当前的单元格或行退出编辑模式，或者没有单元格或行处于编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
      <summary>调用 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令的指定的单元格或行当前处于编辑模式。</summary>
      <param name="editingUnit">一个枚举值，该值指定是否要提交行或单元格的编辑。</param>
      <param name="exitEditingMode">true 若要退出编辑模式;否则为 false。</param>
      <returns>true 如果当前单元格或行退出编辑模式，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GenerateColumns(System.ComponentModel.IItemProperties)">
      <summary>生成对象的指定属性的列。</summary>
      <param name="itemProperties">要在列中的对象的属性。</param>
      <returns>该对象的属性的列的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemProperties" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetContainerForItemOverride">
      <summary>实例化一个新 <see cref="T:System.Windows.Controls.DataGridRow" />。</summary>
      <returns>行的容器。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetDetailsVisibilityForItem(System.Object)">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性 <see cref="T:System.Windows.Controls.DataGridRow" /> ，表示指定的数据项。</summary>
      <param name="item">中的行的数据项 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 返回。</param>
      <returns>包含的行的可见性 <paramref name="item" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定某一项是否 <see cref="T:System.Windows.Controls.DataGridRow" />。</summary>
      <param name="item">要测试的项。</param>
      <returns>true 如果该项是 <see cref="T:System.Windows.Controls.DataGridRow" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
      <summary>确定所需的大小 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <param name="availableSize">最大大小 <see cref="T:System.Windows.Controls.DataGrid" /> 可以占用。</param>
      <returns>所需的大小 <see cref="T:System.Windows.Controls.DataGrid" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAddingNewItem(System.Windows.Controls.AddingNewItemEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate">
      <summary>每当应用程序代码或内部进程调用调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 与关联事件 <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> 命令。</summary>
      <param name="args">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 与关联事件 <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>如果打开其上下文菜单中选择一个单元格。</summary>
      <param name="e">打开其上下文菜单中的项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> 事件。</summary>
      <param name="args">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
      <summary>返回此自动化同级 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>为此自动化对等方 <see cref="T:System.Windows.Controls.DataGrid" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 与关联事件 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 与关联事件 <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> 命令。</summary>
      <param name="args">事件的数据。</param>
      <exception cref="T:System.NotSupportedException">将 <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 设置为 <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.None" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>提供用于处理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 与关联事件 <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> 命令。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 上此元素的属性更改。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>执行列自动生成并更新验证标志，当项目发生了变化。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>时调用 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性更改。</summary>
      <param name="oldValue">旧的源。</param>
      <param name="newValue">新的源。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>在接收到 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件时调用。</summary>
      <param name="e">事件的相关信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>更新由于用户拖动鼠标选择的项集合 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <param name="e">鼠标数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>所选内容更改时调用。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 事件。</summary>
      <param name="eventArgs">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>每当调用的模板 <see cref="T:System.Windows.Controls.DataGrid" /> 更改。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>提供用于 <see cref="E:System.Windows.UIElement.TextInput" /> 路由事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定的项将准备好新行。</summary>
      <param name="element">新的 <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
      <param name="item">行中包含的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object)">
      <summary>滚动 <see cref="T:System.Windows.Controls.DataGrid" /> 垂直以显示指定的数据项目的行。</summary>
      <param name="item">要使其可见的数据项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>滚动 <see cref="T:System.Windows.Controls.DataGrid" /> 垂直和水平居中以显示在指定的数据的项和列的单元格。</summary>
      <param name="item">要使其可见的数据项。</param>
      <param name="column">要使其可见的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SelectAllCells">
      <summary>选择 <see cref="T:System.Windows.Controls.DataGrid" /> 中的所有单元格。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem(System.Object,System.Windows.Visibility)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性 <see cref="T:System.Windows.Controls.DataGridRow" /> ，其中包含指定的对象。</summary>
      <param name="item">中的行的对象 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 正在设置。</param>
      <param name="detailsVisibility">
        <see cref="T:System.Windows.Visibility" /> 设置包含项的行。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.UnselectAllCells">
      <summary>取消选择中的所有单元格 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> 类的新实例。</summary>
      <param name="propertyName">绑定到所生成的列的属性的名称。</param>
      <param name="propertyType">绑定到所生成的列的属性的类型。</param>
      <param name="column">所生成的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> 类的新实例。</summary>
      <param name="column">包含要编辑的单元格的列。</param>
      <param name="row">包含要编辑的单元格的行。</param>
      <param name="editingEventArgs">有关导致单元格输入的用户笔势的信息编辑模式。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridBoundColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> 时的值 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性更改。</summary>
      <param name="oldBinding">以前的绑定。</param>
      <param name="newBinding">已更改为列绑定。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定的值 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性根据从包含此列的数据网格属性规则。</summary>
      <param name="baseValue">传递给委托的值。</param>
      <returns>true 如果列单元格中不能编辑，基于规则的数据网格;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>重新生成响应的绑定更改中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCell" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.ArrangeOverride(System.Windows.Size)">
      <summary>确定最终大小和单元格内容的位置。</summary>
      <param name="arrangeSize">该单元格可以占用的最大大小。</param>
      <returns>控件的最终大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.MeasureOverride(System.Windows.Size)">
      <summary>确定所需的大小 <see cref="T:System.Windows.Controls.DataGridCell" />。</summary>
      <param name="constraint">该单元格可以占用的最大大小。</param>
      <returns>所需的大小 <see cref="T:System.Windows.Controls.DataGridCell" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnColumnChanged(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridColumn)">
      <summary>时调用此方法的单元格 <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 属性更改。</summary>
      <param name="oldColumn">旧的列定义。</param>
      <param name="newColumn">新的列定义。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnCreateAutomationPeer">
      <summary>返回此自动化同级 <see cref="T:System.Windows.Controls.DataGridCell" />。</summary>
      <returns>为此自动化对等方 <see cref="T:System.Windows.Controls.DataGridCell" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnIsEditingChanged(System.Boolean)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 属性更改。</summary>
      <param name="isEditing">
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>按下某个键的报表。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>按下某个键的报表。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnRender(System.Windows.Media.DrawingContext)">
      <summary>用于绘制单元格和右侧网格线。</summary>
      <param name="drawingContext">该单元格绘制指令。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>报告文本撰写。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellClipboardEventArgs.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellClipboardEventArgs" /> 类的新实例。</summary>
      <param name="item">包含发生该事件的单元格的行的数据项。</param>
      <param name="column">包含发生该事件的单元格的列。</param>
      <param name="content">发生此事件的单元格的文本值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellEditEndingEventArgs" /> 类的新实例。</summary>
      <param name="column">包含发生该事件的单元格的列。</param>
      <param name="row">包含发生该事件的单元格的行。</param>
      <param name="editingElement">该单元格处于编辑模式显示元素。</param>
      <param name="editAction">一个值，该值指示是否取消还是提交编辑。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 结构，使用指定的数据的项和列。</summary>
      <param name="item">包含该单元格的行的数据项。</param>
      <param name="column">包含该单元格的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 指定单元格的结构。</summary>
      <param name="cell">将生成信息单元格。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.Equals(System.Object)">
      <summary>指示指定的对象是否等于当前实例。</summary>
      <param name="obj">要与当前类型进行比较的对象。</param>
      <returns>true 如果所比较对象代表同一单元格。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.GetHashCode">
      <summary>返回当前哈希代码 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 结构。</summary>
      <returns>结构哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>指示两个 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 实例是否相等。</summary>
      <param name="cell1">要比较的第一个结构。</param>
      <param name="cell2">要比较的第二个结构。</param>
      <returns>true 如果两个结构表示相同的单元格;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>指示两个 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 实例是否不相等。</summary>
      <param name="cell1">要比较的第一个结构。</param>
      <param name="cell2">要比较的第二个结构。</param>
      <returns>true 如果两个结构不表示同一个单元格。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>确定最终大小和面板的位置。</summary>
      <param name="arrangeSize">面板可占用的最大大小。</param>
      <returns>最终大小和面板的位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
      <summary>滚动到指定索引处的项的视区。</summary>
      <param name="index">应变为可见的项的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出了范围。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
      <summary>确定面板所需的大小。</summary>
      <param name="constraint">面板可占用的最大大小。</param>
      <returns>面板所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
      <summary>时调用此方法中的子项集合 <see cref="T:System.Windows.Controls.DataGrid" /> 被清除。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>指示 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性值已更改。</summary>
      <param name="oldIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性的旧值。</param>
      <param name="newIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>更新中的项时可见的单元格 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合已更改。</summary>
      <param name="sender">引发的对象 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件。</param>
      <param name="args">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取 <see cref="T:System.Windows.Controls.CheckBox" /> 控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新的复选框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个只读的 <see cref="T:System.Windows.Controls.CheckBox" /> 控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新的、 只读复选框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当列中的单元格进入编辑模式时调用。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="editingEventArgs">有关导致一个单元格以进入编辑模式的用户笔势的信息。</param>
      <returns>未编辑的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新列属性值更改为的响应中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 结构的新实例。</summary>
      <param name="item">包含要复制的单元格的行的数据项。</param>
      <param name="column">包含要复制的单元格的列。</param>
      <param name="content">要复制的单元格的文本值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)">
      <summary>指示是否当前和指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例是否相等。</summary>
      <param name="data">
        <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较与当前 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</param>
      <returns>true 如果当前和指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例都具有相同 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, ，<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, ，和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode">
      <summary>返回此哈希代码 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</summary>
      <returns>此哈希代码 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指示是否指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例是否相等。</summary>
      <param name="clipboardCellContent1">第一个 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较。</param>
      <param name="clipboardCellContent2">第二个 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例都具有相同 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, ，<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, ，和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指示是否指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例是否不相等。</summary>
      <param name="clipboardCellContent1">第一个 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较。</param>
      <param name="clipboardCellContent2">第二个 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较。</param>
      <returns>true 如果当前和指定 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例不具有相同 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />, ，<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />, ，和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>使正在编辑恢复到原始的、 未编辑的值的单元格。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="uneditedValue">正在编辑的单元中的原始、 未编辑值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>之前执行任何所需的验证在退出编辑模式下的单元格。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <returns>true 如果未发现任何验证错误;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>当在派生类中重写，获取绑定到的编辑元素 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 列的属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">由包含预期的单元格的行的数据项。</param>
      <returns>绑定到一个新编辑元素 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 列的属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>当在派生类中重写，获取绑定到的只读元素 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 列的属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">由包含预期的单元格的行的数据项。</param>
      <returns>新的只读元素绑定到 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 列的属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)">
      <summary>获取 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 此列，它表示指定的数据项的行的交集处的单元格的属性值。</summary>
      <param name="dataItem">由包含预期的单元格的行的数据项。</param>
      <returns>单元格内容;或 null, ，如果找不到该单元格。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataItem" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)">
      <summary>检索 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 此列，它指定的行的交集处的单元格的属性值。</summary>
      <param name="dataGridRow">包含目标单元格的行。</param>
      <returns>单元格内容;或 null, ，如果找不到该单元格。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> ，其中包含此列属性已更改的列。</summary>
      <param name="propertyName">更改列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定的值 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性基于的属性规则 <see cref="T:System.Windows.Controls.DataGrid" /> ，其中包含此列。</summary>
      <param name="baseValue">传递给委托的值。</param>
      <returns>true 如果列单元格中不能编辑基于规则 <see cref="T:System.Windows.Controls.DataGrid" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCopyingCellClipboardContent(System.Object)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> 事件。</summary>
      <param name="item">所选元素的数据上下文。</param>
      <returns>一个表示单元格的内容的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnPastingCellClipboardContent(System.Object,System.Object)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> 事件。</summary>
      <param name="item">所选元素的数据上下文。</param>
      <param name="cellContent">要将其粘贴到该单元格的内容。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当在派生类中重写设置单元格内容，根据需要进行编辑。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="editingEventArgs">有关导致一个单元格以进入编辑模式的用户笔势的信息。</param>
      <returns>当所返回的派生类中，未编辑的单元格的值。 此实现返回 null 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>当在派生类中重写更新中更改的列属性值对的响应中的列的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">更改列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> 类的新实例。</summary>
      <param name="column">与事件相关的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> 类的新实例。</summary>
      <param name="dataGridColumn">要移动的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridComboBoxColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>使正在编辑若要还原到指定的值的列单元格。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="uneditedValue">在正在编辑的单元中以前未编辑的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>之前执行任何所需的验证退出编辑模式。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <returns>false 如果验证失败;否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取组合框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, ，<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, ，和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新的组合框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, ，<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, ，和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取只读组合框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, ，<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, ，和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新的、 只读的组合框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />, ，<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />, ，和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定的值 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性基于属性的规则 <see cref="T:System.Windows.Controls.DataGrid" /> ，其中包含此列。</summary>
      <param name="baseValue">传递给委托的值。</param>
      <returns>true 如果中的组合框不能编辑列;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedItemBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> 时 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" /> 属性更改。</summary>
      <param name="oldBinding">以前的绑定。</param>
      <param name="newBinding">已更改为列绑定。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedValueBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> 时 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" /> 属性更改。</summary>
      <param name="oldBinding">以前的绑定。</param>
      <param name="newBinding">已更改为列绑定。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnTextBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> 时 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 属性更改。</summary>
      <param name="oldBinding">以前的绑定。</param>
      <param name="newBinding">已更改为列绑定。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当列中的单元格进入编辑模式时调用。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="editingEventArgs">有关导致一个单元格以进入编辑模式的用户笔势的信息。</param>
      <returns>未编辑的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新响应的绑定更改中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridHyperlinkColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>使正在编辑若要还原到指定的值的列单元格。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="uneditedValue">在正在编辑的单元中以前未编辑的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>之前执行任何所需的验证退出编辑模式。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <returns>false 如果验证失败;否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个可编辑 <see cref="T:System.Windows.Controls.TextBox" /> 元素绑定到列的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新文本框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个只读的 <see cref="T:System.Windows.Documents.Hyperlink" /> 元素绑定到列的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>绑定到列的一个新的、 只读的超链接元素 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.OnContentBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>通知 <see cref="T:System.Windows.Controls.DataGrid" /> 时 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性更改。</summary>
      <param name="oldBinding">以前的绑定。</param>
      <param name="newBinding">已更改为列绑定。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当列中的单元格进入编辑模式时调用。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="editingEventArgs">有关导致一个单元格以进入编辑模式的用户笔势的信息。</param>
      <returns>未编辑的单元格的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新列属性值更改为的响应中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
      <summary>使用绝对值（以像素为单位）初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的新实例。</summary>
      <param name="pixels">要将长度初始化为的绝对像素值（每英寸 96 像素）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pixels" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 使用指定的值和单位的类。</summary>
      <param name="value">元素的请求的大小。</param>
      <param name="type">用于确定如何计算元素的大小类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.- 或 -<paramref name="type" /> is not <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />, or <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />.</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 类使用指定的值、 单元、 期望的值，并显示值。</summary>
      <param name="value">元素的请求的大小。</param>
      <param name="type">用于确定如何计算元素的大小类型。</param>
      <param name="desiredValue">所需的元素的计算的大小。</param>
      <param name="displayValue">元素的分配的大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.- 或 -<paramref name="type" /> is not <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />, <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />, or <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />.- 或 -<paramref name="desiredValue" /> 是 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。- 或 -<paramref name="displayValue" /> 是 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前的 <see cref="T:System.Windows.Controls.DataGridLength" />。</summary>
      <param name="obj">要与当前类型进行比较的对象。</param>
      <returns>true 如果指定的对象是 <see cref="T:System.Windows.Controls.DataGridLength" /> 具有相同的值或与当前的大小调整模式 <see cref="T:System.Windows.Controls.DataGridLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
      <summary>确定指定的 <see cref="T:System.Windows.Controls.DataGridLength" /> 是否等同于当前的 <see cref="T:System.Windows.Controls.DataGridLength" />。</summary>
      <param name="other">
        <see cref="T:System.Windows.Controls.DataGridLength" /> 要与当前实例进行比较。</param>
      <returns>true 如果指定的对象是 <see cref="T:System.Windows.Controls.DataGridLength" /> 具有相同的值或与当前的大小调整模式 <see cref="T:System.Windows.Controls.DataGridLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
      <summary>获取的哈希代码 <see cref="T:System.Windows.Controls.DataGridLength" />。</summary>
      <returns>当前 <see cref="T:System.Windows.Controls.DataGridLength" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构是否相等。</summary>
      <param name="gl1">第一个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例进行比较。</param>
      <param name="gl2">第二个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例进行比较。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例具有相同的值或大小调整模式; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Implicit(System.Double)~System.Windows.Controls.DataGridLength">
      <summary>将转换 <see cref="T:System.Double" /> 实例 <see cref="T:System.Windows.Controls.DataGridLength" /> 类。</summary>
      <param name="value">要初始化的长度为绝对像素值 （每英寸 96 像素为单位）。</param>
      <returns>一个对象，表示指定的长度。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构以确定它们是否不相等。</summary>
      <param name="gl1">第一个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例进行比较。</param>
      <param name="gl2">第二个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例进行比较。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例是否具有相同的值或大小调整模式; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.ToString">
      <summary>返回表示当前对象的字符串。</summary>
      <returns>一个字符串，表示当前对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的实例是否可以转换为的一个实例 <see cref="T:System.Windows.Controls.DataGridLength" /> 类。</summary>
      <param name="context">一个提供格式上下文的对象。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.Controls.DataGridLength" /> 类可以转换为指定类型的实例。</summary>
      <param name="context">一个提供格式上下文的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为的一个实例 <see cref="T:System.Windows.Controls.DataGridLength" /> 类。</summary>
      <param name="context">一个提供格式上下文的对象。</param>
      <param name="culture">要用作当前区域性的对象。</param>
      <param name="value">要转换的值。</param>
      <returns>转换后的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可转换为类型的有效类型 <see cref="T:System.Windows.Controls.DataGridLength" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>实例转换 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的指定类型的实例。</summary>
      <param name="context">一个提供格式上下文的对象。</param>
      <param name="culture">要用作当前区域性的对象。</param>
      <param name="value">要转换的 <see cref="T:System.Windows.Controls.DataGridLength" />。</param>
      <param name="destinationType">要将值转换到的类型。</param>
      <returns>转换后的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Windows.Controls.DataGridLength" /> 或 <paramref name="destinationType" /> 不是有效的转换类型。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> 类的新实例。</summary>
      <param name="column">包含要编辑的单元格的列。</param>
      <param name="row">包含要编辑的单元格的行。</param>
      <param name="editingEventArgs">有关导致单元格输入的用户笔势的信息编辑模式。</param>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRow" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
      <summary>排列的行的内容。</summary>
      <param name="arrangeBounds">行的可用区域。</param>
      <returns>使用按行的实际区域。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
      <summary>返回项的索引行的数据中 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>行的数据项目，则为-1 如果未找到项的索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
      <summary>返回 <see cref="T:System.Windows.Controls.DataGridRow" /> ，其中包含指定的元素。</summary>
      <param name="element">要查找某一行中包含一个元素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridRow" /> ，其中包含指定的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用以更新所显示的单元格时 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合已更改。</summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
      <param name="e">中的事件数据 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
      <summary>返回一个新 <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> 此行。</summary>
      <returns>此行新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnHeaderChanged(System.Object,System.Object)">
      <summary>时调用此方法的值 <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性已更改。</summary>
      <param name="oldHeader">以前的值 <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnItemChanged(System.Object,System.Object)">
      <summary>更新显示单元格时 <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性值已更改。</summary>
      <param name="oldItem">以前的值 <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当对此任何依赖项属性的有效值 <see cref="T:System.Windows.Controls.DataGridRow" /> 已更新。</summary>
      <param name="e">描述已更改的属性的事件数据（包括旧值和新值）。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 事件时 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 属性值更改为 true。</summary>
      <param name="e">事件数据，调用此方法时，是空 <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>在控件模板发生更改时调用。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 事件时 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 属性值更改为 false。</summary>
      <param name="e">事件数据，调用此方法时，是空 <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.#ctor(System.Object,System.Int32,System.Int32,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowClipboardEventArgs" /> 类的新实例。</summary>
      <param name="item">发生事件的行的数据项。</param>
      <param name="startColumnDisplayIndex">
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含行中第一个选定的单元格的列的值。</param>
      <param name="endColumnDisplayIndex">
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含最后一个行中的选定单元格的列的值。</param>
      <param name="isColumnHeadersRow">一个值，指示发生此事件的行是否表示列标题。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.FormatClipboardCellValues(System.String)">
      <summary>返回 <see cref="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent" /> 以指定格式的字符串值。</summary>
      <param name="format">中要序列化的单元值的数据格式。</param>
      <returns>格式化的字符串。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> 类的新实例。</summary>
      <param name="row">发生此事件的行。</param>
      <param name="detailsElement">作为框架元素行详细信息部分。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowEditEndingEventArgs" /> 类的新实例。</summary>
      <param name="row">发生此事件的行。</param>
      <param name="editAction">一个值，该值指示是否取消还是提交编辑。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> 类的新实例。</summary>
      <param name="row">发生此事件的行。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridSortingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridSortingEventArgs" /> 类的新实例。</summary>
      <param name="column">要排序的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取按定义的元素 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>绑定到列的一个新编辑元素 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取按定义的元素 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>绑定到列的一个新的、 只读元素 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新模板属性值更改为的响应中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridTextColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>使正在编辑若要还原到指定的值的列单元格。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="uneditedValue">在正在编辑的单元中以前未编辑的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>之前执行任何所需的验证退出编辑模式。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <returns>false 如果验证失败;否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取 <see cref="T:System.Windows.Controls.TextBox" /> 控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新文本框控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个只读的 <see cref="T:System.Windows.Controls.TextBlock" /> 控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <param name="cell">单元格将包含所生成的元素。</param>
      <param name="dataItem">项表示包含目标单元格的行的数据。</param>
      <returns>新的、 只读文本块控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当列中的单元格进入编辑模式时调用。</summary>
      <param name="editingElement">处于编辑模式下的单元格的列将显示元素。</param>
      <param name="editingEventArgs">有关导致一个单元格以进入编辑模式的用户笔势的信息。</param>
      <returns>未编辑的单元格的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新列属性值更改为的响应中的列中的单元格的内容。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>当在派生类中重写时，返回基于自定义逻辑的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <param name="item">要为其选择模板的数据对象。</param>
      <param name="container">数据绑定对象。</param>
      <returns>返回 <see cref="T:System.Windows.DataTemplate" /> 或 null。 默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DatePicker" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>生成的可视树 <see cref="T:System.Windows.Controls.DatePicker" /> 控制应用新模板时。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> 路由的事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> 路由的事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>返回 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 供自动化基础结构使用。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.DatePicker" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由的事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString">
      <summary>提供在选定日期的文本表示形式。</summary>
      <returns>在选定的日期，或为空字符串的文本表示如果 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 是 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> 类的新实例。</summary>
      <param name="exception">从最初的异常 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</param>
      <param name="text">引发的文本 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Decorator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.Decorator" /> 元素。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素用来排列其子内容。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.Decorator" /> 元素及其子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)">
      <summary>获取子 <see cref="T:System.Windows.Media.Visual" /> 处指定元素 <paramref name="index" /> 位置。</summary>
      <param name="index">子元素的索引位置。</param>
      <returns>位于指定 <paramref name="index" /> 位置的子元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 大于可视子元素的数目。</exception>
    </member>
    <member name="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.Decorator" /> 准备适用于排列其期间 <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>目标 <see cref="T:System.Windows.Size" /> 的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text"> 要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DockPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 （子元素） <see cref="T:System.Windows.Controls.DockPanel" /> 元素。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素用来排列其子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.DockPanel" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
      <summary>获取指定的 <see cref="T:System.Windows.UIElement" /> 的 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>元素的 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.DockPanel" /> 之前过程中排列它们 <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">最多 <see cref="T:System.Windows.Size" /> 为不超过。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，它表示所需的元素大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
      <summary>将 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性的值设置为指定的元素。</summary>
      <param name="element">要向其写入附加属性的元素。</param>
      <param name="dock">所需的 <see cref="T:System.Windows.Controls.Dock" /> 值。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DocumentViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.DecreaseZoom">
      <summary>将一个缩放级别超出文档内容缩放。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.Find">
      <summary>将焦点移到查找工具栏搜索文档内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToHeight">
      <summary>使单个页面适合当前视区的高度。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross">
      <summary>使文档适合当前 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 属性设置。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)">
      <summary>使文档适合指定的最大页宽数。</summary>
      <param name="pagesAcross">若要适合当前最大页数 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" />。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToWidth">
      <summary>使单个页面适合当前视区的宽度。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)">
      <summary>返回的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 当前显示的元素。</summary>
      <param name="changed">此方法返回时，包含 true 如果的集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 元素到最后一次调用后更改 <see cref="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)" />; 否则为 false。</param>
      <returns>集合 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 中当前显示的元素 <see cref="T:System.Windows.Controls.DocumentViewer" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.IncreaseZoom">
      <summary>放大文档内容由一个缩放级别。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveDown">
      <summary>将文档内容向下滚动 16 个与设备无关的像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveLeft">
      <summary>将文档内容向左滚动 16 个与设备无关的像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveRight">
      <summary>将文档内容向右滚动 16 个设备独立像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveUp">
      <summary>将文档内容向上滚动 16 个与设备无关的像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnApplyTemplate">
      <summary>响应 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)" /> 方法从 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 实现。</summary>
      <param name="element">要使其可见的对象。</param>
      <param name="rect">矩形区域 <paramref name="element" /> 要使其可见。</param>
      <param name="pageNumber">要查看的页的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此 <see cref="T:System.Windows.Controls.DocumentViewer" /> 控件。</summary>
      <returns>新的 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDecreaseZoomCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.DecreaseZoom" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDocumentChanged">
      <summary>更改要显示的文档时对调用的响应。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFindCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.Find" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFirstPageCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToHeightCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand(System.Int32)">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)" /> 方法。</summary>
      <param name="pagesAcross">若要适合整个内容区域的页的数目。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToWidthCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnGoToPageCommand(System.Int32)">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)" /> 方法。</summary>
      <param name="pageNumber">要定位到的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnIncreaseZoomCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.IncreaseZoom" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnLastPageCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveDownCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.MoveDown" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveLeftCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.MoveLeft" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveRightCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.MoveRight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveUpCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.MoveUp" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnNextPageCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviousPageCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageDownCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageDown" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageLeftCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageRightCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageRight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageUpCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageUp" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnViewThumbnailsCommand">
      <summary>响应 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageDown">
      <summary>向下滚动一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft">
      <summary>向左滚动一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageRight">
      <summary>向右滚动一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageUp">
      <summary>向上滚动一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ViewThumbnails">
      <summary>显示网页的缩略图表示。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>执行验证检查的值。</summary>
      <param name="value">值 （来自绑定目标） 来检查。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Expander" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCollapsed">
      <summary>引发 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 事件时 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 属性从更改 true 到 false。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
      <summary>创建的实现 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Expander" /> 控件。</summary>
      <returns>一个新 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.Expander" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnExpanded">
      <summary>引发 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 事件时 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 属性从更改 false 到 true。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.DecreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.Find">
      <summary>切换 查找 对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.IncreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnApplyTemplate">
      <summary>生成的可视树 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>只要某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>相应 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对于此控件的实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDocumentChanged">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性更改。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFirstPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnGoToPageCommand(System.Int32)">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> 路由命令。</summary>
      <param name="pageNumber">要转到的页号。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件。</summary>
      <param name="e">包含与 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件相关联的参数的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnLastPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件。</summary>
      <param name="e">包含与 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件相关联的参数的 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnNextPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPageViewsChanged">
      <summary>处理 <see cref="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged" /> 路由事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPreviousPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCompleted">
      <summary>当打印作业完成时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CancelPrint">
      <summary>取消任何当前打印作业。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CanGoToPage(System.Int32)">
      <summary>返回一个值，该值指示是否或 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 能够跳转至指定的页号。</summary>
      <param name="pageNumber">若要检查为有效的跳转目标页面数。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 能够跳转至指定的页号; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.DecreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Find">
      <summary>切换查找对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.IncreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnApplyTemplate">
      <summary>生成的可视树 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>时，调用此 Flow Document Reader 呈现更改 DPI。</summary>
      <param name="oldDpiScaleInfo">以前的 DPI 比例设置。</param>
      <param name="newDpiScaleInfo">新的 DPI 比例设置。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnInitialized(System.EventArgs)">
      <summary>处理 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 路由事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" /> 对象，其中包含与 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 路由事件相关联的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 路由事件。</summary>
      <param name="e">包含与 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 路由事件相关联的参数的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCompleted">
      <summary>当打印作业完成时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnSwitchViewingModeCommand(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>处理 <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> 路由命令。</summary>
      <param name="viewingMode">其中一个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值，该值指定要切换到的查看模式。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Print">
      <summary>调用标准打印对话框用于打印的内容 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 和配置打印首选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>执行 <see cref="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand" /> 命令。</summary>
      <param name="viewingMode">其中一个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值，该值指定所需的查看模式。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCore(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>处理 <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> 命令。</summary>
      <param name="viewingMode">其中一个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值，该值指定所需的查看模式。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。 使用 <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 属性来添加 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容子级作为 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.CancelPrint">
      <summary>取消任何当前打印作业。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.DecreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Find">
      <summary>切换 查找 对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.IncreaseZoom">
      <summary>执行 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnApplyTemplate">
      <summary>生成的可视树 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件。</summary>
      <param name="e">包含与 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件相关联的参数的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件。</summary>
      <param name="e">包含与 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件相关联的参数的 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCompleted">
      <summary>当打印作业完成时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Print">
      <summary>调用标准 打印 对话框用于打印的内容 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 和配置打印首选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#IServiceProvider#GetService(System.Type)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />, ，或 null 如果没有服务对象类型的 <paramref name="serviceType" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 使用 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 属性来添加 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容子级作为 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Frame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>将添加一个条目，以后退导航历史记录，其中包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
      <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，表示与特定部分内容相关联的应用程序定义的状态。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 是 null, ，和一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象未从返回 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoBack">
      <summary>导航到的最新的项到底层导航历史记录，如果 <see cref="T:System.Windows.Controls.Frame" /> 管理其自己的导航历史记录。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Controls.Frame.GoBack" /> 后退导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoForward">
      <summary>导航到前进导航历史记录中的最新项，如果 <see cref="T:System.Windows.Controls.Frame" /> 管理其自己的导航历史记录。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Controls.Frame.GoForward" /> 后退导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object)">
      <summary>异步导航到包含在某个对象的内容。</summary>
      <param name="content">
        <see cref="T:System.Object" /> ，包含要导航到的内容。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)">
      <summary>异步导航到包含在某个对象，并传递一个对象，其中包含要使用的数据导航期间处理的内容。</summary>
      <param name="content">
        <see cref="T:System.Object" /> ，包含要导航到的内容。</param>
      <param name="extraData">一个 <see cref="T:System.Object" /> ，其中包含用于在导航过程处理数据。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
      <summary>异步导航到由指定的内容 uniform resource identifier (URI)。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)">
      <summary>异步导航到位于源内容 uniform resource identifier (URI), ，并将传递一个对象，包含用于在导航过程处理数据。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <param name="extraData">一个 <see cref="T:System.Object" /> ，其中包含用于在导航过程处理数据。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
      <summary>创建可视化树的模板生成时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> 事件。</summary>
      <param name="args">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Frame" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Frame" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Refresh">
      <summary>重新加载当前的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.RemoveBackEntry">
      <summary>移除后的历史记录中的最新的日志条目。</summary>
      <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> 中如果有一个后退导航历史记录。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.ShouldSerializeContent">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.StopLoading">
      <summary>将停止进一步下载当前导航请求的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Grid" /> 的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.Grid" /> 元素。</summary>
      <param name="arrangeSize">指定的大小这 <see cref="T:System.Windows.Controls.Grid" /> 元素应用来排列其子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> 表示此网格元素与其子项的排列的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.UIElement)">
      <summary>从给定的 <see cref="T:System.Windows.UIElement" /> 中获取 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.UIElement)">
      <summary>从给定的 <see cref="T:System.Windows.UIElement" /> 中获取 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetIsSharedSizeScope(System.Windows.UIElement)">
      <summary>从给定的 <see cref="T:System.Windows.UIElement" /> 中获取 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.UIElement)">
      <summary>从给定的 <see cref="T:System.Windows.UIElement" /> 中获取 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.UIElement)">
      <summary>从给定的 <see cref="T:System.Windows.UIElement" /> 中获取 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
      <summary>获取子 <see cref="T:System.Windows.Media.Visual" /> 指定 <paramref name="index" /> 位置。</summary>
      <param name="index">所需的从零开始的索引位置 <see cref="T:System.Windows.Media.Visual" />。</param>
      <returns>子 <see cref="T:System.Windows.Media.Visual" /> 指定 <paramref name="index" /> 位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>测量的子级 <see cref="T:System.Windows.Controls.Grid" /> 为预期的过程中排列它们 <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">指示不应超过上限大小。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> 表示要排列子内容的所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>时调用此方法的可视子级 <see cref="T:System.Windows.Controls.Grid" /> 元素更改。</summary>
      <param name="visualAdded">标识将添加的可视子级。</param>
      <param name="visualRemoved">标识已删除的可视子级。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.UIElement,System.Int32)">
      <summary>将 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性的值设置为给定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.UIElement,System.Int32)">
      <summary>将 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性的值设置为给定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetIsSharedSizeScope(System.Windows.UIElement,System.Boolean)">
      <summary>将 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性的值设置为给定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.UIElement,System.Int32)">
      <summary> 将 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性的值设置为给定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">要在其上设置附加属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.UIElement,System.Int32)">
      <summary>将 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性的值设置为给定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeColumnDefinitions">
      <summary>返回 true if <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 与此实例的关联 <see cref="T:System.Windows.Controls.Grid" /> 不为空。</summary>
      <returns>true <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 与此实例的关联 <see cref="T:System.Windows.Controls.Grid" /> 不为空; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeRowDefinitions">
      <summary>返回 true if <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 与此实例的关联 <see cref="T:System.Windows.Controls.Grid" /> 不为空。</summary>
      <returns>true <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 与此实例的关联 <see cref="T:System.Windows.Controls.Grid" /> 不为空; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridSplitter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>创建的实现 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。</summary>
      <returns>一个新 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.ToolTip" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>当按下键时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件失去键盘焦点。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>响应中的维度更改 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。</summary>
      <param name="sizeInfo">中的大小更改的相关信息 <see cref="T:System.Windows.Controls.GridSplitter" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddChild(System.Object)">
      <summary>添加 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象传递给 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <param name="column">要添加的列 </param>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddText(System.String)">
      <summary>不支持。</summary>
      <param name="text">文本字符串</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>删除所有设置、 绑定和样式与 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 以清除。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现此 <see cref="T:System.Windows.Controls.GridView" /> 对象。</summary>
      <param name="parent">
        <see cref="T:System.Windows.Controls.ListView" /> 控件实现此 <see cref="T:System.Windows.Controls.GridView" /> 视图。</param>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.GridView" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetColumnCollection(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性的内容。</summary>
      <param name="element">与集合关联的 <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>准备 <see cref="T:System.Windows.Controls.ListViewItem" /> 显示根据此定义 <see cref="T:System.Windows.Controls.GridView" /> 对象。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 来显示。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.SetColumnCollection(System.Windows.DependencyObject,System.Windows.Controls.GridViewColumnCollection)">
      <summary>设置 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性的内容。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.GridView" /> 对象。</param>
      <param name="collection">要分配的 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ShouldSerializeColumnCollection(System.Windows.DependencyObject)">
      <summary>确定是否序列化 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性。</summary>
      <param name="obj">要在其上设置 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 的对象。</param>
      <returns>如果必须序列化 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="column">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Controls.GridView" /> 对象。</summary>
      <returns>一个字符串，指示中的列数 <see cref="T:System.Windows.Controls.GridView" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性更改时发生。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.ToString">
      <summary>创建的字符串表示形式 <see cref="T:System.Windows.Controls.GridViewColumn" />。</summary>
      <returns>一个字符串，标识该对象作为 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象，并显示的值 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.ClearItems">
      <summary>删除所有的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象从 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.InsertItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>添加 <see cref="T:System.Windows.Controls.GridViewColumn" /> 到集合中的指定索引处。</summary>
      <param name="index">要放置新的位置 <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
      <param name="column">要插入的 <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.MoveItem(System.Int32,System.Int32)">
      <summary>更改的位置 <see cref="T:System.Windows.Controls.GridViewColumn" /> 集合中。</summary>
      <param name="oldIndex">原始位置 <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
      <param name="newIndex">新位置 <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件时 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 更改。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.RemoveItem(System.Int32)">
      <summary>删除 <see cref="T:System.Windows.Controls.GridViewColumn" /> 从 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 中指定索引处。</summary>
      <param name="index">位置 <see cref="T:System.Windows.Controls.GridViewColumn" /> 中删除。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.SetItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>将替换 <see cref="T:System.Windows.Controls.GridViewColumn" /> 这是与另一个指定索引处 <see cref="T:System.Windows.Controls.GridViewColumn" />。</summary>
      <param name="index">在其中的位置的新 <see cref="T:System.Windows.Controls.GridViewColumn" /> 替代了旧 <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
      <param name="column">
        <see cref="T:System.Windows.Controls.GridViewColumn" /> 要放置在指定位置处。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>当按下 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时响应。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnApplyTemplate">
      <summary>响应 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的可视化树的创建。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnClick">
      <summary>提供类处理 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnCreateAutomationPeer">
      <summary>提供了 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> 事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件时用户将鼠标指针停在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件，当鼠标移出时 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件在用户将鼠标指针暂停在上时按鼠标左键时 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 用户将鼠标指针暂停在上时释放鼠标左键时发生的事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseMove" /> 用户内移动鼠标时发生的事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>响应中的更改 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 维度。</summary>
      <param name="sizeInfo">中的大小更改的相关信息 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>确定是否序列化 <see cref="T:System.Windows.DependencyProperty" />。</summary>
      <param name="dp">依赖项属性中。</param>
      <returns>true 如果 <see cref="T:System.Windows.DependencyProperty" /> 必须序列化; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>排列元素的内容标头行，并计算标题行的实际大小。</summary>
      <param name="arrangeSize">可用于列标题行区域。</param>
      <returns>实际 <see cref="T:System.Windows.Size" /> 为列标题行。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定所显示的列标题行所需的区域。</summary>
      <param name="constraint">可供显示列标题行的区域的量。</param>
      <returns>所需 <see cref="T:System.Windows.Size" /> 为列标题行。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 列标题行的对象。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> 此列标题行中的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 用户按下鼠标左键内的时发生的事件 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ，同时用户释放鼠标左键时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseMove" /> 用户移动鼠标时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewRowPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>定位的某行根据大小的相应内容 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象。</summary>
      <param name="arrangeSize">要用于显示的区域 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</param>
      <returns>实际 <see cref="T:System.Windows.Size" /> ，用来显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定所显示的行所需的区域。</summary>
      <param name="constraint">要用于显示的最大区域 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</param>
      <returns>实际 <see cref="T:System.Windows.Size" /> 显示区域的 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ToString">
      <summary>返回 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的字符串表示形式。</summary>
      <returns>一个字符串，显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>当按下 <see cref="T:System.Windows.Controls.GroupBox" /> 的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时响应。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnCreateAutomationPeer">
      <summary>创建实现 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.GroupBox" /> 控件。</summary>
      <returns>用于 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.GroupBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.GroupItem" />。</summary>
      <param name="arrangeSize">父级范围内的最后一个方面， <see cref="T:System.Windows.Controls.GroupItem" /> 应该用于排列本身及其子元素。</param>
      <returns>实际大小由使用 <see cref="T:System.Windows.Controls.GroupItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnApplyTemplate">
      <summary>在应用新模板时生成 <see cref="T:System.Windows.Controls.GroupItem" /> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.GroupItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.GroupItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>清除所有的属性关联。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>删除指定项和属性之间的关联。</summary>
      <param name="item">关联的项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有属性列表中删除指定属性。</summary>
      <param name="dp">要删除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与指定项关联的指定属性的值。</summary>
      <param name="item">具有与之关联的指定属性的项。</param>
      <param name="dp">将返回其值的属性。</param>
      <returns>与指定项关联的指定属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储指定的属性和值，并将它们与指定的项相关联。</summary>
      <param name="item">要将值和属性与其相关联的项。</param>
      <param name="dp">与指定的项相关联的属性。</param>
      <param name="value">相关联的属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupStyle" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> 事件使用提供的参数。</summary>
      <param name="e">要引发事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.HeaderedContentControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性 <see cref="T:System.Windows.Controls.HeaderedContentControl" /> 更改。</summary>
      <param name="oldHeader">旧值 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性。</param>
      <param name="newHeader">新值 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性更改。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性更改。</summary>
      <param name="oldHeaderTemplate">旧值 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性。</param>
      <param name="newHeaderTemplate">新值 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性更改。</summary>
      <param name="oldHeaderTemplateSelector">旧值 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性。</param>
      <param name="newHeaderTemplateSelector">新值 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.ToString">
      <summary>提供的字符串表示形式 <see cref="T:System.Windows.Controls.HeaderedContentControl" />。</summary>
      <returns>对象的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 更改。</summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的旧值。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性更改时发生。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性更改。</summary>
      <param name="oldHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性的旧值。</param>
      <param name="newHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性更改。</summary>
      <param name="oldHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性的旧值。</param>
      <param name="newHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 对象。</summary>
      <returns>一个表示此对象的字符串。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.#ctor(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLengthUnit,System.Windows.Rect)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 类的新实例。</summary>
      <param name="cacheLength">缓存之前和之后视区的大小。</param>
      <param name="cacheLengthUnit">使用的单元的类型 <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性。</param>
      <param name="viewport">缓存之前和之后视区的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Object)">
      <summary>返回一个值，该值指示指定的对象是否等于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</summary>
      <param name="oCompare">要比较的对象。</param>
      <returns>如果指定对象等于此 true，则为 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 是否等同于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</summary>
      <param name="comparisonConstraints">要比较的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 是否等同于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.GetHashCode">
      <summary>获取此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 的哈希代码。</summary>
      <returns>此哈希代码 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Equality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象是否相等。</summary>
      <param name="constraints1">要比较的第一个 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <param name="constraints2">要比较的第二个 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象是否相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象不相等。</summary>
      <param name="constraints1">要比较的第一个 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <param name="constraints2">要比较的第二个 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象是否不相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 类的新实例。</summary>
      <param name="logicalSize">逻辑单元中的标头的大小。</param>
      <param name="pixelSize">标头的大小，请在 device-independent units (1/96th inch per unit)。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Object)">
      <summary>返回一个值，该值指示指定的对象是否等于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象。</summary>
      <param name="oCompare">要比较的对象。</param>
      <returns>true 如果指定的对象是否等于此对象;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象是否等于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象。</summary>
      <param name="comparisonHeaderSizes">要比较的对象。</param>
      <returns>true 如果指定的对象是否等于此对象;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.GetHashCode">
      <summary>获取的哈希代码 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象是否相等。</summary>
      <param name="headerDesiredSizes1">要比较的第一个对象。</param>
      <param name="headerDesiredSizes2">要比较的第二个对象。</param>
      <returns>如果指定的对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象不相等。</summary>
      <param name="headerDesiredSizes1">要比较的第一个对象。</param>
      <param name="headerDesiredSizes2">要比较的第二个对象。</param>
      <returns>true 如果指定的对象是否相等。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 类的新实例。</summary>
      <param name="logicalSize">控件的子项目，请在逻辑单元的大小。</param>
      <param name="logicalSizeInViewport">在视区内，使用逻辑单位的控件的子项目的大小。</param>
      <param name="logicalSizeBeforeViewport">在视区内，使用逻辑单位之前缓存中的控件的子项目的大小。</param>
      <param name="logicalSizeAfterViewport">在视区内，使用逻辑单位后可以在缓存中的控件的子项目的大小。</param>
      <param name="pixelSize">控件的子级的大小的项目，因此在 device-independent units (1/96th inch per unit)。</param>
      <param name="pixelSizeInViewport">在视区内，是在控件的子项的大小 device-independent units (1/96th inch per unit)。</param>
      <param name="pixelSizeBeforeViewport">位于在视区内之前, 缓存中的控件的子项目的大小 device-independent units (1/96th inch per unit)。</param>
      <param name="pixelSizeAfterViewport">处于缓存中之后视区中的控件的子项目的大小 device-independent units (1/96th inch per unit)。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Object)">
      <summary>返回一个值，该值指示指定的对象是否等于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象。</summary>
      <param name="oCompare">要与此对象进行比较的对象。</param>
      <returns>true 如果指定的对象是否等同于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象是否等于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象。</summary>
      <param name="comparisonItemSizes">要与此对象进行比较的对象。</param>
      <returns>true 如果指定的对象是否等同于此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.GetHashCode">
      <summary>获取此哈希代码 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象。</summary>
      <returns>此哈希代码 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值，该值指示是否指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 是否相等。</summary>
      <param name="itemDesiredSizes1">要比较的第一个对象。</param>
      <param name="itemDesiredSizes2">要比较的第二个对象。</param>
      <returns>true 如果指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值，该值指示是否指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 不相等。</summary>
      <param name="itemDesiredSizes1">要比较的第一个对象。</param>
      <param name="itemDesiredSizes2">要比较的第二个对象。</param>
      <returns>true 如果指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 不相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Image" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.ArrangeOverride(System.Windows.Size)">
      <summary>排列和大小的图像控件。</summary>
      <param name="arrangeSize">用于排列控件的大小。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.MeasureOverride(System.Windows.Size)">
      <summary>更新 <see cref="P:System.Windows.UIElement.DesiredSize" /> 的图像。 这种方法称为父 <see cref="T:System.Windows.UIElement" /> 且布局的第一个阶段。</summary>
      <param name="constraint">不应超过图像大小。</param>
      <returns>图像的所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Image" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Image" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>时，调用此图像呈现更改 DPI。</summary>
      <param name="oldDpi">以前设置的 DPI 比例</param>
      <param name="newDpi">设置新的 DPI 缩放比例</param>
    </member>
    <member name="M:System.Windows.Controls.Image.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现的内容 <see cref="T:System.Windows.Controls.Image" />。</summary>
      <param name="dc">一个实例 <see cref="T:System.Windows.Media.DrawingContext" /> 用于呈现控件。</param>
    </member>
    <member name="M:System.Windows.Controls.InitializingNewItemEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.InitializingNewItemEventArgs" /> 类的新实例。</summary>
      <param name="newItem">新项添加到 <see cref="T:System.Windows.Controls.DataGrid" />。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.#ctor">
      <summary>初始化 InkCanvas 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素，并确定的大小 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</summary>
      <param name="arrangeSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
      <returns>使用的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CanPaste">
      <summary>指示是否可以将剪贴板内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>true 如果可以粘贴剪贴板的内容，;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CopySelection">
      <summary>将选定的笔画和/或到剪贴板上的元素。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CutSelection">
      <summary>删除所选的笔画和元素，并将它们复制到剪贴板。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要获取其下边缘属性的元素。</param>
      <returns>依赖项对象的底部坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
      <summary>返回可被识别的应用程序操作的集合 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>一套手势 <see cref="T:System.Windows.Controls.InkCanvas" /> 识别。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 false。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要获取其左边缘的属性的元素。</param>
      <returns>依赖项对象的左的坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要获取其右边缘属性的元素。</param>
      <returns>依赖项对象的右边缘坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
      <summary>检索 <see cref="T:System.Windows.FrameworkElement" /> 中所选对象 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>数组 <see cref="T:System.Windows.FrameworkElement" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
      <summary>检索 <see cref="T:System.Windows.Ink.StrokeCollection" /> 选择一个表示 <see cref="T:System.Windows.Ink.Stroke" /> 上的对象 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>选定笔画的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
      <summary>获取所选的笔画和元素的边界上 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>最小矩形，其中包含所有所选的笔画和元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要获取的 top 属性的元素。</param>
      <returns>依赖项对象上坐标。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
      <summary>重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，并从子元素集合中返回指定索引处的子元素。</summary>
      <param name="index">集合中请求的子元素的从零开始的索引。</param>
      <returns>请求的子元素。 这不应返回 null；如果提供的索引超出范围，则引发异常。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>确定是否给的定点落在的呈现边界 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <param name="hitTestParams">一个对象，指定 <see cref="T:System.Windows.Point" /> 进行命中测试。</param>
      <returns>一个对象，表示 <see cref="T:System.Windows.Media.Visual" /> ，则返回从命中测试。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
      <summary>返回一个值，该值指示选择装饰器的哪一部分相交或包围指定的点。</summary>
      <param name="point">用于命中测试的点。</param>
      <returns>一个值，指示选择装饰器的哪一部分相交或包围指定的点。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
      <summary>测量的大小以所需的子元素的布局，并确定的大小 <see cref="System.Windows.Controls.InkCanvas" /> 对象。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。 可指定无穷大作为一个值，该值指示元素将调整到适应内容的大小。</param>
      <returns>此元素基于其对子元素大小的计算确定它在布局期间所需要的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 的任何依赖属性的有效值时调用。 将在实参形参中报告已更改的特定依赖属性。 重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">描述已更改的属性的事件数据（包括旧值和新值）。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
      <summary>一个事件，通告用户选择并移动选定的笔画和/或元素。</summary>
      <param name="e">未使用。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste">
      <summary>将靠左上角剪贴板内容粘贴 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
      <summary>粘贴到剪贴板的内容 <see cref="T:System.Windows.Controls.InkCanvas" /> 给定时刻。</summary>
      <param name="point">在该处笔画粘贴的点。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>选择一组 <see cref="T:System.Windows.UIElement" /> 对象。</summary>
      <param name="selectedElements">一套 <see cref="T:System.Windows.UIElement" /> 可选择的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
      <summary>选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</summary>
      <param name="selectedStrokes">一套 <see cref="T:System.Windows.Ink.Stroke" /> 可选择的对象。</param>
      <exception cref="T:System.ArgumentException">中的一个或多个笔画 <paramref name="selectedStrokes" /> 未处于 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>选择的组合 <see cref="T:System.Windows.Ink.Stroke" /> 和 <see cref="T:System.Windows.UIElement" /> 对象。</summary>
      <param name="selectedStrokes">一套 <see cref="T:System.Windows.Ink.Stroke" /> 可选择的对象。</param>
      <param name="selectedElements">一套 <see cref="T:System.Windows.UIElement" /> 可选择的对象。</param>
      <exception cref="T:System.ArgumentException">中的一个或多个笔画 <paramref name="selectedStrokes" /> 未包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要设置其下边缘属性对其元素。</param>
      <param name="length">下的边缘坐标 <paramref name="element" />。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
      <summary>设置应用程序笔势 <see cref="T:System.Windows.Controls.InkCanvas" /> 将识别。</summary>
      <param name="applicationGestures">笔势的应用程序的集合 <see cref="T:System.Windows.Controls.InkCanvas" /> 将识别。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 false。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要设置其左边缘的属性对其元素。</param>
      <param name="length">左边缘的坐标 <paramref name="element" />。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要设置正确的属性对其元素。</param>
      <param name="length">右边缘坐标 <paramref name="element" />。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置的值 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的给定依赖项对象。</summary>
      <param name="element">要对其设置 top 属性元素。</param>
      <param name="length">上的坐标 <paramref name="element" />。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将指定的对象添加到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加文本，在标记中标记内。 总是引发 <see cref="T:System.ArgumentException" />。</summary>
      <param name="textData">未使用。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkCanvasGestureEventArgs" /> 类的新实例。</summary>
      <param name="strokes">表示可能的手势的笔画。</param>
      <param name="gestureRecognitionResults">从手势识别程序结果。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults">
      <summary>从手势识别器返回的结果。</summary>
      <returns>笔势的可能的应用程序的集合 <see cref="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes" /> 可能。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>当在派生类中重写时，提供特定于类型的调用事件处理程序的方式，该方式与基实现相比可提高效率。</summary>
      <param name="genericHandler">要调用的泛型处理程序/委托实现。</param>
      <param name="genericTarget">应在其上调用所提供的处理程序的目标。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements">
      <summary>返回所选的元素。</summary>
      <returns>所选的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes">
      <summary>返回所选的笔画。</summary>
      <returns>所选的笔画。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>设置每个所选的元素。</summary>
      <param name="selectedElements">要选择的元素。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedElements" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)">
      <summary>设置选定的笔画。</summary>
      <param name="selectedStrokes">要选择的笔画。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.#ctor(System.Windows.Ink.Stroke)">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" /> 类的新实例。</summary>
      <param name="stroke">收集 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>提供了一个方法来调用事件处理程序的特定类型的方式。</summary>
      <param name="genericHandler">事件处理程序。</param>
      <param name="genericTarget">事件目标。</param>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.Decorator" /> 元素的内容。</summary>
      <param name="arrangeSize">此元素用来排列其子内容的 <see cref="T:System.Windows.Size" />。</param>
      <returns>表示此 <see cref="T:System.Windows.Controls.Decorator" /> 元素及其子元素的排列大小的 <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
      <summary>将附加的视觉效果 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 到 <see cref="T:System.Windows.Controls.InkPresenter" />。</summary>
      <param name="visual">视觉效果 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />。</param>
      <param name="drawingAttributes">
        <see cref="T:System.Windows.Ink.DrawingAttributes" /> ，它指定动态呈现的墨迹的外观。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> 已附加到可视化树。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)">
      <summary>分离的视觉效果 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 从 <see cref="T:System.Windows.Controls.InkPresenter" />。</summary>
      <param name="visual">视觉效果 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 分离。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> 未附加到 <see cref="T:System.Windows.Controls.InkPresenter" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>返回一个指示如果将剪辑元素的区域的剪裁几何图形 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 属性设置为 true。</summary>
      <param name="layoutSlotSize">元素的可用大小。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Geometry" /> ，它表示是区域剪辑时 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 是 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)">
      <summary>获取位于指定 <paramref name="index" /> 位置的子 <see cref="T:System.Windows.Media.Visual" /> 元素。</summary>
      <param name="index">子元素的索引位置。</param>
      <returns>位于指定 <paramref name="index" /> 位置的子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.Decorator" /> 的子元素，以准备在 <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> 传递期间对其进行排列。</summary>
      <param name="constraint">不能超过的上限 <see cref="T:System.Windows.Size" />。</param>
      <returns>元素的目标 <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Windows.Controls.ItemCollection" /> 中。</summary>
      <param name="newItem">要添加到集合中的项。</param>
      <returns>从零开始的索引，在其中添加对象或-1，如果不能添加项。</returns>
      <exception cref="T:System.InvalidOperationException">要将已添加的项具有不同的逻辑父级。</exception>
      <exception cref="T:System.InvalidOperationException">集合都处于 ItemsSource 模式。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Clear">
      <summary>清除集合并释放对集合中已存在的所有项的引用。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 处于 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。 (当 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 设置属性，则 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 只读的且具有固定大小，集合将成为。)</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Contains(System.Object)">
      <summary>返回一个值，该值指示指定的项是否在此视图中。</summary>
      <param name="containItem">要检查的对象。</param>
      <returns>true 若要指示该项目属于该集合，并将传递活动的筛选器;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>从特定的数组索引开始，将集合的元素复制到数组中。</summary>
      <param name="array">若要将复制到目标数组。</param>
      <param name="index">目标数组中从零开始的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">目标 <paramref name="array" /> 是多维的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 参数小于 0。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.DeferRefresh">
      <summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
      <returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)">
      <summary>在此视图中返回指定索引处的从零开始的项。</summary>
      <param name="index">该项位于从零开始索引。</param>
      <returns>在此视图中指定的从零开始索引处的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出范围。</exception>
      <exception cref="T:System.InvalidOperationException">集合未初始化或上的绑定 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 提供 null 值。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)">
      <summary>返回此集合中指定的项所在的位置的索引。</summary>
      <param name="item">要在集合中查找的对象。</param>
      <returns>该集合或如果在集合中不存在此项为-1 中的项的索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)">
      <summary> 将元素插入到集合中的指定索引处。</summary>
      <param name="insertIndex">从零开始的索引，项将插入到此处。</param>
      <param name="insertItem">要插入的项。</param>
      <exception cref="T:System.InvalidOperationException">要将已插入的项具有不同的逻辑父级。</exception>
      <exception cref="T:System.InvalidOperationException">集合都处于 ItemsSource 模式。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出了范围。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)">
      <summary>指定的项设置集合中作为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <param name="item">要设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 的项。</param>
      <returns>true 若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst">
      <summary>将视图中的第一项设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>true 若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast">
      <summary>将视图中的最后一项设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>true 若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext">
      <summary>将视图中位于 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 之后的项设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>true 若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <param name="position">要将设置为的项的从零开始索引 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</param>
      <returns>true 若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious">
      <summary>将视图中位于 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 之前的项设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>true  若要指示生成 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 是一项在视图中; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示指定的项是否属于此视图。</summary>
      <param name="item">要测试的对象。</param>
      <returns>true 若要指示指定的项属于此视图，或者没有任何筛选器设置对此集合视图;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Remove(System.Object)">
      <summary>从集合或视图中移除指定的项的引用。</summary>
      <param name="removeItem">要移除的对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 是只读的因为它在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式或 DeferRefresh 是否有效。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)">
      <summary>移除集合或视图的指定索引处的项。</summary>
      <param name="removeIndex">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 是只读的因为它在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式或 DeferRefresh 是否有效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出了范围。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#AddNew">
      <summary>将新项添加到集合。</summary>
      <returns>添加到集合中的新项。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelEdit">
      <summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelNew">
      <summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitEdit">
      <summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitNew">
      <summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
      <summary>开始指定项的编辑事务。</summary>
      <param name="item">要编辑的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
      <summary>从集合中删除指定位置的项。</summary>
      <param name="index">要移除的项的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)">
      <summary>将指定的对象添加到集合。</summary>
      <param name="newItem">要添加到集合中的对象。</param>
      <returns>对象，该对象添加到集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>从集中式的事件管理器接收事件。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>返回对应于 <see cref="T:System.Windows.Controls.ItemCollection" /> 中给定索引处的项的元素。</summary>
      <param name="index">所需项的索引。</param>
      <returns>返回对应于 <see cref="T:System.Windows.Controls.ItemCollection" /> 中给定索引处的项的元素；如果未实现该项，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>返回 <see cref="T:System.Windows.UIElement" /> 对应于给定的项目。</summary>
      <param name="item">
        <see cref="T:System.Object" /> 要查找项 <see cref="T:System.Windows.UIElement" /> 有关。</param>
      <returns>一个 <see cref="T:System.Windows.UIElement" /> 对应于给定的项。 返回 null 如果该项不属于项集合，或者如果 <see cref="T:System.Windows.UIElement" /> 不为其生成。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GenerateBatches">
      <summary>返回一个对象，用于管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 属性。</summary>
      <returns>对象，用于管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>返回对应于指定的项的索引生成 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="container">
        <see cref="T:System.Windows.DependencyObject" /> 对应于要返回的索引项。</param>
      <returns>
        <see cref="T:System.Int32" /> 指向对应于指定的项的索引生成 <see cref="T:System.Windows.UIElement" /> 或者为-1 <paramref name="container" /> 找不到。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject,System.Boolean)">
      <summary>返回对应于指定的项的索引生成 <see cref="T:System.Windows.UIElement" />, ，还可以选择以递归方式搜索层次结构项。</summary>
      <param name="container">
        <see cref="T:System.Windows.DependencyObject" /> 对应于要返回的索引项。</param>
      <param name="returnLocalIndex">true 若要搜索的当前级别的层次结构项目; false 以递归方式搜索层次结构项。</param>
      <returns>
        <see cref="T:System.Int32" /> 指向对应于指定的项的索引生成 <see cref="T:System.Windows.UIElement" /> 或者为-1 <paramref name="container" /> 找不到。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>返回与指定，相对应的项目生成 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="container">
        <see cref="T:System.Windows.DependencyObject" /> ，对应于要返回的项。</param>
      <returns>一个 <see cref="T:System.Windows.DependencyObject" /> ，它是对应于指定的项生成 <see cref="T:System.Windows.UIElement" />。 如果 <see cref="T:System.Windows.UIElement" /> 未生成， <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 返回。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext">
      <summary>返回用来显示下一个项的容器元素。</summary>
      <returns>是用来显示下一项的容器元素 dependencyobject 即可。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>返回用来显示下一项的容器元素并且是否有新生成的容器元素 （实现）。</summary>
      <param name="isNewlyRealized">如果返回的 DependencyObject 新生成 （实现）; 也是如此否则为 false。</param>
      <returns>是用来显示下一项的容器元素 dependencyobject 即可。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GeneratorPositionFromIndex(System.Int32)">
      <summary>返回映射到指定索引处的项的 GeneratorPosition 对象。</summary>
      <param name="itemIndex">所需的项的索引。</param>
      <returns>映射到指定索引处的项 GeneratorPosition 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>返回 ItemContainerGenerator 适合于在使用通过指定的面板。</summary>
      <param name="panel">要为其返回相应的 ItemContainerGenerator 面板。</param>
      <returns>适用于由指定面板的 ItemContainerGenerator。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>返回映射到指定 GeneratorPosition 的索引。</summary>
      <param name="position">所需的项的索引。</param>
      <returns>一个 Int32，为将映射到指定 GeneratorPosition 的索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>准备为容器指定的元素对应的项。</summary>
      <param name="container">要准备的容器。 通常情况下，容器是 GenerateNext 之前调用的结果。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="position">移除一个或多个生成 （实现） 项。</param>
      <param name="count">要移除的元素的 Int32 数目起价 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>移除所有生成 （实现） 项。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>准备要生成在指定 GeneratorPosition，并在指定 GeneratorDirection 开头的项的生成器。</summary>
      <param name="position">指定要开始生成项的项的位置 GeneratorPosition。</param>
      <param name="direction">指定的方向 GeneratorDirection 用于生成项目。</param>
      <returns>跟踪生成进程的生存期的一个 IDisposable 的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>准备生成器以生成项目，开始在指定 GeneratorPosition，并在指定 GeneratorDirection，并控制在生成的 （实现） 项时启动。</summary>
      <param name="position">指定要开始生成项的项的位置 GeneratorPosition。</param>
      <param name="direction">指定的方向 GeneratorDirection 用于生成项目。</param>
      <param name="allowStartAtRealizedItem">一个布尔值，该值指定是否在生成的 （实现） 项时启动。</param>
      <returns>跟踪生成进程的生存期的一个 IDisposable 的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="position">若要重复使用的第一个元素的索引。<paramref name="position" /> 必须引用以前生成的 （实现） 项。</param>
      <param name="count">要重复使用的元素数起价 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理该事件。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor(System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> 类，具有指定的数据类型。</summary>
      <param name="dataType">为其设计此模板类型。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.SelectTemplate(System.Object,System.Windows.Controls.ItemsControl)">
      <summary>当在派生类中重写返回 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 基于自定义逻辑。</summary>
      <param name="item">要为其选择的模板对象。</param>
      <param name="parentItemsControl">项容器。</param>
      <returns>模板。 默认实现返回 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemsControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)">
      <summary>将指定的对象作为 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的子级添加。</summary>
      <param name="value">要作为子级添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddText(System.String)">
      <summary>将指定文本字符串添加到 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象。</summary>
      <param name="text">要添加的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.BeginInit">
      <summary>指示 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>在派生类中重写时，撤消 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 方法的效果。</summary>
      <param name="element">容器元素。</param>
      <param name="item">项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
      <summary>返回属于拥有给定容器元素的指定 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器。</summary>
      <param name="itemsControl">要为其返回容器的 <see cref="T:System.Windows.Controls.ItemsControl" />。</param>
      <param name="element">要为其返回容器的元素。</param>
      <returns>如果 <paramref name="itemsControl" /> 不为 null，则返回属于拥有给定元素的指定 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器。 如果 <paramref name="itemsControl" /> 为 null，则返回属于任何 <see cref="T:System.Windows.Controls.ItemsControl" /> 的最近容器。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)">
      <summary>返回属于拥有给定元素的当前 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器。</summary>
      <param name="element">要为其返回容器的元素。</param>
      <returns>属于拥有给定元素的当前 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器；如果不存在这种容器，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.EndInit">
      <summary>表示对象 <see cref="T:System.Windows.Controls.ItemsControl" /> 的初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)">
      <summary>获取指定对象的 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />。</summary>
      <param name="element">要从其获取 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 的对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>创建或标识用于显示给定项的元素。</summary>
      <returns>用于显示给定项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>返回指定元素为其承载项的 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
      <param name="element">宿主元素。</param>
      <returns>指定元素为其承载项的 <see cref="T:System.Windows.Controls.ItemsControl" />，或为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)">
      <summary>确定指定项是否是（或者是否可以作为）其自己的容器。</summary>
      <param name="item">要检查的项。</param>
      <returns>如果该项是（或者可以作为）其自己的容器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或者是否可以作为）其自己的容器。</summary>
      <param name="item">要检查的项。</param>
      <returns>如果该项是（或者可以作为）其自己的容器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>返回拥有指定容器元素的 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
      <param name="container">要为其返回 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器元素。</param>
      <returns>拥有指定容器元素的 <see cref="T:System.Windows.Controls.ItemsControl" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 属性更改时调用。</summary>
      <param name="oldAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 的旧值。</param>
      <param name="newAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性更改时调用。</summary>
      <param name="oldDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性的旧值。</param>
      <param name="newDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性更改时调用。</summary>
      <param name="oldGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性的旧值。</param>
      <param name="newGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 属性更改时调用。</summary>
      <param name="oldItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 的旧值。</param>
      <param name="newItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性更改时调用。</summary>
      <param name="oldItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性的旧值。</param>
      <param name="newItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性更改时调用。</summary>
      <param name="oldItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性的旧值。</param>
      <param name="newItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改时调用。</summary>
      <param name="e">有关更改的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性更改时调用。</summary>
      <param name="oldItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性的旧值。</param>
      <param name="newItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性更改时调用。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性的旧值。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性更改时调用。</summary>
      <param name="oldItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性的旧值。</param>
      <param name="newItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性更改时调用。</summary>
      <param name="oldItemTemplate">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性的旧值。</param>
      <param name="newItemTemplate">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性更改时调用。</summary>
      <param name="oldItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性的旧值。</param>
      <param name="newItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>接收到 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件时调用。</summary>
      <param name="e">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>接收到 <see cref="E:System.Windows.UIElement.TextInput" /> 事件时调用。</summary>
      <param name="e">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>返回一个值，该值表示是否将属性 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 或 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 的样式应用到指定的项的容器元素。</summary>
      <param name="container">容器元素。</param>
      <param name="item">感兴趣的项。</param>
      <returns>对于基本实现，始终为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle">
      <summary>返回一个值，该值指示序列化进程是否应序列化 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 属性的有效值。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems">
      <summary>返回一个值，该值指示序列化进程是否应序列化 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性的有效值。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>清除所有的属性关联。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>删除指定项和属性之间的关联。</summary>
      <param name="item">关联的项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有属性列表中删除指定属性。</summary>
      <param name="dp">要删除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与指定项关联的指定属性的值。</summary>
      <param name="item">具有与之关联的指定属性的项。</param>
      <param name="dp">将返回其值的属性。</param>
      <returns>与指定项关联的指定属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储指定的属性和值，并将它们与指定的项相关联。</summary>
      <param name="item">要将值和属性与其相关联的项。</param>
      <param name="dp">与指定的项相关联的属性。</param>
      <param name="value">相关联的属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要作为子级添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="text">要添加的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ToString">
      <summary>提供 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的字符串表示形式。</summary>
      <returns>对象的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor(System.Windows.FrameworkElementFactory)">
      <summary>初始化的实例 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 用指定的模板的类。</summary>
      <param name="root">
        <see cref="T:System.Windows.FrameworkElementFactory" /> 代表模板的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>检查模板化父级为非 null <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象。</summary>
      <param name="templatedParent">此模板应用到的元素。 这必须是 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="templatedParent" /> 不是 <see cref="T:System.Windows.Controls.ItemsPresenter" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary> 调用以排列和调整大小的内容 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象。</summary>
      <param name="arrangeSize">计算用来安排内容大小。</param>
      <returns>内容大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>重写的基类实现 <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> 来测量的大小 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象并返回正确的大小的布局引擎。</summary>
      <param name="constraint">约束大小是"上限限制"。 返回值不应超过此大小。</param>
      <returns>所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnApplyTemplate">
      <summary>当内部进程或应用程序调用时，调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, ，用于构建当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnTemplateChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>控件模板更改时调用。</summary>
      <param name="oldTemplate">旧模板的值。</param>
      <param name="newTemplate">新模板的值。</param>
    </member>
    <member name="M:System.Windows.Controls.Label.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Label" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定的项的元素。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项 （或是否可以作为） 自己 ItemContainer。</summary>
      <param name="item">指定的项。</param>
      <returns>true 如果该项是其自己 ItemContainer; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.ListBox" /> 报告鼠标移动。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>列表框中选择响应更改通过引发 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>导致要滚动到视图的对象。</summary>
      <param name="item">若要滚动的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>选择中的所有项 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 属性设置为 <see cref="F:System.Windows.Controls.SelectionMode.Single" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)">
      <summary>设置选定项的集合。</summary>
      <param name="selectedItems">要选择的项的集合。</param>
      <returns>true 如果所有项都具有已选中;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.UnselectAll">
      <summary>清除中的所有选择 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListBoxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>当鼠标进入时调用 <see cref="T:System.Windows.Controls.ListBoxItem" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>当鼠标离开时，调用 <see cref="T:System.Windows.Controls.ListBoxItem" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>当用户通过按下鼠标按钮时调用 <see cref="T:System.Windows.Controls.ListBoxItem" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>当用户通过按下鼠标按钮时调用 <see cref="T:System.Windows.Controls.ListBoxItem" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.ListBoxItem" /> 中选定 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.ListBoxItem" /> 中处于未选中状态 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>列表框中项的可视父级发生更改时调用。</summary>
      <param name="oldParent">上一个 <see cref="P:System.Windows.FrameworkElement.Parent" /> 属性 <see cref="T:System.Windows.Controls.ListBoxItem" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>删除所有模板、 样式和绑定的对象，将显示为 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 容器以清除。</param>
      <param name="item">该对象的 <see cref="T:System.Windows.Controls.ListViewItem" /> 包含。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.GetContainerForItemOverride">
      <summary>创建并返回一个新 <see cref="T:System.Windows.Controls.ListViewItem" /> 容器。</summary>
      <returns>一个新 <see cref="T:System.Windows.Controls.ListViewItem" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定某个对象是否为 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
      <param name="item">要评估的对象。</param>
      <returns>true 如果 <paramref name="item" /> 是 <see cref="T:System.Windows.Controls.ListViewItem" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnCreateAutomationPeer">
      <summary>定义 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.ListView" /> 控件。</summary>
      <returns>返回 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 对象 <see cref="T:System.Windows.Controls.ListView" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>响应 <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>设置样式、 模板和绑定 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
      <param name="element">一个对象，它 <see cref="T:System.Windows.Controls.ListViewItem" /> 或可以转换成一个。</param>
      <param name="item">要用来创建对象 <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListViewItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListViewItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>实例化 <see cref="T:System.Windows.Controls.MediaElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)">
      <summary>排列并调整其大小 <see cref="T:System.Windows.Controls.MediaElement" /> 控件。</summary>
      <param name="finalSize">用于排列控件的大小。</param>
      <returns>该控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Close">
      <summary>关闭媒体。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)">
      <summary>更新 <see cref="P:System.Windows.UIElement.DesiredSize" /> 的 <see cref="T:System.Windows.Controls.MediaElement" />。 此方法由父 <see cref="T:System.Windows.UIElement" />。 这是布局的第一个阶段。</summary>
      <param name="availableSize">该元素不应超过上限。</param>
      <returns>所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.MediaElement" />。</summary>
      <returns>该 <see cref="T:System.Windows.Controls.MediaElement" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)">
      <summary>绘制的内容的 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的呈现器处理过程 <see cref="T:System.Windows.Controls.MediaElement" /> 控件。</summary>
      <param name="drawingContext">要绘制的 <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>在当前位置暂停媒体。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>从当前位置播放媒体。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>停止并重置媒体使其从头播放。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Menu.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Menu" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 当按下或释放任何鼠标按钮时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
      <summary> 时调用此方法 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性设置为 true。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.TextInput" /> 路由的菜单文本输入接收从任何设备时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备好指定的元素以显示指定的项。</summary>
      <param name="element">用于显示指定的项的元素。</param>
      <param name="item">要显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.MenuItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定的项的元素。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary> 确定指定的项 （或是否可以作为） 自己 ItemContainer。</summary>
      <param name="item">指定的项。</param>
      <returns>true 如果该项是其自己 ItemContainer; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>响应时 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 调用此控件。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnApplyTemplate">
      <summary>当生成模板的树时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 属性变为 true。 此方法将引发 <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnClick">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.MenuItem" /> 单击，并引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.MenuItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>宣布推出，键盘焦点位于此元素上。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性设置为 true 并引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当焦点不再表面或内部时，调用 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>只要鼠标进入调用 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>每当鼠标离开时调用 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>当按下鼠标左键时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>释放鼠标左键时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>当鼠标移到的菜单项时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>当按下鼠标按钮时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>释放鼠标按钮时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法的子菜单 <see cref="T:System.Windows.Controls.MenuItem" /> 已关闭。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法的子菜单 <see cref="T:System.Windows.Controls.MenuItem" /> 打开。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 属性变为 false。 此方法将引发 <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>时调用此方法的父级的视觉 <see cref="T:System.Windows.Controls.MenuItem" /> 更改。</summary>
      <param name="oldParent">旧值一样的父级的视觉效果或如果视觉效果没有父级为 null。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>用于确定是否将样式应用于项容器。</summary>
      <param name="container">该样式将应用到的容器。</param>
      <param name="item">容器所属的项。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.MenuItem" /> 不是 <see cref="T:System.Windows.Controls.Separator" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>当将值从源移到目标时调用。</summary>
      <param name="values">由源绑定生成的值。</param>
      <param name="targetType">目标的类型。 源将被转换为的类型。</param>
      <param name="parameter">转换器参数。</param>
      <param name="culture">区域性信息。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>不支持。</summary>
      <param name="value">未使用此参数。</param>
      <param name="targetTypes">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" />
      </returns>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.#ctor">
      <summary>创建 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>执行验证检查的值。</summary>
      <param name="value">值 （来自绑定目标） 来检查。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Page" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 （子元素） <see cref="T:System.Windows.Controls.Page" />。</summary>
      <param name="arrangeBounds">要使用它来排列的子元素的大小。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，它表示页上的排列的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <param name="constraint">窗口可提供与其子可用区域。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，它是窗口中的实际大小。 该方法可能返回较大的值，在其中用例父可能需要添加滚动条。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>时调用的模板 <see cref="T:System.Windows.Controls.Page" /> 更改。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>时调用此方法的父级 <see cref="T:System.Windows.Controls.Page" /> 更改。</summary>
      <param name="oldParent">上一个父级。 设置为 null 如果 <see cref="T:System.Windows.DependencyObject" /> 没有上一个父级。</param>
      <exception cref="T:System.InvalidOperationException">新的父项既不是 <see cref="T:System.Windows.Window" /> 也不是 <see cref="T:System.Windows.Controls.Frame" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeTitle">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.Page.Title" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.Page.WindowHeight" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.Page.WindowTitle" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth">
      <summary>允许派生的类进行确定的序列化行为 <see cref="P:System.Windows.Controls.Page.WindowWidth" /> 属性。</summary>
      <returns>true 如果应序列化内容;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="obj">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="str">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.PageRange" /> 类，其中包含单个指定的页。</summary>
      <param name="page">打印或处理页。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.PageRange" /> 用指定的第一个和最后一页的类。</summary>
      <param name="pageFrom">范围的第一页。</param>
      <param name="pageTo">范围的最后一页。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Object)">
      <summary>测试是否未知类型的对象是否等于此 <see cref="T:System.Windows.Controls.PageRange" />。</summary>
      <param name="obj">已测试的对象。</param>
      <returns>true 如果该对象属于类型 <see cref="T:System.Windows.Controls.PageRange" /> 和是否等同于此 <see cref="T:System.Windows.Controls.PageRange" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)">
      <summary>测试是否 <see cref="T:System.Windows.Controls.PageRange" /> 是否等同于此 <see cref="T:System.Windows.Controls.PageRange" />。</summary>
      <param name="pageRange">
        <see cref="T:System.Windows.Controls.PageRange" /> 测试。</param>
      <returns>如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.Controls.PageRange" />的哈希代码值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PageRange" />的哈希代码值。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>定义"= ="运算符测试两个指定 <see cref="T:System.Windows.Controls.PageRange" /> 对象是否相等。</summary>
      <param name="pr1">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <returns>如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>定义"！ ="运算符以测试两个指定 <see cref="T:System.Windows.Controls.PageRange" /> 对象 不 相等。</summary>
      <param name="pr1">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象 不 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.ToString">
      <summary>获取字符串表示形式的范围。</summary>
      <returns>一个字符串，表示页格式的范围"<see cref="P:System.Windows.Controls.PageRange.PageFrom" />-<see cref="P:System.Windows.Controls.PageRange.PageTo" />"。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Panel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>创建一个新的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="logicalParent">要创建的集合的逻辑父元素。</param>
      <returns>具有指定的逻辑父级的元素的有序的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 子级的 <see cref="T:System.Windows.Controls.Panel" /> 指定的索引位置处。</summary>
      <param name="index">索引位置 <see cref="T:System.Windows.Media.Visual" /> 子。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Visual" /> 父级的子项的 <see cref="T:System.Windows.Controls.Panel" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 给定元素的属性。</summary>
      <param name="element">若要检索的元素 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 值。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 的元素的位置。</returns>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>指示 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性值已更改。</summary>
      <param name="oldIsItemsHost">旧的属性值。</param>
      <param name="newIsItemsHost">新的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>在 <see cref="T:System.Windows.Controls.Panel" /> 元素的呈现处理过程中，绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的内容。</summary>
      <param name="dc">要绘制的 <see cref="T:System.Windows.Media.DrawingContext" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>时调用 <see cref="T:System.Windows.Media.VisualCollection" /> 可视对象的修改。</summary>
      <param name="visualAdded">
        <see cref="T:System.Windows.Media.Visual" /> 已添加到集合。</param>
      <param name="visualRemoved">
        <see cref="T:System.Windows.Media.Visual" /> ，已从集合中移除。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>设置给定元素的 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 附加属性的值。</summary>
      <param name="element">要在其上应用属性值的元素。</param>
      <param name="value">此元素在 z 平面上出现的顺序。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Panel.ShouldSerializeChildren">
      <summary>确定是否应对面板的 <see cref="P:System.Windows.Controls.Panel.Children" /> 集合进行序列化。</summary>
      <returns>如果应对 <see cref="P:System.Windows.Controls.Panel.Children" /> 进行序列化，则为 true；否则为 false。 仅当 <see cref="P:System.Windows.Controls.Panel.Children" /> 集合不为空且不为 null 时对其进行序列化。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text"> 要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PasswordBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Clear">
      <summary>清除的值 <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.OnApplyTemplate">
      <summary>当内部进程或应用程序调用时，调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, ，用于构建当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Paste">
      <summary>替换中的当前选定 <see cref="T:System.Windows.Controls.PasswordBox" /> 剪贴板的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>选定的整个内容 <see cref="T:System.Windows.Controls.PasswordBox" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>重写的默认内容排列行为 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <param name="arrangeSize">可用 <see cref="T:System.Windows.Size" /> 用于进行布局的内容 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</param>
      <returns>计算的大小 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
      <summary>获取位于指定索引处的子元素。</summary>
      <param name="index">子元素的指定的索引。</param>
      <returns>
        <see cref="T:System.Windows.Media.Visual" /> 位于指定索引处的子元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。- 或 -<paramref name="index" /> 大于或等于 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
      <summary>重写的对象的默认测量行为 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 限制的 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。</param>
      <returns>所需 <see cref="T:System.Windows.Size" /> 为 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 的大小，根据控制其 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> 和 <see cref="P:System.Windows.Controls.Decorator.Child" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现的内容时， <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Media.DrawingContext" /> 的 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>在调用此控件的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时响应。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由的事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 属性更改。</summary>
      <param name="e">数据 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由的事件，在此控件有焦点用户按下某个键时发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由的事件，在此控件具有焦点时，用户释放某个键时发生。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary> 当在元素丢失键盘焦点时调用。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 时发生此控件不会再接收鼠标事件消息的路由的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 路由的鼠标进入此控件时发生的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeave" /> 当鼠标离开某个元素时出现的路由的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 路由的鼠标指针位于此控件下按下鼠标左键时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 路由当鼠标指针位于此控件释放鼠标左键时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseMove" /> 路由的鼠标指针移到此元素上时发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary> 控件的呈现的大小更改时调用。</summary>
      <param name="sizeInfo">指定的大小更改。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>在应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构的新实例。</summary>
      <param name="point">
        <see cref="T:System.Windows.Point" /> 相对于 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 其中的左上角 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 放置。</param>
      <param name="primaryAxis">
        <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> 沿其 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件移动，当屏幕边缘遮盖。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
      <summary>将此结构与另一个进行比较 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构，以确定它们是否相等。</summary>
      <param name="o">
        <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构进行比较。</param>
      <returns>true 如果结构内具有相同的值;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
      <summary>获取此结构的哈希代码。</summary>
      <returns>此结构哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构以确定它们是否相等。</summary>
      <param name="placement1">要比较的第一个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <param name="placement2">要比较的第二个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <returns>true 如果结构内具有相同的值;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构以确定它们是否不相等。</summary>
      <param name="placement1">要比较的第一个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <param name="placement2">要比较的第二个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <returns>true 如果结构不具有相同的值;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>调用以排列 <see cref="T:System.Windows.Controls.Control" /> 对象的内容并调整其大小。</summary>
      <param name="finalSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>清除指定的单元格的容器引用。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.DataGridCell" /> 以清除。</param>
      <param name="item">数据项。 未使用此值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride">
      <summary>返回一个新 <see cref="T:System.Windows.Controls.DataGridCell" /> 实例以包含单元格的值。</summary>
      <returns>新 <see cref="T:System.Windows.Controls.DataGridCell" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或者是否可以作为）其自己的容器。</summary>
      <param name="item">要检查的项。</param>
      <returns>如果该项是（或者可以作为）其自己的容器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>调用以重新测量控件。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。</param>
      <returns>由约束指定的该控件的大小（包括最大值）。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnApplyTemplate">
      <summary>每当应用程序代码或内部进程调用均会调用它 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>更新显示单元格时 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合已更改。</summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
      <param name="e">中的事件数据 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnItemChanged(System.Object,System.Object)">
      <summary>更新显示单元格时 <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性值已更改。</summary>
      <param name="oldItem">以前的值 <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>布局系统如果水平网格线都是可见的情况下单元格下方绘制一条水平线由调用。</summary>
      <param name="drawingContext">单元格绘制指令。 此上下文提供给布局系统。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备单元格以显示指定的项。</summary>
      <param name="element">准备单元格。</param>
      <param name="item">要显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>当应用新模板时生成的列标题的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件并启动排序。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>返回一个新 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> 此列标题。</summary>
      <returns>此列标题新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>提供路由事件 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 的类处理，该事件在此控件不再接收鼠标事件消息时发生。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为鼠标指针位于此控件上并按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为鼠标指针位于此控件上并释放鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供当鼠标指针位于此元素上并且移动鼠标指针发生的<see cref="E:System.Windows.UIElement.MouseMove" /> 路由事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>调用以排列 <see cref="T:System.Windows.Controls.Control" /> 对象的内容并调整其大小。</summary>
      <param name="finalSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>当在派生类中重写时，撤消 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 方法的效果。</summary>
      <param name="element">容器元素。</param>
      <param name="item">项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride">
      <summary>返回一个新 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 实例以包含列标题值。</summary>
      <returns>新 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>返回剪切蒙板的形状。 如果布局系统尝试排列大于可用的显示空间的元素，将应用该掩码。</summary>
      <param name="layoutSlotSize">列标题呈现的大小。</param>
      <returns>剪切形状。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetVisualChild(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Media.Visual" /> 中指定索引处的子。</summary>
      <param name="index">索引 <see cref="T:System.Windows.Media.Visual" /> 返回的孩子。</param>
      <returns>子项。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或者是否可以作为）其自己的容器。</summary>
      <param name="item">要检查的项。</param>
      <returns>如果该项是（或者可以作为）其自己的容器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
      <summary>调用以重新测量控件。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。</param>
      <returns>由约束指定的该控件的大小（包括最大值）。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnApplyTemplate">
      <summary>每当应用程序代码或内部进程调用均会调用它 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
      <summary>返回一个新 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> 此演示者。</summary>
      <returns>这位演示者新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">用来显示指定的项的元素。</param>
      <param name="item">指定的项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>定位单个子元素并确定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的内容。</summary>
      <param name="finalSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
      <returns>元素所需的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>根据大小属性、边距和请求的子内容大小确定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的大小。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。</param>
      <returns>排列子内容所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
      <summary>返回一个新 <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> 此演示者。</summary>
      <returns>这位演示者新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>布局系统如果水平网格线都是可见的行的详细信息部分下方绘制一条横线的调用。</summary>
      <param name="drawingContext">介绍行详细信息的图形说明。 此上下文提供给布局系统。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>当此元素父级在可视化树中发生更改时进行了调用。 重写 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />。</summary>
      <param name="oldParent">旧的父元素。 可能是 null，指示元素之前没有可视父级。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>测量的子级 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 准备过程中排列它们 <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。 指示不应超过子元素的上限。</param>
      <returns>大小的 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 确定其所需的布局，基于子分配的对象大小其计算过程。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>当应用新模板时生成的行标题的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件并启动行选择，或拖动操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>返回一个新 <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> 此行标题。</summary>
      <returns>此行标题新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 的子元素，以便准备在 <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中排列它们。</summary>
      <param name="constraint">不能超过的上限 <see cref="T:System.Windows.Size" />。</param>
      <returns>
        <see cref="T:System.Windows.Size" />，表示元素的所需大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 使用滚动条滚动出视野之外的行的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>指示 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性值已更改。</summary>
      <param name="oldIsItemsHost">旧的属性值。</param>
      <param name="newIsItemsHost">新的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>在视区大小更改时调用。</summary>
      <param name="oldViewportSize">以前的视区大小。</param>
      <param name="newViewportSize">新的视区大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>在应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
      <summary>排列内容以适合指定的视图大小。</summary>
      <param name="finalSize">页面视图为排列自身及其子级应使用最大大小。</param>
      <returns>使用页面视图来排列本身及其子元素的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <param name="serviceType">要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />, ，或 null 如果没有服务对象类型的 <paramref name="serviceType" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Media.Visual" /> 中指定索引处的子。</summary>
      <param name="index">若要返回的可视子级的索引。</param>
      <returns>指定索引处的可视子级。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者大于或等于 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
      <summary>返回可以提供以显示当前的可用视区大小 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" />。</summary>
      <param name="availableSize">最大的可用大小。</param>
      <returns>实际所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />。</summary>
      <returns>新的 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>在文档页面视图的 DPI 设置更改时调用。</summary>
      <param name="oldDpiScaleInfo">父级可以提供给子级可用大小。 这是软限制。</param>
      <param name="newDpiScaleInfo">DocumentPageView 的所需的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IDisposable#Dispose">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> 方法相反。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IServiceProvider#GetService(System.Type)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)" /> 方法相反。</summary>
      <param name="serviceType"> 一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
      <summary>初始化基类值由派生类调用时。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
      <summary>取消任何当前打印作业。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
      <summary>返回一个值，该值指示是否或查看器，则可以跳转至指定的页号。</summary>
      <param name="pageNumber">若要检查为有效的跳转目标页面数。</param>
      <returns>一个布尔值，该值指示是否或查看器，则可以跳转至指定的页号。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
      <summary>导致查看器跳转到当前文档的第一页 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性)。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
      <summary>返回的值 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性的指定依赖项对象。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 值的依赖对象。</param>
      <returns>从元素所指定的依赖对象中读取的附加属性 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
      <summary>返回此查看器的当前母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />。</summary>
      <returns>此查看器的当前母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />；如果找不到母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
      <summary>创建并返回与当前显示文档（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的新的只读集合。</summary>
      <param name="changed">如果首次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 或者自从上次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 后集合未发生更改，则返回 true；如果自从上次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 后集合发生了更改，则返回 false。</param>
      <returns>与当前显示文档关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
      <summary>导致查看器跳转至指定的页号。</summary>
      <param name="pageNumber">若要跳转到的页的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
      <summary>导致工作 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 要重新生成的集合。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
      <summary>导致查看器跳转到最后一个当前文档中的页面 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性)。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
      <summary>导致查看器跳转到当前文档中的下一页 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性)。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
      <summary>生成的可视树查看器。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>每当调用 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 事件到达派生自此类在其路由中某个元素。  实现此方法可为此事件添加类处理。</summary>
      <param name="element">从其元素 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 产生的事件。</param>
      <param name="rect">坐标空间中的一个矩形区域 <paramref name="element" />, ，应使其可见。</param>
      <param name="pageNumber">包含的页的页码 <paramref name="element" />。</param>
      <exception cref="T:System.ArgumentNullException">当 element 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此查看器的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此查看器的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
      <summary>每当调用 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 修改属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>DPI 比例更改时调用。 将流文档的 DPI 设置为新的小数位数。</summary>
      <param name="oldDpiScaleInfo">以前的 DPI 比例设置。</param>
      <param name="newDpiScaleInfo">新的 DPI 比例设置。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> 路由命令。</summary>
      <param name="pageNumber">若要跳转到的页的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
      <summary>每当调用 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 修改属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
      <summary>只要的工作集的调用 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 此查看器的对象 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 属性) 被修改。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
      <summary>导致查看器跳转到当前文档的前一页 (由表示 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性)。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
      <summary>调用标准 打印 可以用于打印的内容查看器和配置打印首选项的对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象上的 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 element 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#IServiceProvider#GetService(System.Type)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="serviceType"> 一个对象，它指定要获取的服务对象的类型。</param>
      <returns> 类型的服务对象 <paramref name="serviceType" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text"> 要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> 类的新实例。</summary>
      <param name="horizontalChange">水平位置的更改 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件，从而将从拖放操作。</param>
      <param name="verticalChange">垂直位置的更改 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件，从而将从拖放操作。</param>
      <param name="canceled">一个布尔值，该值指示拖放操作已取消通过调用 <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> 方法。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将转换的方法用于处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件到 <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> 类的新实例。</summary>
      <param name="horizontalChange">中的水平更改 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置自上次 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件。</param>
      <param name="verticalChange">中的垂直更改 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置自上次 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将转换的方法用于处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件到 <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> 类的新实例。</summary>
      <param name="horizontalOffset">鼠标的水平偏移量单击的屏幕坐标相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
      <param name="verticalOffset">鼠标的垂直偏移量单击的屏幕坐标相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将转换的方法用于处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件到 <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 具有指定的索引和偏移量。</summary>
      <param name="index">
        <see cref="T:System.Int32" /> 是相对于生成的 （已实现） 项的索引。 -1 是一个特殊值，引用了虚构的项开头或项列表的末尾。</param>
      <param name="offset">
        <see cref="T:System.Int32" /> 偏移量相对于附近的索引值项未生成的 （未实现） 项。 偏移量为 0 表示索引元素本身，偏移量为 1 表示下一步未生成 （未实现） 项，而-1 的偏移量指上一项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>将指定的实例和的当前实例进行比较 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的值是否相等。</summary>
      <param name="o">
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 实例进行比较。</param>
      <returns>true 如果 <paramref name="o" /> 与此实例 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 具有相同的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 对象的值是否相等。</summary>
      <param name="gp1">要比较的第一个实例。</param>
      <param name="gp2">要比较的第二个实例。</param>
      <returns>如果两个对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 值是否不相等的对象。</summary>
      <param name="gp1">要比较的第一个实例。</param>
      <param name="gp2">要比较的第二个实例。</param>
      <returns>如果两个值不相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>返回的此实例的字符串表示 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</summary>
      <returns>此实例的字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /></returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
      <summary>获取可视子行项中指定索引处。</summary>
      <param name="index">子级的索引。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Visual" /> 对象，其中包含指定索引处的子级。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="managerType"> 一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。</param>
      <param name="sender"> 产生事件的对象。</param>
      <param name="args"> 事件数据。</param>
      <returns>true 如果侦听器已处理该事件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> 对象。</summary>
      <returns>一个字符串，其中包含的对象类型和列数。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <summary>清除所有的属性关联。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>删除指定项和属性之间的关联。</summary>
      <param name="item">关联的项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有的属性包中删除指定的属性。</summary>
      <param name="dp">要删除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与指定项关联的指定属性的值。</summary>
      <param name="item">具有与之关联的指定属性的项。</param>
      <param name="dp">将返回其值的属性。</param>
      <returns>与指定项关联的指定属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储指定的属性和值，并将它们与指定的项相关联。</summary>
      <param name="item">要将值和属性与其相关联的项。</param>
      <param name="dp">与指定的项相关联的属性。</param>
      <param name="value">相关联的属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <summary>返回用来显示下一个项的容器元素。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyObject" /> ，它是用来显示下一项的容器元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>返回用来显示下一项的容器元素并且是否有新生成的容器元素 （实现）。</summary>
      <param name="isNewlyRealized">是 true 如果返回 <see cref="T:System.Windows.DependencyObject" /> 新生成 （实现）; 否则为 false。</param>
      <returns>一个 <see cref="T:System.Windows.DependencyObject" /> ，它是用来显示下一项的容器元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 映射到指定索引处的项的对象。</summary>
      <param name="itemIndex">所需的项的索引。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 映射到指定索引处的项的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>返回 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 适合由指定面板的使用。</summary>
      <param name="panel">要为其返回一个适当的面板 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 适合由指定面板的使用。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>返回映射到指定的索引 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</summary>
      <param name="position">所需的项的索引。<see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />  为所需的索引。</param>
      <returns>
        <see cref="T:System.Int32" /> ，表示将映射到指定的索引 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>准备为容器指定的元素对应的项。</summary>
      <param name="container">要准备的容器。 通常情况下， <paramref name="container" /> 是之前调用的结果 <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>移除一个或多个生成 （实现） 项。</summary>
      <param name="position">
        <see cref="T:System.Int32" /> 要移除的元素的索引。<paramref name="position" /> 必须引用以前生成的 （实现） 项，这意味着其偏移量必须为零。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 数要移除的元素处开始 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>移除所有生成 （实现） 项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>准备生成器以生成项目，在指定地址开始 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, ，并使用指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, ，指定要开始生成项的项的位置。</param>
      <param name="direction">一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> 用于指定的方向其中生成项目。</param>
      <returns>
        <see cref="T:System.IDisposable" /> 跟踪生成进程的生存期的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>准备生成器以生成项目，在指定地址开始 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, ，并使用指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />, ，并控制是否在生成的 （实现） 项时启动。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />, ，指定要开始生成项的项的位置。</param>
      <param name="direction">指定要开始生成项的项的位置。</param>
      <param name="allowStartAtRealizedItem">一个 <see cref="T:System.Boolean" /> ，指定是否在生成的 （实现） 项时启动。</param>
      <returns>
        <see cref="T:System.IDisposable" /> 跟踪生成进程的生存期的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>解除关联从其数据项目项容器并保存容器以便它们可以重用更高版本供其他数据项。</summary>
      <param name="position">要重用的第一个元素的从零开始的索引。<paramref name="position" /> 必须引用以前生成的 （实现） 项。</param>
      <param name="count">要重复使用的元素数起价 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>在内容中向下滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>在内容中向左滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>在内容中向右滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>在内容中向上滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>强制滚动内容，直至可以见到 <see cref="T:System.Windows.Media.Visual" /> 对象的坐标空间。</summary>
      <param name="visual">可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">标识要使其可见的坐标空间的边界矩形。</param>
      <returns>可见的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>用户单击鼠标的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>用户单击鼠标的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>用户单击了鼠标的滚轮按钮之后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>用户单击鼠标的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>在内容中向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>在内容中向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>向右滚动一页的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>在内容中向上滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>设置水平偏移量。</summary>
      <param name="offset">内容从包含的视图水平偏移的程度。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>设置垂直偏移量。</summary>
      <param name="offset">内容从所含视图垂直偏移的程度。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>返回 <see cref="T:System.Windows.Media.Geometry" /> ，表示一个元素的可见区域。</summary>
      <param name="element">
        <see cref="T:System.Windows.FrameworkElement" /> 所需其布局剪辑。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Geometry" /> ，它表示的可见区域 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>返回 <see cref="T:System.Windows.UIElement" /> ，布局引擎将在发生未经处理的异常的已对其进行处理。</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> 对象，用于定义该操作的作用域。 没有每个布局引擎实例的一个调度程序。</param>
      <returns>一个 <see cref="T:System.Windows.UIElement" /> ，布局引擎将在发生未经处理的异常的已对其进行处理。</returns>
      <exception cref="T:System.ArgumentNullException">发生时 <paramref name="dispatcher" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>返回 <see cref="T:System.Windows.Rect" /> 表示保留的子元素的布局分区。</summary>
      <param name="element">
        <see cref="T:System.Windows.FrameworkElement" /> 需要其布局槽。</param>
      <returns>一个 <see cref="T:System.Windows.Rect" /> ，表示该元素的布局槽。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定的项的元素。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>当按下或释放鼠标按钮时调用。</summary>
      <param name="e">鼠标事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项，还是可以作为其自己的项容器。</summary>
      <param name="item">要检查它是否为项目容器的项。</param>
      <returns>true 如果该项是 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.Separator" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>对更改做出响应 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由的事件，在用户按下某个键时发生。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeave" /> 路由的鼠标离开控件时发生的事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems">
      <summary>启动新的所选内容事务。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> 是 true 时调用此方法。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems">
      <summary>提交对所选的项目 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> 是 false 时调用此方法。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll">
      <summary>选择中的所有项 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> 为 false。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll">
      <summary>取消选择中的所有项 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
      <summary>将附加的子元素 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
      <param name="popup">
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 要向其中添加子内容。</param>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> 子内容。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
      <summary>返回的逻辑父级 <see cref="T:System.Windows.Controls.Primitives.Popup" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 没有定义的父级和 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 不是 null, 、 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 返回。 否则，返回值将与相同 <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
      <summary>确定所需的大小 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 内容的逻辑父级的可视化树中。</summary>
      <param name="availableSize">此元素可提供到子窗体中的可用大小。 您可用作无穷大值以指示该元素可以为内容的可用大小。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 结构具有 <see cref="P:System.Windows.Size.Height" /> 和 <see cref="P:System.Windows.Size.Width" /> 属性都等于零 (0)。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
      <summary>响应时的值 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性从更改为 true 到 false。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
      <summary>响应中的条件的值 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性从更改 false 到 true。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 WPF 基础结构，不应在代码中直接使用。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 WPF 基础结构，不应在代码中直接使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性更改。</summary>
      <param name="oldMaximum">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性。</param>
      <param name="newMaximum">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性更改。</summary>
      <param name="oldMinimum">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性。</param>
      <param name="newMinimum">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由的事件。</summary>
      <param name="oldValue">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性</param>
      <param name="newValue">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>提供的字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 对象。</summary>
      <returns>返回的字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnClick">
      <summary>引发自动化事件并调用基方法以引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 失去鼠标捕获。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>当鼠标进入某个元素时报告。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>当鼠标离开某个元素时报告。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ResizeGrip" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>创建 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 时发生的事件时 <see cref="T:System.Windows.Controls.ContextMenu" /> 为 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 关闭。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 时发生的事件时 <see cref="T:System.Windows.Controls.ContextMenu" /> 为 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 随即打开。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>初始化的实例 <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> 使用指定的类 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值和新位置 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控制 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <param name="scrollEventType">一个 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述的一种 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 导致事件的移动。</param>
      <param name="newValue">对应的新位置的值 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换，以调用类型安全 <see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler" /> 委托 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件。</summary>
      <param name="genericHandler">要调用的事件处理程序。</param>
      <param name="genericTarget">路由事件的当前对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.GetSelectiveScrollingOrientation(System.Windows.DependencyObject)">
      <summary>获取指定对象的单元格可滚动的方向。</summary>
      <param name="obj">要检索其滚动方向的对象。</param>
      <returns>单元格可滚动的方向。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SetSelectiveScrollingOrientation(System.Windows.DependencyObject,System.Windows.Controls.SelectiveScrollingOrientation)">
      <summary>设置为指定的对象单元格可滚动的方向。</summary>
      <param name="obj">设置其滚动方向的对象。</param>
      <param name="value">滚动的方向。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 附加事件。</summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">若要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 附加事件。</summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">若要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>返回到在以前的状态项容器 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />。</summary>
      <param name="element">项的容器元素。</param>
      <param name="item">数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
      <summary>获取附加属性 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 的值，该值表示是否选择了某个项。</summary>
      <param name="element">要查询其 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 属性的值的对象。</param>
      <returns>布尔值，如果 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 属性值为 true，则为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>获取一个值，该值指示是否在键盘焦点 <see cref="T:System.Windows.Controls.Primitives.Selector" /></summary>
      <param name="element">从中读取附加属性的元素。</param>
      <returns>属性的值， true 如果键盘焦点位于 <see cref="T:System.Windows.Controls.Primitives.Selector" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。 调用此方法，只要 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 内部。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性已更改。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>更新当前所选内容中的项 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 已更改</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>一个选择器中的项的源更改时调用。</summary>
      <param name="oldValue">源的旧值。</param>
      <param name="newValue">源的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>所选内容更改时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">用于显示指定的项元素。</param>
      <param name="item">指定要显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 附加事件。</summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要移除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 附加事件。</summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要移除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置属性值，该值指示在某个项是否 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 处于选中状态。</summary>
      <param name="element">在其上设置该属性的对象。</param>
      <param name="isSelected">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
      <summary>创建一个新的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或者是否可以作为）其自己的容器。</summary>
      <param name="item">要评估的指定的对象。</param>
      <returns>返回 true 或项目时 （可以被） 其自己的容器; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
      <summary>指定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备要在中的显示项 <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</summary>
      <param name="element">要在中显示的项 <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</param>
      <param name="item">要显示的项的内容。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>确定是否要应用 <see cref="T:System.Windows.Style" /> 中的某个项 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的对象。</summary>
      <param name="container">用于该项目的容器。</param>
      <param name="item">要评估的对象。</param>
      <returns>true 如果 <paramref name="item" /> 不是 <see cref="T:System.Windows.Controls.Separator" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
      <summary>指定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列和大小的内容 <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> 对象。</summary>
      <param name="arrangeSize">选项卡面板用来定位子元素的大小。</param>
      <returns>选项卡面板的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
      <summary>用于重写默认剪裁。</summary>
      <param name="layoutSlotSize">面板的大小。</param>
      <returns>小时的布局大小的一个 <see cref="T:System.Windows.Controls.Primitives.TabPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>需要重新测量控件时调用。</summary>
      <param name="constraint">约束大小为上限的值。 返回值不应超过此大小。</param>
      <returns>所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
      <summary>将一个字符串追加到文本控件的内容。</summary>
      <param name="textData">一个字符串，指定要追加到文本控件的当前内容的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
      <summary>开始更改块。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
      <summary>将复制的文本编辑控件添加到当前选择 <see cref="T:System.Windows.Clipboard" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
      <summary>从文本编辑控件中移除当前所选内容并将其复制到 <see cref="T:System.Windows.Clipboard" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
      <summary>创建一个更改块。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 指的是新的更改块的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
      <summary>结束更改块。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
      <summary>将控件的内容向下滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
      <summary>将左侧的一条控件内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
      <summary>滚动一行右侧控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
      <summary>按照下面这行向上滚动控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
      <summary>锁定的撤消堆栈的应用程序的最新的撤消单元。 这样可以防止已锁定的单元与随后添加的撤消单元合并。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
      <summary>在应用控件模板时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>只要某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.DragDrop.DragEnter" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.DragDrop.DragLeave" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.DragDrop.DragOver" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.DragDrop.DragEnter" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.UIElement.LostFocus" /> （使用提供的参数） 的事件。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Mouse.MouseUp" /> 事件到达派生自此类在其路由中某个元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">事件的参数。 这些参数将包含有关哪个鼠标按钮按下了的详细信息和已处理的状态。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>时，将调用 <see cref="E:System.Windows.UIElement.MouseWheel" /> 事件路由到此类 （或从此类继承的类）。</summary>
      <param name="e">鼠标滚轮参数与此事件相关联。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.KeyDown" /> 时发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>  每当某个未处理调用 <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>脱字符或当前所选内容更改位置时调用。</summary>
      <param name="e">与之关联的参数 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>控件模板更改时调用。</summary>
      <param name="oldTemplate">一个 <see cref="T:System.Windows.Controls.ControlTemplate" /> 对象，它指定当前处于活动状态的控件模板。</param>
      <param name="newTemplate">一个 <see cref="T:System.Windows.Controls.ControlTemplate" /> 对象，它指定要使用的新控件模板。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>此编辑控件中的内容更改时调用。</summary>
      <param name="e">与之关联的参数 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 附加路由的事件到达派生自此类在其路由中的元素。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
      <summary>将控件的内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
      <summary>滚动一页的左侧控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
      <summary>将右侧控件内容滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
      <summary>将控件内容向上滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
      <summary>通过在文本编辑控件中当前所选内容粘贴剪贴板的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
      <summary>撤消最新的撤消命令。 换而言之，重做撤消堆栈上最新的撤消单元。</summary>
      <returns>true 如果重做操作成功，则否则为 false。 此方法返回 false 是否可用 （撤消堆栈为空） 没有撤消命令。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
      <summary>滚动到内容的末尾的编辑控件的视图。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
      <summary>滚动到视区的起始位置的编辑控件的视图。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
      <summary>将编辑控件的内容滚动到指定的水平偏移。</summary>
      <param name="offset">一个双精度值，它指定要滚动到的水平偏移。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
      <summary>将编辑控件的内容滚动到指定的垂直偏移。</summary>
      <param name="offset">一个双精度值，指定要滚动到的垂直偏移。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
      <summary>选择文本编辑控件中的所有内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
      <summary>撤消最新的撤消命令。 换而言之，撤消撤消堆栈上最新的撤消单元。</summary>
      <returns>true 如果撤消操作成功，则否则为 false。 此方法返回 false 撤消堆栈是否为空。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>取消的拖动操作 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 属性值的更改。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
      <summary>绘制的刻度 <see cref="T:System.Windows.Controls.Slider" /> 控件。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Media.DrawingContext" /> 用来绘制刻度。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>当用鼠标或键盘单击控件时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>由调用 <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> 方法来实现切换行为。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 事件。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 对象。</summary>
      <returns>字符串表示形式 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列和大小的内容 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 对象。</summary>
      <param name="arrangeBounds">工具栏溢出面板用来定位子元素的大小。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>创建一个新的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="logicalParent">新集合的逻辑父级。</param>
      <returns>新的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
      <summary>重新测量 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />。</summary>
      <param name="constraint">约束大小为上限的值。 返回值不应超过此大小。</param>
      <returns>所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列并调整其大小 <see cref="T:System.Windows.Controls.ToolBar" /> 项内 <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />。</summary>
      <param name="arrangeSize">大小的 <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 用来放置其子级。</param>
      <returns>面板的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>重新测量工具栏面板。</summary>
      <param name="constraint">测量约束; <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 不能返回一个大小大于该约束。</param>
      <returns>面板所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Track" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
      <summary>创建的布局 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <param name="arrangeSize">为提供的区域 <see cref="T:System.Windows.Controls.Primitives.Track" />。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> 用于 <see cref="T:System.Windows.Controls.Primitives.Track" /> 内容。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
      <summary>获取节点的子 <see cref="T:System.Windows.Controls.Primitives.Track" /> 中指定索引处。</summary>
      <param name="index">子级的索引。</param>
      <returns>返回的对象 <see cref="T:System.Windows.Controls.Primitives.Track" /> 可见子元素的列表中的指定索引处。 索引必须为零 (0) 到的值之间的数字 <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> 负一 (1) 的属性。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的索引大于的值 <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> 负一 (1) 的属性。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
      <summary>测量所需的布局大小 <see cref="T:System.Windows.Controls.Primitives.Track" /> 及其组件。</summary>
      <param name="availableSize">跟踪可用空间的大小。</param>
      <returns>布局 <see cref="T:System.Windows.Size" /> 所需的 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
      <summary>计算中的更改 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 时 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动。</summary>
      <param name="horizontal">水平位移 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />。</param>
      <param name="vertical">垂直位移 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" />。</param>
      <returns>在更改 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 对应的位移 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
      <summary>计算的距离 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 沿指定点到 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <param name="pt">指定的点。</param>
      <returns>之间的距离 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 和指定 <paramref name="pt" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
      <summary>定义布局的 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 通过分布均匀地在所有子元素之间的间距。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 网格使用的区域。</param>
      <returns>实际 <see cref="T:System.Windows.Size" /> 呈现可见子元素显示的网格。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
      <summary>计算所需的大小 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 通过测量所有子元素。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> 的可用区域的网格。</param>
      <returns>所需 <see cref="T:System.Windows.Size" /> 基于网格的子内容和 <paramref name="constraint" /> 参数。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PrintDialog" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
      <summary>打印 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 对象传递给 <see cref="T:System.Printing.PrintQueue" /> 当前选定。</summary>
      <param name="documentPaginator">
        <see cref="T:System.Windows.Documents.DocumentPaginator" /> 对象打印。</param>
      <param name="description">要打印的作业的说明。 此文本出现在 用户界面 (UI) 的打印机。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentPaginator" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)">
      <summary>打印 visual （非文本） 对象，该类派生自 <see cref="T:System.Windows.Media.Visual" /> 类，为 <see cref="T:System.Printing.PrintQueue" /> 当前选定。</summary>
      <param name="visual">
        <see cref="T:System.Windows.Media.Visual" /> 打印。</param>
      <param name="description">要打印的作业的说明。 此文本出现在 用户界面 (UI) 的打印机。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.ShowDialog">
      <summary>调用 <see cref="T:System.Windows.Controls.PrintDialog" /> 为模式对话框。</summary>
      <returns>如果用户单击“打印”，则为 true；如果用户单击“取消”，则为 false；或如果用户关闭对话框而不单击“打印”或“取消”，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类，该类提供特定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。 此构造函数受保护。</summary>
      <param name="info">要序列化或反序列化对象所需的数据。</param>
      <param name="context">包括源和目标，序列化流的上下文。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类，该类提供的特定错误条件 <see cref="T:System.String" /> 。</summary>
      <param name="message">一个 <see cref="T:System.String" /> 描述错误条件。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String,System.Exception)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类，该类提供一个特定错误条件，包括其根本原因。</summary>
      <param name="message">
        <see cref="T:System.String" /> 描述错误条件。</param>
      <param name="innerException">基础错误条件导致 <see cref="T:System.Windows.Controls.PrintDialogException" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ProgressBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>一个模板应用到时调用 <see cref="T:System.Windows.Controls.ProgressBar" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMaximumChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。</summary>
      <param name="oldMaximum">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性。</param>
      <param name="newMaximum">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMinimumChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。</summary>
      <param name="oldMinimum">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性。</param>
      <param name="newMinimum">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。</summary>
      <param name="oldValue">旧值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性。</param>
      <param name="newValue">新值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.RadioButton" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 单选按钮将调用。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 属性变为 true。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>由调用 <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> 方法来实现 <see cref="T:System.Windows.Controls.RadioButton" /> 控件的切换行为。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>初始化新的默认实例 <see cref="T:System.Windows.Controls.RichTextBox" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.RichTextBox" /> 类中，添加指定 <see cref="T:System.Windows.Documents.FlowDocument" /> 作为初始内容。</summary>
      <param name="document">一个 <see cref="T:System.Windows.Documents.FlowDocument" /> 要添加为新的初始内容 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指向的内容中的下一步拼写错误 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示要从中搜索下一个拼写错误的位置。</param>
      <param name="direction">一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 要在其中搜索的下一步的拼写错误，在指定地址开始 <paramref name="posision" />。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指向的内容中的下一步拼写错误 <see cref="T:System.Windows.Controls.RichTextBox" />, ，或 null 如果没有下一步的拼写错误，则。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 指向与指定位置最接近的插入点。</summary>
      <param name="point">一个 <see cref="T:System.Windows.Point" /> 对象，它指定要检索的位置 <see cref="T:System.Windows.Documents.TextPointer" /> 有关。</param>
      <param name="snapToText">如果 true, ，此方法始终返回 <see cref="T:System.Windows.Documents.TextPointer" /> 指定为最接近的插入位置 <see cref="T:System.Windows.Point" /> 指定，而不考虑或是否提供 <see cref="T:System.Windows.Point" /> 内部的字符边界框。如果 false, ，此方法返回 null 如果指定 <see cref="T:System.Windows.Point" /> 不在任何字符边界框内。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定提供的点的最近插入位置或 null 如果 <paramref name="snapToText" /> 是 false 和提供 <see cref="T:System.Windows.Point" /> 不在两者之间的任何字符的边界框。 请注意， <see cref="T:System.Windows.Documents.TextPointer" /> 返回通常是两个字符之间的位置。 使用 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性所返回的 <see cref="T:System.Windows.Documents.TextPointer" /> 来确定哪两个字符 <see cref="T:System.Windows.Documents.TextPointer" /> 对应。</returns>
      <exception cref="T:System.InvalidOperationException">时引发的布局信息 <see cref="T:System.Windows.Controls.RichTextBox" /> 不是最新。</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)">
      <summary>返回与<see cref="T:System.Windows.Controls.RichTextBox" /> 的内容中指定的位置处的任何拼写错误相关联的 <see cref="T:System.Windows.Controls.SpellingError" /> 对象。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" />，用于指定将解析为一个字符以检查拼写错误的位置和逻辑方向。 使用此 <see cref="T:System.Windows.Documents.TextPointer" /> 的 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性以指定要检查的字符方向。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.SpellingError" /> 对象，包含在 <paramref name="position" /> 指定的字符处所发现的拼写错误的详细信息，或如果在指定字符处没有拼写错误，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextRange" /> 对象，其中包括任何拼错的单词中的内容中的指定位置 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" />，用于指定将解析为一个字符以检查拼写错误的位置和逻辑方向。 使用此 <see cref="T:System.Windows.Documents.TextPointer" /> 的 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性以指定要检查的字符方向。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextRange" /> 对象，其中包括任何拼错的单词，其中包含由指定的字符 <paramref name="position" />, ，或 null 如果没有拼写错误，则在指定的字符。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)">
      <summary>调用以重新测量 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <param name="constraint">一个 <see cref="T:System.Windows.Size" /> 结构，它指定的大小约束 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 结构，指示的新大小 <see cref="T:System.Windows.Controls.RichTextBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.RichTextBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>时，调用此 Rich Text Box 呈现更改 DPI。</summary>
      <param name="oldDpiScaleInfo">以前的 DPI 比例设置。</param>
      <param name="newDpiScaleInfo">新的 DPI 比例设置。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Controls.RichTextBox.Document" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Controls.RichTextBox" /> 对象。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.RichTextBox.Document" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value"> 要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text"> 要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.RowDefinition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)">
      <summary>添加 <see cref="T:System.Windows.Controls.RowDefinition" /> 元素 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="value">标识 <see cref="T:System.Windows.Controls.RowDefinition" /> 要添加到集合。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Clear">
      <summary>清除的内容 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)">
      <summary>确定是否给定 <see cref="T:System.Windows.Controls.RowDefinition" /> 中存在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="value">标识 <see cref="T:System.Windows.Controls.RowDefinition" /> 正在测试。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.RowDefinition" /> 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)">
      <summary>将复制的数组 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象中的给定的索引位置到 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="array">一个 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象数组。</param>
      <param name="index">标识中的索引位置 <paramref name="array" /> 到 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象将会复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - 源 <see cref="T:System.Collections.ICollection" /> 中的元素数大于从索引到目标数组末尾处的可用空间。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)">
      <summary>返回的索引位置的给定 <see cref="T:System.Windows.Controls.RowDefinition" /> 内 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.RowDefinition" /> 所需的索引位置。</param>
      <returns>索引 <paramref name="value" /> 如果在集合中找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)">
      <summary>将插入 <see cref="T:System.Windows.Controls.RowDefinition" /> 内指定的索引位置处 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="index">集合中插入项的位置。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Controls.RowDefinition" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)">
      <summary>删除 <see cref="T:System.Windows.Controls.RowDefinition" /> 从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="value">要从该集合中移除的 <see cref="T:System.Windows.Controls.RowDefinition" />。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.RowDefinition" /> 在集合中找到并移除; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Windows.Controls.RowDefinition" /> 从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 指定的索引位置处。</summary>
      <param name="index">在集合中的位置 <see cref="T:System.Windows.Controls.RowDefinition" /> 删除。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="index">在集合中的位置第一个 <see cref="T:System.Windows.Controls.RowDefinition" /> 删除。</param>
      <param name="count">总次数 <see cref="T:System.Windows.Controls.RowDefinition" /> 要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>将该集合的元素复制到 <see cref="T:System.Array" />（从特定的 <see cref="T:System.Array" /> 索引开始）。</summary>
      <param name="array">一个从零开始 <see cref="T:System.Array" /> 接收复制的项从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
      <param name="index">在指定的第一个位置 <see cref="T:System.Array" /> 以接收复制的内容。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>向集合中添加一项。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定集合中是否包含特定值。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定集合中特定项的索引。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>指定索引处插入到集合的项。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从集合中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换，然后再调用类型安全 <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> 委托 </summary>
      <param name="genericHandler">事件处理程序调用，在这种情况下 <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> 委托。</param>
      <param name="genericTarget">依据目标 <paramref name="genericHandler" /> 调用。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>滚动 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向下一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>滚动 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向左预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>滚动 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向右旋转预定量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>滚动 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向上一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>强制滚动内容，直至可以见到 <see cref="T:System.Windows.Media.Visual" /> 对象的坐标空间。</summary>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">标识要使其可见的坐标空间的边框。</param>
      <returns>表示可见区域的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>用户单击鼠标的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>用户单击鼠标的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>用户单击了鼠标的滚轮按钮之后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>用户单击鼠标的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>当内部进程或应用程序调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, ，用于构建当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>在内容中向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>在内容中向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>向右滚动一页的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>在内容中向上滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>设置水平偏移量。</summary>
      <param name="offset">内容从包含的视图水平偏移的程度。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>设置垂直偏移量。</summary>
      <param name="offset">内容从所含视图垂直偏移的程度。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ScrollViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.ScrollViewer" />。</summary>
      <param name="arrangeSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
      <summary>获取给定元素中的 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>如果此元素可以滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>获取给定元素中的 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
      <summary>返回的值 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 指定对象的属性。</summary>
      <param name="element">要从其中获取对象 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" />。</param>
      <returns>true 如果静态内容，则当用户拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
      <summary>返回的值 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 指定对象的属性。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>速率 <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢 device-independent units (1/96th inch per unit) / 平方毫秒为单位。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
      <summary>返回的值 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 指定对象的属性。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>一个值，指定如何 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
      <summary>返回的值 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 指定对象的属性。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>滚动偏移量转换操作偏移的比例。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>获取给定元素中的 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖属性值。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>执行命中的测试，确定指定的点是否在此边界内 <see cref="T:System.Windows.Controls.ScrollViewer" />。</summary>
      <param name="hitTestParameters">可视化对象内的命中测试参数。</param>
      <returns>命中测试的结果。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>由附加到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口在任何滚动属性大小的值更改时调用。 滚动属性包括偏移、范围或视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineDown">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向下滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineLeft">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向左滚动预先确定的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineRight">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向右滚动预先确定的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineUp">
      <summary>向上滚动一行 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
      <summary>测量的内容 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>计算所需的限制 <see cref="T:System.Windows.Size" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>当内部进程或应用程序调用时，调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />, ，用于构建当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对于此控件的一部分实现 Windows Presentation Foundation (WPF) 自动化基础结构。</summary>
      <returns>相应 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对于此控件的实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应特定的键盘输入，并调用相关联的滚动行为。</summary>
      <param name="e">此事件的的必需的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> 事件发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.ManipulationDelta" /> 事件发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> 事件发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.ManipulationStarting" /> 事件发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应鼠标按钮的单击操作。</summary>
      <param name="e">描述此事件的必需的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>响应鼠标滚轮单击。</summary>
      <param name="e">描述此事件的必需的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>当检测到滚动状态发生变化（例如，滚动位置、范围或视区大小发生变化）时调用。</summary>
      <param name="e">
        <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" />，包含有关滚动状态变化的相关信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
      <summary>当检测到由触笔启动的点击动作时调用。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />，包含有关该笔势的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageDown">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageLeft">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageRight">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageUp">
      <summary>向上滚动一页 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
      <summary>垂直滚动到末尾 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
      <summary>垂直滚动到末尾 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
      <summary>垂直滚动到开始 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中的内容滚动到指定的水平偏移位置。</summary>
      <param name="offset">内容将滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
      <summary>水平滚动到开始 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
      <summary>水平滚动到末尾 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
      <summary>垂直滚动到开始 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中的内容滚动到指定的垂直偏移位置。</summary>
      <param name="offset">内容将滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖属性的值设置为给定元素。</summary>
      <param name="element">要在其上设置属性值的元素。</param>
      <param name="canContentScroll">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖属性的值设置为给定元素。</summary>
      <param name="element">要在其上设置属性值的元素。</param>
      <param name="horizontalScrollBarVisibility">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>集 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 指定对象的属性。</summary>
      <param name="element">要对其设置的对象 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 属性。</param>
      <param name="value">true 当用户拖动保持静止的内容 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
      <summary>集 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 指定对象的属性。</summary>
      <param name="element">要对其设置的对象 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 属性。</param>
      <param name="value">速率 <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢 device-independent units (1/96th inch per unit) / 平方毫秒为单位。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
      <summary>集 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 指定对象的属性。</summary>
      <param name="element">要对其设置的对象 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 属性。</param>
      <param name="panningMode">一个值，指定如何 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
      <summary>集 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 指定对象的属性。</summary>
      <param name="element">要对其设置的对象 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 属性。</param>
      <param name="value">滚动偏移量转换操作偏移的比例。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖属性的值设置为给定元素。</summary>
      <param name="element">要在其上设置属性值的元素。</param>
      <param name="verticalScrollBarVisibility">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo},System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo})">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> 类，具有指定的单元格添加和移除所选内容。</summary>
      <param name="addedCells">添加到选定的单元格。</param>
      <param name="removedCells">从选择中删除的单元格。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> 或 <paramref name="removedCells" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo},System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo})">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> 类，具有指定的单元格添加和移除所选内容。</summary>
      <param name="addedCells">添加到选定的单元格。</param>
      <param name="removedCells">从选择中删除的单元格。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> 或 <paramref name="removedCells" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Calendar" /> 与此集合关联。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>向集合中添加指定范围，其中包括的第一个和最后一个日期中的所有日期。</summary>
      <param name="start">要添加到集合的第一个日期。</param>
      <param name="end">要添加到集合的最后一个日期。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
      <summary>初始化 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 类的新实例。</summary>
      <param name="id">该事件 identifier (ID)。</param>
      <param name="removedItems">在此事件期间未选定的项。</param>
      <param name="addedItems">在此事件期间选择的项目。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换，以调用类型安全 <see cref="T:System.Windows.Controls.SelectionChangedEventHandler" /> 委托 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件。</summary>
      <param name="genericHandler">要调用的处理程序。</param>
      <param name="genericTarget">路由事件的当前对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Separator.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Separator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Slider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.Slider" /> 的内容并确定其 <see cref="T:System.Windows.Size" />。</summary>
      <param name="finalSize">用于排列控件的计算的 <see cref="T:System.Windows.Size" />。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> 的计算的 <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>生成 <see cref="T:System.Windows.Controls.Slider" /> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>为 <see cref="T:System.Windows.Controls.Slider" /> 创建一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>用于 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseLarge">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseSmall">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseLarge">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseSmall">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximizeValue">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性值的更改。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的旧值。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimizeValue">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性值的更改。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的旧值。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供用于 <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> 路由事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>提供用于当用户停止拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>提供用于当用户拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>提供用于当用户开始拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.Slider" /> 的当前位置。</summary>
      <param name="oldValue">
        <see cref="T:System.Windows.Controls.Slider" /> 的旧 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
      <param name="newValue">
        <see cref="T:System.Windows.Controls.Slider" /> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.SoundPlayerAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.Dispose">
      <summary>释放 <see cref="T:System.Windows.Controls.SoundPlayerAction" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>获取用于指定的文本编辑控件中的自定义拼写检查器的词典文件位置的集合。</summary>
      <param name="textBoxBase">检索其词典文件集合的文本编辑控件。</param>
      <returns>词典文件位置的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase " />是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>返回一个值，该值指示是否在指定的文本编辑控件上启用拼写检查器。</summary>
      <param name="textBoxBase">要检查的文本编辑控件。 示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <returns>true 如果在文本编辑控件; 上启用拼写检查器否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase " />是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
      <summary>启用或禁用指定的文本编辑控件（如 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />）上的拼写检查。</summary>
      <param name="textBoxBase">要在其上启用或禁用拼写检查的文本编辑控件。 示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <param name="value">一个布尔值，用于指定是否在文本编辑控件上启用拼写检查。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)">
      <summary>确定由拼写检查器的拼写改革规则。</summary>
      <param name="textBoxBase">拼写检查器应用到的文本编辑控件。 示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <param name="value">
        <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 值，该值确定拼写改革规则。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.Correct(System.String)">
      <summary>替换指定的正确拼写错误的文本。</summary>
      <param name="correctedText">用于替换拼写错误的文本的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.IgnoreAll">
      <summary>指示控件忽略此错误和控件生存期剩余部分的任何重复项。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.StackPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.StackPanel" /> 元素。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> ，应使用此元素来排列子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.StackPanel" /> 元素和及其子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineDown">
      <summary>将一个逻辑单元的内容向下滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineLeft">
      <summary>滚动到左侧的一个逻辑单元的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineRight">
      <summary>滚动到右侧的一个逻辑单元的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineUp">
      <summary>将向上一个逻辑单元的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>滚动到指定的坐标，并使该部分 <see cref="T:System.Windows.Media.Visual" /> 可见。</summary>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">
        <see cref="T:System.Windows.Rect" /> 表示协调可视化对象内的空间。</param>
      <returns>一个 <see cref="T:System.Windows.Rect" /> 变为可见的坐标空间中。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.StackPanel" /> 为预期的过程中排列它们 <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示该元素所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelDown">
      <summary>滚动内容向下逻辑以响应鼠标滚轮按钮的单击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelLeft">
      <summary>将逻辑以响应鼠标滚轮按钮的单击左侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelRight">
      <summary>将逻辑以响应鼠标滚轮按钮的单击右侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelUp">
      <summary>滚动内容向上逻辑以响应鼠标滚轮按钮的单击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageDown">
      <summary>将内容从逻辑上向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageLeft">
      <summary>将在逻辑上一页左侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageRight">
      <summary>将内容从逻辑上向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageUp">
      <summary>将内容从逻辑上向上滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate">
      <summary>注册模板的所有子项的事件处理程序。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.StyleSelector" /> 的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <summary>当在派生类中重写返回 <see cref="T:System.Windows.Style" /> 基于自定义逻辑。</summary>
      <param name="item">使用的内容。</param>
      <param name="container">将向其应用样式的元素。</param>
      <returns>返回要应用; 应用程序特定样式否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.TabControl" />。 类。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定的项的元素。</summary>
      <returns>用于显示指定的项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项 （或是否可以作为） 自己 ItemContainer。</summary>
      <param name="item">指定的项。</param>
      <returns>返回 true 如果该项是其自己 ItemContainer; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>时调用此方法 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnInitialized(System.EventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true。</summary>
      <param name="e">为 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用以更新当前所选内容，当项目发生了变化。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.ContentElement.KeyDown" /> 路由的事件，在用户按下某个键时发生。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由的事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TabItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary> 响应时 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 为 <see cref="T:System.Windows.Controls.TabControl" /> 调用。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">内容属性的旧值。</param>
      <param name="newContent">内容属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 属性更改。</summary>
      <param name="oldContentTemplate">内容模板属性的旧值。</param>
      <param name="newContentTemplate">内容模板属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 属性更改。</summary>
      <param name="oldContentTemplateSelector">内容模板选择器的旧值。</param>
      <param name="newContentTemplateSelector">内容模板选择器的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 对于此控件的一部分实现 WPF 自动化基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">将提供数据供 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary> 宣布推出，键盘焦点位于此元素上。</summary>
      <param name="e">键盘输入事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>调用以指示 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 属性已更改为 true。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary> 调用以指示 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 属性已更改为 false。</summary>
      <param name="e">事件数据 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.TextBlock" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.TextBlock" /> 类中，添加指定 <see cref="T:System.Windows.Documents.Inline" /> 元素作为初始显示内容。</summary>
      <param name="inline">派生自抽象的对象 <see cref="T:System.Windows.Documents.Inline" /> 类中，以添加作为初始内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inline" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素，并确定的大小 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <param name="arrangeSize">一个 <see cref="T:System.Windows.Size" /> 宿主的父元素内， <see cref="T:System.Windows.Controls.TextBlock" /> 应该用于排列本身及其子元素。 大小约束可能会影响此请求的大小。</param>
      <returns>实际 <see cref="T:System.Windows.Size" /> 用于排列元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 最近与指定的位置到 <see cref="T:System.Windows.Point" />。</summary>
      <param name="point">一个 <see cref="T:System.Windows.Point" /> 的坐标空间中 <see cref="T:System.Windows.Controls.TextBlock" /> 要为其返回 <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <param name="snapToText">true 若要返回 <see cref="T:System.Windows.Documents.TextPointer" /> 到插入点与最接近 <paramref name="point" />, 、 是否 <paramref name="point" /> 为内的字符范围框; false 返回 null 如果 <paramref name="point" /> 不内的字符边界框。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的点，或 null 如果 <paramref name="snapToText" /> 是 false 和指定的点不在字符边界框中 <see cref="T:System.Windows.Controls.TextBlock" /> 内容区域。</returns>
      <exception cref="T:System.InvalidOperationException">控件的当前有效的布局信息将不可用。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)">
      <summary>返回的边框组成的指定只读集合 <see cref="T:System.Windows.ContentElement" />。</summary>
      <param name="child">一个 <see cref="T:System.Windows.ContentElement" /> 为其生成并返回的边框组成的集合。</param>
      <returns>只读集合的边框指定 <see cref="T:System.Windows.ContentElement" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Media.Visual" /> 中指定索引处的子。</summary>
      <param name="index">从零开始的索引，指定 <see cref="T:System.Windows.Media.Visual" /> 返回的孩子。  此值必须介于 0 和 (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> 减 1)</param>
      <returns>
        <see cref="T:System.Windows.Media.Visual" /> 中指定索引处的子。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是介于 0 和 (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> 减 1)</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>返回 <see cref="T:System.Windows.Media.PointHitTestResult" /> 指定 <see cref="T:System.Windows.Media.PointHitTestParameters" />。</summary>
      <param name="hitTestParameters">一个 <see cref="T:System.Windows.Media.PointHitTestParameters" /> 对象，它指定要进行命中测试的参数。</param>
      <returns>一个 <see cref="T:System.Windows.Media.PointHitTestResult" /> 为指定的命中测试参数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hitTestParameters" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)">
      <summary>返回 <see cref="T:System.Windows.IInputElement" /> 在指定地址 <see cref="T:System.Windows.Point" /> 内 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <param name="point">一个 <see cref="T:System.Windows.Point" />, ，坐标空间中的 <see cref="T:System.Windows.Controls.TextBlock" />, ，要为其返回相应 <see cref="T:System.Windows.IInputElement" />。</param>
      <returns>
        <see cref="T:System.Windows.IInputElement" /> 指定点处找到或 null 如果没有此类 <see cref="T:System.Windows.IInputElement" /> 找不到。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)">
      <summary>调用以重新测量 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <param name="constraint">一个 <see cref="T:System.Windows.Size" /> 结构，它指定的大小的任何约束 <see cref="T:System.Windows.Controls.TextBlock" />。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 结构，指示的新大小 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)">
      <summary>当从派生的子元素时调用 <see cref="T:System.Windows.UIElement" /> 更改其 <see cref="P:System.Windows.UIElement.DesiredSize" />。</summary>
      <param name="child">子 <see cref="T:System.Windows.UIElement" /> 元素其 <see cref="P:System.Windows.UIElement.DesiredSize" /> 已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当一个或多个托管依赖属性的值发生更改时调用。</summary>
      <param name="e">关联事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现的内容 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <param name="ctx">
        <see cref="T:System.Windows.Media.DrawingContext" /> 上呈现控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ctx" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非正值。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Controls.TextBlock" /> 对象。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Controls.TextBlock" /> 对象。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeText">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Controls.TextBlock" /> 对象。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />, ，或 null 如果没有服务对象类型的 <paramref name="serviceType" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)" /> 方法相反。</summary>
      <param name="child"> 一个 <see cref="T:System.Windows.ContentElement" /> 为其生成并返回的边框组成的集合。</param>
      <returns> 只读集合的边框指定 <see cref="T:System.Windows.ContentElement" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)" /> 方法相反。</summary>
      <param name="point">鼠标坐标，相对于内容的宿主。</param>
      <returns>已命中的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构，不能在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)" /> 方法相反。</summary>
      <param name="child"> 子 <see cref="T:System.Windows.UIElement" /> 元素其 <see cref="P:System.Windows.UIElement.DesiredSize" /> 已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TextBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Clear">
      <summary>清除文本框中的所有内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)">
      <summary>返回指定的行中的第一个字符的从零开始的字符索引。</summary>
      <param name="lineIndex">要检索其初始字符索引的行的从零开始的索引。</param>
      <returns>用于指定行中的第一个字符的从零开始索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
      <summary>返回与指定的点最近的字符的从零开始索引。</summary>
      <param name="point">中的点 <see cref="T:System.Windows.Controls.TextBox" /> 要为其返回索引的坐标空间。</param>
      <param name="snapToText">true 要返回其最接近的索引，如果在指定的点，则没有字符 false 返回 – 1，如果没有任何字符指定点处。</param>
      <returns>如果找不到没有有效的索引是最接近指定的点，则返回 – 1 的字符的索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex">
      <summary>返回当前可见的文本框中的第一行的行索引。</summary>
      <returns>用于在文本框中的第一个可见行的从零开始索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex">
      <summary>返回当前可见的文本框中的最后一行的行索引。</summary>
      <returns>用于在文本框中的最后一个可见行的从零开始索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)">
      <summary>返回包含指定的字符索引的行的从零开始的行索引。</summary>
      <param name="charIndex">要检索其关联的行索引从零开始的字符索引。</param>
      <returns>包含指定的字符索引行的从零开始索引。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)">
      <summary>指定行中返回字符的数。</summary>
      <param name="lineIndex">为要返回的字符数的从零开始的行索引。</param>
      <returns>位于指定行的字符数。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)">
      <summary>返回当前显示在指定的行的文本。</summary>
      <param name="lineIndex">要为其检索当前显示的文本的行的从零开始的索引。</param>
      <returns>一个字符串，包含当前在指定行上显示的文本的副本。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>文本框中的内容中返回的下一步的拼写错误的起始字符索引。</summary>
      <param name="charIndex">指示从中搜索下一个拼写错误的位置的从零开始的字符索引。</param>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定要在其中搜索的下一步的拼写错误，在指定地址开始的方向 <paramref name="charIndex" />。</param>
      <returns>在文本框中，则返回 – 1 如果没有下一个拼写错误的内容中的下一步拼写错误的起始位置的字符索引存在。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>返回位于指定索引处的字符的前边缘的矩形。</summary>
      <param name="charIndex">要检索其边框的字符从零开始的字符索引。</param>
      <returns>指定的字符索引处的字符的前边缘矩形或 <see cref="P:System.Windows.Rect.Empty" /> 如果不确定的绑定矩形。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>返回的矩形的前导或尾随边的指定索引处的字符。</summary>
      <param name="charIndex">要检索其边框的字符从零开始的字符索引。</param>
      <param name="trailingEdge">true 若要获取的字符; 的后边缘 false 来获取字符的前导边。</param>
      <returns>边缘中的指定的字符索引处的字符的一个矩形或 <see cref="P:System.Windows.Rect.Empty" /> 如果不确定的绑定矩形。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> 为负数或大于内容的长度。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)">
      <summary>返回与指定字符索引处的任何拼写错误关联的 <see cref="T:System.Windows.Controls.SpellingError" /> 对象。</summary>
      <param name="charIndex">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.SpellingError" /> 对象，包含在 <paramref name="charIndex" /> 指定的字符处所发现的拼写错误的详细信息，或如果在指定字符处没有拼写错误，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)">
      <summary>返回包含指定的字符的任何拼写错误的长度。</summary>
      <param name="charIndex">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</param>
      <returns>如果指定的字符不是拼写错误的一部分指定 charIndex，则为 0 将字符包含任何拼写错误的长度。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)">
      <summary>返回包含指定的字符的任何拼写错误的起始字符索引。</summary>
      <param name="charIndex">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</param>
      <returns>包含由指定的字符的任何拼写错误的起始字符索引 <paramref name="charIndex" />, ，则返回 – 1 如果指定的字符不是拼写错误的一部分。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)">
      <summary>调整大小的文本设置为其内容。</summary>
      <param name="constraint">一个 <see cref="T:System.Windows.Size" /> 结构，用于指定文本框的大小限制。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 结构，指示文本框中的新大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 文本框中的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 文本框中的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当存在于元素上的一个或多个依赖属性的有效值更改时被调用。</summary>
      <param name="e">关联事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
      <summary>滚动到视图中指定的行索引处的行。</summary>
      <param name="lineIndex">要滚动到视图中的行的从零开始的行索引。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>选择文本框中的文本范围。</summary>
      <param name="start">在所选内容的第一个字符从零开始的字符索引。</param>
      <param name="length">所选内容，以字符为单位的长度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> 或 <paramref name="length" /> 为负。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Controls.TextBox.Text" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Controls.TextBox" /> 对象。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>在所有情况下，将引发异常。</summary>
      <param name="value">要添加作为子站点的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在所有其他情况下。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> 类，使用指定的事件 ID，并撤消操作。</summary>
      <param name="id">该事件 identifier (ID)。</param>
      <param name="action">
        <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> 文本更改所导致的。</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> 类，使用指定的事件 ID、 撤消操作和文本更改。</summary>
      <param name="id">该事件 identifier (ID)。</param>
      <param name="action">
        <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> 文本更改所导致的。</param>
      <param name="changes">在此事件期间发生的更改。 有关详细信息，请参阅<see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换，以调用类型安全 <see cref="T:System.Windows.Controls.TextChangedEventHandler" />  委托 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件。</summary>
      <param name="genericHandler">要调用的处理程序。</param>
      <param name="genericTarget">路由事件的当前对象。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
      <summary>返回标识指定项的字符串。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>标识指定项的字符串。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
      <summary>返回属性的名称，该属性标识指定元素的集合中的项。</summary>
      <param name="element">要从中读取属性值的元素。</param>
      <returns>向用户标识该项的属性的名称。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
      <summary> 将附加属性 <see cref="P:System.Windows.Controls.TextSearch.Text" /> 的值写入指定元素。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="text">用于标识该项的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
      <summary> 将 <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 附加属性写入指定元素。</summary>
      <param name="element">要写入属性值的元素。</param>
      <param name="path">标识项的属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
      <summary> 读取的值 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 从指定的元素的属性。</summary>
      <param name="element">从中读取的属性元素。</param>
      <returns>该属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
      <summary>读取的值 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 从指定的元素的属性。</summary>
      <param name="element">从中读取的属性元素。</param>
      <returns>该属性的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
      <summary> 重新测量 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <param name="constraint">测量约束。 一个 <see cref="T:System.Windows.Controls.ToolBar" /> 不能返回一个大小大于该约束。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> 的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer">
      <summary>提供适当 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 对于此控件的一部分实现 WPF 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary> 时调用此方法 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改。</summary>
      <param name="e">参数 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由的某个项按下某个键时发生的事件 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <param name="e">参数 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 路由时发生的事件时 <see cref="T:System.Windows.Controls.ToolBar" /> 失去鼠标捕获。</summary>
      <param name="e">参数 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备好指定的元素以显示指定的项。</summary>
      <param name="element">将显示的项元素。</param>
      <param name="item">要显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
      <summary>写入的值 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 属性设置为指定的元素。</summary>
      <param name="element">要写入的属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolBarTray" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
      <summary> 调用以排列和大小调整其 <see cref="T:System.Windows.Controls.ToolBar" /> 子级。</summary>
      <param name="arrangeSize">大小的 <see cref="T:System.Windows.Controls.ToolBarTray" /> 用来放置其子级。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
      <summary>读取的值 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 从指定的元素的属性。</summary>
      <param name="element">从中读取的属性元素。</param>
      <returns>如果无法在工具栏区内移动工具栏，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
      <summary>获取可见的子级的索引号。</summary>
      <param name="index">可视子索引。</param>
      <returns>可见的子级的索引号。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
      <summary>调用以 remeasure <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <param name="constraint">测量约束; <see cref="T:System.Windows.Controls.ToolBarTray" /> 不能返回一个大小大于该约束。</param>
      <returns>控件的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
      <summary>时调用此方法 <see cref="T:System.Windows.Controls.ToolBarTray" /> 会显示，以获取绘图上下文 (DC) 要用来呈现 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <param name="dc">要用来呈现的绘图上下文 <see cref="T:System.Windows.Controls.ToolBarTray" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
      <summary>写入的值 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 属性设置为指定的元素。</summary>
      <param name="element">要写入的属性的元素。</param>
      <param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value">  要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="text">  要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolTip" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>响应 <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 事件。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnContentChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的旧值。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>创建的实现 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件。</summary>
      <returns>一个新 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.ToolTip" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>响应 <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 事件。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>响应中的可视父级更改 <see cref="T:System.Windows.Controls.ToolTip" />。</summary>
      <param name="oldParent">以前的可视父级。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>添加处理程序 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>获取对象的 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性值。</summary>
      <param name="element">从中读取属性值的对象。</param>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>移除处理程序 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 附加事件。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置对象的 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性的值。</summary>
      <param name="element">要写入该附加属性的对象。</param>
      <param name="value">所需的值。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TreeView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)">
      <summary>展开指定 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件及其所有子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 元素。</summary>
      <param name="container">
        <see cref="T:System.Windows.Controls.TreeViewItem" /> 以展开。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.TreeViewItem" /> 和其所有子元素都已扩展; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>创建 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要用于显示内容。</summary>
      <returns>一个新 <see cref="T:System.Windows.Controls.TreeViewItem" /> 以用作容器的内容。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项是否是其自己的容器，或者可以是其自己的容器。</summary>
      <param name="item">要评估的对象。</param>
      <returns>true 如果 <paramref name="item" /> 是 <see cref="T:System.Windows.Controls.TreeViewItem" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>定义 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.TreeView" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> 为 <see cref="T:System.Windows.Controls.TreeView" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.UIElement.GotFocus" /> 路由的事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> 事件键盘焦点发生变化时 <see cref="T:System.Windows.Controls.TreeView" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 中的更改时将发生的事件 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件 <see cref="T:System.Windows.Controls.TreeView" />。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>引发 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 事件时 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 属性值更改。</summary>
      <param name="e">提供了以前所选的项和当前为选定的项 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <param name="arrangeSize">父级范围内的最后一个方面， <see cref="T:System.Windows.Controls.TreeViewItem" /> 应该用于排列本身及其子元素。</param>
      <returns>使用的实际大小 <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ExpandSubtree">
      <summary>展开 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件及其所有子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>创建一个新 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要用于显示该对象。</summary>
      <returns>一个新 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要用于显示该对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定某个对象是否为 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <param name="item">要评估的对象。</param>
      <returns>true 如果 <paramref name="item" /> 是 <see cref="T:System.Windows.Controls.TreeViewItem" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> 事件时 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从更改 true 到 false。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>定义 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 对象 <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> 事件时 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从更改 false 到 true。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 中的更改时将发生的事件 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供类处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> 路由的事件时 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从更改 false 到 true。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> 路由的事件时 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从更改 true 到 false。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>响应中的可视父级更改 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <param name="oldParent">以前的可视父级。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.UIElementCollection" /> 类的新实例。</summary>
      <param name="visualParent">
        <see cref="T:System.Windows.UIElement" /> 集合的父级。</param>
      <param name="logicalParent">集合中的元素的逻辑父级。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
      <summary>指定将元素添加到 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="element">要添加的 <see cref="T:System.Windows.UIElement" />。</param>
      <returns>添加元素的索引位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Clear">
      <summary>从 <see cref="T:System.Windows.Controls.UIElementCollection" /> 中移除所有元素。</summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
      <summary>清除的元素的逻辑父级，该元素离开时 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="element">
        <see cref="T:System.Windows.UIElement" /> 正在清除其逻辑父级。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
      <summary>确定指定的元素是否在 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="element">要查找的元素。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.UIElement" /> 在集合中找到; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>副本 <see cref="T:System.Windows.UIElement" /> 从 <see cref="T:System.Windows.Controls.UIElementCollection" /> 到一个数组中的指定的索引位置开始。</summary>
      <param name="array">一个集合复制到其中的数组。</param>
      <param name="index">复制开始处的元素的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
      <summary>副本 <see cref="T:System.Windows.UIElement" /> 从 <see cref="T:System.Windows.Controls.UIElementCollection" /> 到一个数组中的指定的索引位置开始。</summary>
      <param name="array">一个 <see cref="T:System.Windows.UIElement" /> 对象数组。</param>
      <param name="index">复制开始处的元素的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
      <summary>返回一个枚举器可循环访问 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 可列出此集合的成员。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
      <summary>返回在指定的元素的索引位置 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="element">其索引位置是必需的元素。</param>
      <returns>元素的索引位置。  如果该元素不在集合中，则为-1。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
      <summary>将元素插入 <see cref="T:System.Windows.Controls.UIElementCollection" /> 指定的索引位置处。</summary>
      <param name="index">你想要将元素插入索引位置。</param>
      <param name="element">要插入的元素 <see cref="T:System.Windows.Controls.UIElementCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
      <summary>从 <see cref="T:System.Windows.Controls.UIElementCollection" /> 中移除指定元素。</summary>
      <param name="element">要从集合中移除的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Windows.UIElement" /> 的指定索引处。</summary>
      <param name="index">索引 <see cref="T:System.Windows.UIElement" /> 想要删除。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>中移除的元素从一系列 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="index">开始移除操作元素的索引位置。</param>
      <param name="count">要移除的元素数。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
      <summary>设置中的元素的逻辑父级 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="element">
        <see cref="T:System.Windows.UIElement" /> 设置的逻辑父代。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value">要添加的对象。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value">要在列表中查找的对象。</param>
      <returns>true 如果在列表中; 已找到该对象否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value">要在列表中查找的对象。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">要插入到列表的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从列表中移除的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.UserControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此 <see cref="T:System.Windows.Controls.UserControl" />。</summary>
      <returns>一个新 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 此 <see cref="T:System.Windows.Controls.UserControl" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>向指定对象添加 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的事件处理程序。</summary>
      <param name="element">要向其中添加 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <param name="handler">要添加的处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
      <summary>删除所有 <see cref="T:System.Windows.Controls.ValidationError" /> 从指定的对象 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</summary>
      <param name="bindingExpression">要打开有效的对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="bindingExpression" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性的值。</summary>
      <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> 对象的 <see cref="T:System.Windows.Controls.ValidationError" />。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性的值。</summary>
      <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <returns>用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性的值。</summary>
      <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性的指定元素。</summary>
      <param name="element">要从其中获取元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性的指定元素。</summary>
      <param name="element">要从其中获取元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
      <summary>使用指定 <see cref="T:System.Windows.Controls.ValidationError" /> 对象将指定 <see cref="T:System.Windows.Data.BindingExpression" /> 对象标记为无效。</summary>
      <param name="bindingExpression">要标记为无效的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</param>
      <param name="validationError">要使用的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="bindingExpression" /> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="validationError" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>从指定对象添加 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的事件处理程序。</summary>
      <param name="element">要从中删除 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <param name="handler">要删除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
      <summary>将 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性的值设置为指定的元素。</summary>
      <param name="element">要对其设置 <paramref name="value" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <param name="value">用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>集 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加到指定元素上指定的值的属性。</summary>
      <param name="element">要对其设置的元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />。</param>
      <param name="value">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 指定元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>集 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加到指定元素上指定的值的属性。</summary>
      <param name="element">要对其设置的元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />。</param>
      <param name="value">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 指定元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 类的新实例。</summary>
      <param name="ruleInError">检测到验证错误的规则。</param>
      <param name="bindingInError">
        <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 出现验证错误的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 类的新实例。</summary>
      <param name="ruleInError">检测到验证错误的规则。</param>
      <param name="bindingInError">
        <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 出现验证错误的对象。</param>
      <param name="errorContent">有关错误的信息。</param>
      <param name="exception">导致验证失败的异常。 此参数是可选的可以将设置为 null。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>指定对象上的特定类型的方式调用指定的处理程序。</summary>
      <param name="genericHandler">调用类型特定的方式的一般处理程序。</param>
      <param name="genericTarget">要在调用处理程序的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationResult" /> 类的新实例。</summary>
      <param name="isValid">该值指示是否对照检查 <see cref="T:System.Windows.Controls.ValidationRule" /> 是否有效。</param>
      <param name="errorContent">无效性有关的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
      <summary>将指定的实例和的当前实例进行比较 <see cref="T:System.Windows.Controls.ValidationResult" /> 的值是否相等。</summary>
      <param name="obj">
        <see cref="T:System.Windows.Controls.ValidationResult" /> 实例进行比较。</param>
      <returns>true 如果 <paramref name="obj" /> 与此实例 <see cref="T:System.Windows.Controls.ValidationResult" />具有相同的值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Controls.ValidationResult" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ValidationResult" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象的值是否相等。</summary>
      <param name="left">要比较的第一个实例。</param>
      <param name="right">要比较的第二个实例。</param>
      <returns>如果两个对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.ValidationResult" /> 值是否不相等的对象。</summary>
      <param name="left">要比较的第一个实例。</param>
      <param name="right">要比较的第二个实例。</param>
      <returns>如果两个值不相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Windows.Controls.ValidationRule" /> 带有指定的验证步骤和一个值，该值指示是否验证规则运行时则会更新目标的类。</summary>
      <param name="validationStep">指定验证规则运行的时间的枚举值之一。</param>
      <param name="validatesOnTargetUpdated">true 若要将运行时验证规则的目标 <see cref="T:System.Windows.Data.Binding" /> 更新; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>在派生类中重写时，对值执行验证检查。</summary>
      <param name="value">要检查的来自绑定目标的值。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)">
      <summary>执行验证检查的值。</summary>
      <param name="value">要检查的来自绑定目标的值。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <param name="owner">绑定使用的表达式的验证规则。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)">
      <summary>执行验证检查的值。</summary>
      <param name="value">要检查的来自绑定目标的值。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
      <param name="owner">使用验证规则的绑定组。</param>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ViewBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>移除所有绑定和为项设置的样式。</summary>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 要从其中移除设置。</param>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>时，将调用 <see cref="T:System.Windows.Controls.ListView" /> 控件创建 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 为其 <see cref="P:System.Windows.Controls.ListView.View" />。</summary>
      <param name="parent">
        <see cref="T:System.Windows.Controls.ListView" /> 控件能够使用以创建 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> 接口，可实现 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 为自定义 <see cref="P:System.Windows.Controls.ListView.View" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>准备要显示，通过设置绑定和样式视图中的项。</summary>
      <param name="item">要准备显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Viewbox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素用来排列其子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> 它表示的排列的大小 <see cref="T:System.Windows.Controls.Viewbox" /> 元素和及其子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 在指定的子 <paramref name="index" /> 位置。</summary>
      <param name="index">所需的索引位置 <see cref="T:System.Windows.Media.Visual" /> 子。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Visual" /> 父级的子项的 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.Viewbox" /> 之前过程中排列它们 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">一个 <see cref="T:System.Windows.Size" /> 限制该 <see cref="T:System.Windows.Controls.Viewbox" /> 不能超过。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示所需的元素大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Viewport3D" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
      <summary>导致 <see cref="T:System.Windows.Controls.Viewport3D" /> 排列其可视内容以适合指定的大小。</summary>
      <param name="finalSize">大小， <see cref="T:System.Windows.Controls.Viewport3D" /> 将假定。</param>
      <returns>排列的最终大小 <see cref="T:System.Windows.Controls.Viewport3D" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 中指定位置处 <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 集合 <see cref="T:System.Windows.Controls.Viewport3D" />。</summary>
      <param name="index">集合中元素的位置。</param>
      <returns>中指定位置处 visual <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Viewport3D" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.Viewport3D" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">   要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="text">   要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
      <summary>创建的新实例 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 统一缓存长度视区的每一侧的类。</summary>
      <param name="cacheBeforeAndAfterViewport">缓存之前和之后视区的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
      <summary>创建的新实例 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类视区的每一侧的指定的缓存长度。</summary>
      <param name="cacheBeforeViewport">在视区之前缓存的大小。</param>
      <param name="cacheAfterViewport">在视区后缓存的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
      <param name="oCompare">将与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 进行比较的对象。</param>
      <returns>true 如果指定的对象是否等于当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 是否等同于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
      <param name="cacheLength">将与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 进行比较的对象。</param>
      <returns>true 如果指定的对象是否等于当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
      <summary>获取当前的哈希代码 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
      <returns>当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定两个指定 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象是否相等。</summary>
      <param name="cl1">要比较的第一个对象。</param>
      <param name="cl2">要比较的第二个对象。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定两个指定 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象是否相等。</summary>
      <param name="cl1">要比较的第一个对象。</param>
      <param name="cl2">要比较的第二个对象。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
      <summary>返回表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的字符串。</summary>
      <returns>表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 可在指定的类型的对象转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />, ，使用指定的上下文。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>true <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 可以转换到指定的类型 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 可转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 为指定的类型。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 可转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 为指定的类型; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="cultureInfo">一个对象，提供在转换过程中使用的区域性信息。</param>
      <param name="source">对象将转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 为 null。--或者--<paramref name="source" /> 不能转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 为指定类型的对象。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="cultureInfo">一个对象，提供在转换过程中使用的区域性信息。</param>
      <param name="value">一个 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 将转换为另一种类型。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 <paramref name="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> 为 null。--或者--<paramref name="value" /> 不是 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>添加指定 <see cref="T:System.Windows.UIElement" /> 到 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 元素。</summary>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> 子窗体添加到集合。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>派生类中实现时，生成的指定的索引位置处的项，并使其可见。</summary>
      <param name="index">生成并将其可见的项的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)">
      <summary>生成的指定的索引位置处的项，并使其可见。</summary>
      <param name="index">生成并将其可见的项的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性。</summary>
      <param name="element">要获取的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</param>
      <returns>缓存之前和之后视区的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 属性。</summary>
      <param name="element">要获取的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</param>
      <returns>使用的单元的类型 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 属性。</summary>
      <param name="element">要获取的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应虚拟化项; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 附加属性。</summary>
      <param name="element">从中读取附加的属性值的对象。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 虚拟化其内容; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 属性。</summary>
      <param name="element">要获取的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</param>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 虚拟化分组后的项目在其集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)">
      <summary>返回指定项的位置相对于 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
      <param name="child">该元素以查找其位置。</param>
      <returns>相对于指定项的位置 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>返回指定项的位置相对于 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
      <param name="child">该元素以查找其位置。</param>
      <returns>在所有情况下均为 0。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 属性。</summary>
      <param name="element">要获取的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</param>
      <returns>一个值，该值指示是否滚动的测量作为集合中的项或像素。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 附加属性的指定对象。</summary>
      <param name="element">从其对象 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 属性为只读。</param>
      <returns>指定对象是否使用容器回收的枚举值之一。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>添加指定 <see cref="T:System.Windows.UIElement" /> 到 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 指定的索引位置处的元素。</summary>
      <param name="index">在此处插入子元素的集合中的索引位置。</param>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> 子窗体添加到集合。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>由基类清除子元素的集合时调用 <see cref="T:System.Windows.Controls.Panel" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与关联的集合 <see cref="T:System.Windows.Controls.ItemsControl" /> 此 <see cref="T:System.Windows.Controls.Panel" /> 更改。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>移除子元素从 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合。</summary>
      <param name="index">在第一个子元素将的集合中开始的索引位置。</param>
      <param name="range">要从集合中移除子元素的总数。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">缓存之前和之后视区的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">使用的单元的类型 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">true 若要指示 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应虚拟化项; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置的值 <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> 附加属性。</summary>
      <param name="element">附加的属性值设置到的对象。</param>
      <param name="value">true 如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 虚拟化; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">true 若要指定 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 虚拟化分组后的项目在其集合; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">一个值，该值指示是否滚动的测量作为集合中的项或像素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>集 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 附加在指定的对象上的属性。</summary>
      <param name="element">要对其设置的元素 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 属性。</param>
      <param name="value">一个枚举值，该值指定是否 <paramref name="element" /> 使用容器回收。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回一个值，该值指示是否在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板的布局。</summary>
      <param name="areItemChangesLocal">true 如果已更改的项目不的直接子级 <see cref="T:System.Windows.Controls.VirtualizingPanel" />; false 间接后代的更改的项是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</param>
      <param name="args">包含有关更改的项的数据。</param>
      <returns>true 如果在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板; 的布局否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回一个值，该值指示是否在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板的布局。</summary>
      <param name="areItemChangesLocal">true 如果已更改的项目不的直接子级 <see cref="T:System.Windows.Controls.VirtualizingPanel" />; false 间接后代的更改的项是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</param>
      <param name="args">包含有关更改的项的数据。</param>
      <returns>true 如果在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板; 的布局否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>添加事件处理程序 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件。</summary>
      <param name="element">
        <see cref="T:System.Windows.DependencyObject" /> 侦听此事件。</param>
      <param name="handler">要添加事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 元素。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> ，应使用此元素来排列子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 元素和及其子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>生成的指定的索引位置处的项，并使其可见。</summary>
      <param name="index">要生成并使之可见的项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 位置不存在的子集合中。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>返回指定项的位置相对于 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</summary>
      <param name="child">该元素以查找其位置。</param>
      <returns>相对于指定项的位置 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>将一个逻辑单元的内容向下滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>将一个逻辑单元的左侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>将一个逻辑单元右侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>将向上通过一个逻辑单元的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>滚动到指定的坐标，并使该部分 <see cref="T:System.Windows.Media.Visual" /> 可见。</summary>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">一个 <see cref="T:System.Windows.Rect" /> 表示内的坐标空间 <see cref="T:System.Windows.Media.Visual" />。</param>
      <returns>可见的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 为预期的过程中排列它们 <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示该元素所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>将内容向下逻辑以响应鼠标滚轮按钮的单击操作向下滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>在逻辑上向左鼠标滚轮按钮的单击操作的响应中的左侧滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>将逻辑以响应鼠标滚轮按钮的右键单击右侧的内容滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>将内容向上逻辑以响应鼠标滚轮按钮呈上升趋势单击滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>由托管的项时调用 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 重新虚拟化。</summary>
      <param name="e">事件的相关数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>由基类清除子元素的集合时调用 <see cref="T:System.Windows.Controls.Panel" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与关联的集合 <see cref="T:System.Windows.Controls.ItemsControl" /> 此 <see cref="T:System.Windows.Controls.Panel" /> 更改。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
      <summary>视区更改的偏移量作为用户滚动浏览内容时调用。</summary>
      <param name="oldViewportOffset">视区的旧偏移量。</param>
      <param name="newViewportOffset">视区的新的偏移量</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>在视区大小更改时调用。</summary>
      <param name="oldViewportSize">以前的视区大小。</param>
      <param name="newViewportSize">新的视区大小。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>滚动一页左侧的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>内容向上滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>删除的事件处理程序 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件。</summary>
      <param name="element">
        <see cref="T:System.Windows.DependencyObject" /> 从其中移除该处理程序。</param>
      <param name="handler">指定要从中删除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回一个值，该值指示是否在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板的布局。</summary>
      <param name="areItemChangesLocal">true 如果已更改的项目不的直接子级 <see cref="T:System.Windows.Controls.VirtualizingPanel" />; false 间接后代的更改的项是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</param>
      <param name="args">包含有关更改的项的数据。</param>
      <returns>true 如果在更改的项 <see cref="T:System.Windows.Controls.ItemsControl" /> 会影响此面板; 的布局否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.WebBrowser" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoBack">
      <summary>向后定位到前一文档（如果存在）。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">没有要向后定位到的文档。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoForward">
      <summary>向前定位到下一步 HTML 文档，如果有的话。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">没有要向前定位到的文档。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>执行当前加载的文档所实现的脚本函数。</summary>
      <param name="scriptName">要执行的脚本函数的名称。</param>
      <returns>活动脚本调用所返回的对象。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">脚本函数不存在。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])">
      <summary>执行在当前加载的文档中定义的脚本函数。</summary>
      <param name="scriptName">要执行的脚本函数的名称。</param>
      <param name="args">要传递到脚本函数的参数。</param>
      <returns>活动脚本调用所返回的对象。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">脚本函数不存在。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String)">
      <summary>异步导航到位于指定 URL 处的文档。</summary>
      <param name="source">要导航到的 URL。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>异步导航到位于指定 URL 处的文档，并指定要向其中加载文档内容的目标框架。 可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</summary>
      <param name="source">要导航到的 URL。</param>
      <param name="targetFrameName">要在其中显示文档内容的框架的名称。</param>
      <param name="postData">要在请求源时发送到服务器的 HTTP POST 数据。</param>
      <param name="additionalHeaders">要在请求源时发送到服务器的 HTTP 标头。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>异步导航到位于指定文档 <see cref="T:System.Uri" />。</summary>
      <param name="source">
        <see cref="T:System.Uri" /> 以导航到。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">导航到的部分信任环境中运行的应用程序是从 <see cref="T:System.Uri" /> 并非位于在源站点。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>异步导航到位于指定文档 <see cref="T:System.Uri" /> 并指定要加载的文档内容的目标框架。 可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</summary>
      <param name="source">
        <see cref="T:System.Uri" /> 以导航到。</param>
      <param name="targetFrameName">要在其中显示文档内容的框架的名称。</param>
      <param name="postData">要在请求源时发送到服务器的 HTTP POST 数据。</param>
      <param name="additionalHeaders">要在请求源时发送到服务器的 HTTP 标头。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">在部分信任环境中运行的应用程序中导航 ︰到 <see cref="T:System.Uri" /> 并非位于在源站点的或 <paramref name="targetFrameName" /> 名称不是 null 或为空。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)">
      <summary>异步导航到 <see cref="T:System.IO.Stream" /> 包含文档的内容。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> 包含文档的内容。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>异步导航到 <see cref="T:System.String" /> 包含文档的内容。</summary>
      <param name="text">
        <see cref="T:System.String" /> 包含文档的内容。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh">
      <summary>重载当前页。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)">
      <summary>重载带有可选缓存验证的当前页。</summary>
      <param name="noCache">指定是否刷新，而不进行缓存验证。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.WrapPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列的内容 <see cref="T:System.Windows.Controls.WrapPanel" /> 元素。</summary>
      <param name="finalSize">
        <see cref="T:System.Windows.Size" /> ，应使用此元素来排列子元素。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示的排列的大小 <see cref="T:System.Windows.Controls.WrapPanel" /> 元素与其子项。</returns>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
      <summary>度量值的子元素 <see cref="T:System.Windows.Controls.WrapPanel" /> 为预期的过程中排列它们 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> 传递。</summary>
      <param name="constraint">上限 <see cref="T:System.Windows.Size" /> 不应超过。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> ，它表示该元素所需的大小。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.CornerRadius" /> 类具有指定的统一半径值的每个角或矩形。</summary>
      <param name="uniformRadius">半径值应用于每个矩形的角。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.CornerRadius" /> 类替换为每个矩形的角的指定的半径值。</summary>
      <param name="topLeft">左上角的半径。</param>
      <param name="topRight">右上角的半径。</param>
      <param name="bottomRight">右下角的半径。</param>
      <param name="bottomLeft">左下角的半径。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>确定是否指定 <see cref="T:System.Object" /> 是 <see cref="T:System.Windows.CornerRadius" /> 以及它是否包含与此相同的角半径值 <see cref="T:System.Windows.CornerRadius" />。</summary>
      <param name="obj">要比较的 <see cref="T:System.Object" />。</param>
      <returns>true 如果 <paramref name="obj" /> 是 <see cref="T:System.Windows.CornerRadius" /> ，并且包含与此相同的角半径值 <see cref="T:System.Windows.CornerRadius" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>比较两个 <see cref="T:System.Windows.CornerRadius" /> 结构是否相等。</summary>
      <param name="cornerRadius">
        <see cref="T:System.Windows.CornerRadius" /> 要与此 <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>true 如果 <paramref name="cornerRadius" /> 包含与此相同的角半径值 <see cref="T:System.Windows.CornerRadius" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.CornerRadius" /> 的哈希代码。</summary>
      <returns>此哈希代码 <see cref="T:System.Windows.CornerRadius" /> 结构。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>比较两个 <see cref="T:System.Windows.CornerRadius" /> 结构是否相等。</summary>
      <param name="cr1">要比较的第一个 <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="cr2">要比较的第二个 <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>true 如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有所有角相等的值 (相同的值 <see cref="P:System.Windows.CornerRadius.TopLeft" />, ，<see cref="P:System.Windows.CornerRadius.TopRight" />, ，<see cref="P:System.Windows.CornerRadius.BottomLeft" />, ，<see cref="P:System.Windows.CornerRadius.BottomRight" />); false 如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有不同的值为一个或多个角。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>比较两个 <see cref="T:System.Windows.CornerRadius" /> 结构是否不相等。</summary>
      <param name="cr1">要比较的第一个 <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="cr2">要比较的第二个 <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>true 如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有不同的值为一个或多个角 (不同的值 <see cref="P:System.Windows.CornerRadius.TopLeft" />, ，<see cref="P:System.Windows.CornerRadius.TopRight" />, ，<see cref="P:System.Windows.CornerRadius.BottomLeft" />, ，<see cref="P:System.Windows.CornerRadius.BottomRight" />); false 如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有相同的角。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>返回 <see cref="T:System.Windows.CornerRadius" /> 的字符串表示形式。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> 的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.CornerRadiusConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示是否可从给定类型到转换对象 <see cref="T:System.Windows.CornerRadius" />。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">源 <see cref="T:System.Type" /> 正被查询转换支持。</param>
      <returns>如果 true 的类型是 <paramref name="sourceType" />，则为 <see cref="T:System.String" /> ；否则，为 false。</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否 <see cref="T:System.Windows.CornerRadius" /> 值可以转换为指定的类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型这 <see cref="T:System.Windows.CornerRadius" /> 的计算结果将转换。</param>
      <returns>如果 true 的类型是 <paramref name="destinationType" />，则为 <see cref="T:System.String" /> ；否则，为 false。</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Windows.CornerRadius" />。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述 <see cref="T:System.Globalization.CultureInfo" /> 正在转换的类型。</param>
      <param name="source">要转换的对象。</param>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> 从转换创建 <paramref name="source" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 不是 null 并不是有效的类型将其转换为 <see cref="T:System.Windows.CornerRadius" />。</exception>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定 <see cref="T:System.Windows.CornerRadius" /> 为指定的类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述 <see cref="T:System.Globalization.CultureInfo" /> 正在转换的类型。</param>
      <param name="value">要转换的 <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="destinationType">要转换的类型 <see cref="T:System.Windows.CornerRadius" /> 到。</param>
      <returns>创建将该表达式转换的对象 <see cref="T:System.Windows.CornerRadius" /> （字符串）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 null 并且不是 <see cref="T:System.Windows.Media.Brush" />, ，或者如果 <paramref name="destinationType" /> 不是有效的目标类型之一。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>使用初始路径初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</summary>
      <param name="path">绑定的初始 <see cref="P:System.Windows.Data.Binding.Path" />。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>为 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件添加处理程序。</summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>为 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件添加处理程序。</summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <summary>返回附加到指定对象的绑定所使用的 XML 命名空间管理器对象。</summary>
      <param name="target">要从中获取命名空间信息的对象。</param>
      <returns>一个返回的对象，用于查看与传递的对象元素上的绑定有关的 XML 命名空间。 此对象应转换为 <see cref="T:System.Xml.XmlNamespaceManager" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>删除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的处理程序。</summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>删除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的处理程序。</summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要删除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <summary>设置被附加到提供的元素的绑定所使用的命名空间管理器对象。</summary>
      <param name="target">要从中获取命名空间信息的对象。</param>
      <param name="value">要用于计算传递的元素中的命名空间的 <see cref="T:System.Xml.XmlNamespaceManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializePath">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.Path" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.Source" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在应用了此绑定和扩展的属性上设置的对象。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。 可以为 null；有关详细信息，请参阅“备注”部分。</param>
      <returns>要在绑定目标属性上设置的值。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
      <summary>返回一个值，该值指示序列化进程是否应序列化的有效值 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
      <summary>返回一个值，该值指示是否 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 应序列化属性。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>将当前的绑定目标值发送到 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定中的绑定源属性。</summary>
      <exception cref="T:System.InvalidOperationException">此绑定已从其目标分离。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <summary>强制将数据从绑定源属性传输到绑定目标属性。</summary>
      <exception cref="T:System.InvalidOperationException">此绑定已从其目标分离。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <summary>将当前的绑定目标值发送到 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定中的绑定源。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <summary>强制将数据从绑定源传输到绑定目标。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <summary>运行任何 <see cref="T:System.Windows.Controls.ValidationRule" /> 上关联的对象 <see cref="T:System.Windows.Data.Binding" /> 具有 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />。 此方法不会更新源。</summary>
      <returns>true 如果验证规则成功;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.BindingGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.BeginEdit">
      <summary>开始在源上的执行编辑事务 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CancelEdit">
      <summary>结束编辑事务并放弃挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CommitEdit">
      <summary>运行所有 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，并更新绑定源，如果所有验证规则都成功。</summary>
      <returns>true 如果每个 <see cref="T:System.Windows.Controls.ValidationRule" /> 成功，值为提交到了源; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <summary>返回为指定的属性和项建议的值。</summary>
      <param name="item">包含指定的属性的对象。</param>
      <param name="propertyName">该属性要获取其建议的值。</param>
      <returns>建议的属性值。</returns>
      <exception cref="T:System.InvalidOperationException">不存在指定的项和属性的绑定。</exception>
      <exception cref="T:System.Windows.Data.ValueUnavailableException">指定属性的值不可用，由于转换错误或由于早期的验证规则失败。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <summary>尝试获取指定的属性和项的建议的值。</summary>
      <param name="item">包含指定的属性的对象。</param>
      <param name="propertyName">该属性要获取其建议的值。</param>
      <param name="value">此方法返回时，包含一个对象，表示建议的属性值。 此参数未经初始化即被传递。</param>
      <returns>true 如果值为建议的值的指定属性。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.UpdateSources">
      <summary>在绑定上运行转换器和 <see cref="T:System.Windows.Controls.ValidationRule" /> 具有对象 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, ，<see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, ，或 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 并将目标值保存到源对象，如果所有验证规则都成功。</summary>
      <returns>true 如果所有验证规则都成功;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <summary>在绑定上运行转换器和 <see cref="T:System.Windows.Controls.ValidationRule" /> 具有对象 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />。</summary>
      <returns>true 如果验证规则成功;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <summary>初始化的实例 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 给定的列表。</summary>
      <param name="list">基础 <see cref="T:System.ComponentModel.IBindingList" />。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <summary>开始执行添加事务并返回挂起的新项。</summary>
      <returns>挂起的新项。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示给定的项是否属于集合视图。</summary>
      <param name="item">要检查的对象。</param>
      <returns>true 如果项属于集合视图;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection">
      <summary>分离从该集合视图若要启用要进行垃圾回收的集合视图基础的集合。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <summary>开始指定项的编辑事务。</summary>
      <param name="item">要编辑的项。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <summary>检索位于指定位置的视图中的项。</summary>
      <param name="index">该项位于从零开始索引。</param>
      <returns>在视图中的指定位置处的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="index" /> 超出范围。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <summary>集合视图中返回的给定的项所属的索引。</summary>
      <param name="item">要在集合中查找的对象。</param>
      <returns>在集合中，项的索引或 -1 如果集合视图中不存在此项。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围，则抛出。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定的项是否属于视图。</summary>
      <param name="item">要检查的项。</param>
      <returns>true 如果指定的项属于视图，，或如果未设置集合视图; 筛选器否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <summary>从集合中删除指定位置的项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于集合视图中的项数。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="o1">  要比较的第一个对象。</param>
      <param name="o2">  要比较的第二个对象。</param>
      <returns>小于 0，则意味着 <paramref name="o1" /> 是小于 <paramref name="o2" />, ，值为零意味着，它们都相等，并且大于零则意味着 <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
      <summary>通过使用指定的应用程序，它调用 EnableCollectionSynchronization 时的同步机制提供对集合的访问。</summary>
      <param name="collection">要访问的集合。</param>
      <param name="accessMethod">要在集合上执行的操作。</param>
      <param name="writeAccess">true 如果 <paramref name="accessMethod" /> 将写入到该集合; 否则为 false。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <summary>从指定的 <see cref="T:System.Windows.DependencyObject" /> 删除所有绑定，包括类型 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 的绑定。</summary>
      <param name="target">要从中删除绑定的对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>如果存在，则从属性中删除绑定。</summary>
      <param name="target">要从中删除绑定的对象。</param>
      <param name="dp">要从中删除绑定的依赖属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
      <summary>删除指定的集合注册同步。</summary>
      <param name="collection">要删除从已同步的访问权限的集合。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
      <summary>使集合能够跨多个线程访问，并指定应可用于同步对集合的访问的锁对象。</summary>
      <param name="collection">同步集合所需的访问。</param>
      <param name="lockObject">要访问该集合时锁定的对象。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
      <summary>使集合能够跨多个线程访问，并指定应可用于同步对集合的访问的回调。</summary>
      <param name="collection">同步集合所需的访问。</param>
      <param name="context">一个传递给回调的对象。</param>
      <param name="synchronizationCallback">需要对集合的访问时调用回调。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索 <see cref="T:System.Windows.Data.Binding" /> 的指定属性设置的对象。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要从中检索绑定绑定目标属性。</param>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> 给定属性上设置的对象或 null 如果不是 <see cref="T:System.Windows.Data.Binding" /> 设置对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索 <see cref="T:System.Windows.Data.BindingBase" /> 的指定属性设置的对象。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要从中检索的绑定目标属性 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</param>
      <returns>
        <see cref="T:System.Windows.Data.BindingBase" /> 的给定属性设置的对象或 null 如果尚未设置没有任何绑定对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，该对象与指定对象的指定绑定目标属性相关联。</summary>
      <param name="target">
        <paramref name="dp" /> 所在的绑定目标对象。</param>
      <param name="dp">要从中检索 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的绑定目标属性。</param>
      <returns>与给定属性相关联的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象；如果不存在，则为 null。 如果在属性上设置了 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象，则返回 <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的指定属性设置的对象。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要从中检索的绑定目标属性 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</param>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的给定属性设置的对象或 null 如果尚未设置没有任何绑定对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索 <see cref="T:System.Windows.Data.MultiBinding" /> 的指定属性设置的对象。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要从中检索绑定绑定目标属性。</param>
      <returns>
        <see cref="T:System.Windows.Data.MultiBinding" /> 给定属性上设置的对象或 null 如果不是 <see cref="T:System.Windows.Data.MultiBinding" /> 设置对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象，该对象与指定对象的指定绑定目标属性相关联。</summary>
      <param name="target">
        <paramref name="dp" /> 所在的绑定目标对象。</param>
      <param name="dp">要从中检索 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象的绑定目标属性。</param>
      <returns>与给定属性相关联的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象；如果不存在，则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索 <see cref="T:System.Windows.Data.PriorityBinding" /> 的指定属性设置的对象。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要从中检索绑定绑定目标属性。</param>
      <returns>
        <see cref="T:System.Windows.Data.PriorityBinding" /> 给定属性上设置的对象或 null 如果不是 <see cref="T:System.Windows.Data.PriorityBinding" /> 设置对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象，该对象与指定对象的指定绑定目标属性相关联。</summary>
      <param name="target">
        <paramref name="dp" /> 所在的绑定目标对象。</param>
      <param name="dp">要从中检索 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象的绑定目标属性。</param>
      <returns>与给定属性相关联的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象；如果不存在，则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
      <summary>获取所有 <see cref="T:System.Windows.Data.BindingGroup" /> 具有无效值或目标值的对象尚未更新源。</summary>
      <param name="root">根 <see cref="T:System.Windows.UIElement" /> 来获取绑定的组。  此方法返回 <see cref="T:System.Windows.Data.BindingGroup" /> 与此元素或其后代元素相关联的对象。</param>
      <returns>一套 <see cref="T:System.Windows.Data.BindingGroup" /> 与指定元素相关联，并且具有无效值或目标值的对象尚未更新源。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
      <summary>获取所有 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 具有无效值或目标值的对象尚未更新源。</summary>
      <param name="root">根 <see cref="T:System.Windows.UIElement" /> 来获取绑定的组。  此方法返回 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 与此元素或其后代元素相关联的对象。</param>
      <returns>一套 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 与指定元素相关联，并且具有无效值或目标值的对象尚未更新源。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回一个值，该值指示指定的属性是否为当前数据绑定。</summary>
      <param name="target">对象位置 <paramref name="dp" /> 是。</param>
      <param name="dp">要检查的依赖项属性。</param>
      <returns>true 如果指定的属性是数据绑定，则为否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>创建 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的新实例，并将其与指定的绑定目标属性关联。</summary>
      <param name="target">绑定的绑定目标。</param>
      <param name="dp">绑定的目标属性。</param>
      <param name="binding">描述绑定的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</param>
      <returns>为指定的属性创建且与之相关联的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的实例。<see cref="T:System.Windows.Data.BindingExpressionBase" /> 类是 <see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" /> 和 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 的基类。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.CollectionContainer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中化的事件表中的事件。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>新实例初始化 <see cref="T:System.Windows.Data.CollectionView" /> 类，表示指定集的视图。</summary>
      <param name="collection">基础集合。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <summary>清除任何挂起的更改从更改日志。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearPendingChanges">
      <summary>清除未处理的更改到的集合。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示指定的项是否属于视图。</summary>
      <param name="item">要检查的对象。</param>
      <returns>true 如果该项属于该视图;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DeferRefresh">
      <summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
      <returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
      <summary>删除对从基础集合的引用 <see cref="T:System.Windows.Data.CollectionView" />。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetEnumerator">
      <summary>返回可用于枚举在视图中的项的对象。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举在视图中的项。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <summary>检索在视图中指定的从零开始索引处的项。</summary>
      <param name="index">要检索的项的从零开始的索引。</param>
      <returns>在视图中指定的从零开始索引处的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <summary>返回指定的项所在的索引。</summary>
      <param name="item">要查找的项。</param>
      <returns>索引指定的项所在位置，则返回 – 1 如果该项是未知的。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <summary>将指定项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <param name="item">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
      <returns>true 如果生成 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 位于该视图; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <summary>将视图中的第一项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <summary>将视图中的最后一项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <summary>将视图中位于 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 之后的项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <summary>将视图中位于 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 之前的项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <summary>返回一个值，该值指示视图是否可以更改哪一项是 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>false 如果侦听器取消更改;否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>当 <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> 属性更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>由基类来通知派生类调用 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件已发送到消息队列。</summary>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 已添加到更改日志对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 事件。</summary>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 要传递给事件处理程序对象。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 事件。</summary>
      <param name="sender">该事件的发件人。</param>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 要传递给事件处理程序对象。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CurrentChanged" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 不可取消的事件。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 用指定的参数的事件。</summary>
      <param name="args">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 使用指定的参数的事件。</summary>
      <param name="e">要引发事件的参数。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定的项是否属于视图。</summary>
      <param name="item">要检查的项。</param>
      <returns>true 如果指定的项属于视图，，或如果未设置集合视图; 筛选器否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>当在派生类中重写上处理的单个更改 UI 线程。</summary>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象传递给过程。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessPendingChanges">
      <summary>确保已提交到集合的所有挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Refresh">
      <summary>重新创建视图。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <summary>刷新视图，或指定视图需要延迟循环完成时进行刷新。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOverride">
      <summary>重新创建视图。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <summary>将指定的项和索引设置的值为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 和 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性。</summary>
      <param name="newItem">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
      <param name="newPosition">要设置为值 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <summary>将指定的项和索引设置的值为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 和 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性。 从派生类的构造函数可以调用此方法。</summary>
      <param name="newItem">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
      <param name="newPosition">要设置为值 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性值。</param>
      <param name="count">
        <see cref="T:System.Windows.Data.CollectionView" /> 中的项数。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举在视图中的项。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举在视图中的项。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>使用组名称初始化 <see cref="T:System.Windows.Data.CollectionViewGroup" /> 类的新实例。</summary>
      <param name="name">此组的名称。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>使用提供的参数引发 <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> 事件。</summary>
      <param name="e">要引发事件的参数。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.CollectionViewSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
      <returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <summary>返回给定源的默认视图。</summary>
      <param name="source">对绑定源的对象引用。</param>
      <returns>返回 <see cref="T:System.ComponentModel.ICollectionView" /> 对象，它是给定源集合的默认视图。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <summary>返回一个值，该值指示给定的视图是否为默认视图 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 集合。</summary>
      <param name="view">要检查的视图对象。</param>
      <returns>true 如果给定的视图的默认视图 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 集合或如果给定的视图是 nulll; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>时调用 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性更改。</summary>
      <param name="oldCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性的旧值。</param>
      <param name="newCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>时调用 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性更改。</summary>
      <param name="oldSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性的旧值。</param>
      <param name="newSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中化的事件表中的事件。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Windows.Data.DataChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>从集中式的事件管理器接收事件。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Windows.Data.DataChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor">
      <summary>创建的新实例 <see cref="T:System.Windows.Data.CompositeCollection" /> 类为空并且具有默认初始容量。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <summary>创建的新实例 <see cref="T:System.Windows.Data.CompositeCollection" /> 该类为空并且具有指定的初始容量。</summary>
      <param name="capacity">新列表是最初可存储的项的数目。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <summary>将指定的项添加到此集合。</summary>
      <param name="newItem">要向集合添加新项。</param>
      <returns>添加新项位置的从零开始索引。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Clear">
      <summary>清除集合。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <summary>检查以查看给定的项是否在此集合中。</summary>
      <param name="containItem">要检查的项。</param>
      <returns>true 如果集合包含针对给定的项目;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <summary>生成到给定数组的对象引用此集合中的浅表副本。</summary>
      <param name="array">一个数组，它是复制操作的目标。</param>
      <param name="index">在开始从该处复制从目标数组的从零开始索引。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <summary>返回此集合中找到给定的项的索引。</summary>
      <param name="indexItem">要检索其索引的项。</param>
      <returns>如果项出现在集合中，则集合中从零开始的索引找到给定的项目的位置;否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <summary>在集合中给定索引处插入项。 给定的位置后的所有项都向下都移动一个。</summary>
      <param name="insertIndex">要插入处的项的索引。</param>
      <param name="insertItem">要添加到集合的项引用。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中化的事件表中的事件。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <summary>从集合中移除给定的项的引用。 所有剩余项向上移动一个。</summary>
      <param name="removeItem">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <summary>从给定索引处的集合中移除一个项。 所有剩余项向上移动一个。</summary>
      <param name="removeIndex">若要移除的项位置的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个枚举。</summary>
      <returns>一个 IEnumerator 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>创建的视图。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="managerType">一种 <see cref="T:System.Windows.WeakEventManager" /> 调用此方法。 这仅识别的类型管理器对象 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />。</param>
      <param name="sender">产生事件的对象。</param>
      <param name="e">事件数据。</param>
      <returns>true 如果侦听器已处理的事件。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>添加指定的事件处理程序，它在指定的源引发时调用 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <param name="handler">处理的委托 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>指定将侦听器添加到 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 指定源的事件。</summary>
      <param name="source">与事件对象。</param>
      <param name="listener">要作为侦听器添加的对象。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.NewListenerList">
      <summary>返回一个新的对象，以包含侦听器 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</summary>
      <returns>新的对象，以包含侦听器 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</returns>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>从指定的源中删除指定的事件处理程序。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <param name="handler">处理的委托 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>删除指定的侦听器从 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 指定源的事件。</summary>
      <param name="source">与事件对象。</param>
      <param name="listener">要移除的侦听器。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <summary>开始侦听 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 上指定的源的事件。</summary>
      <param name="source">与事件对象。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <summary>停止侦听 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 上指定的源的事件。</summary>
      <param name="source">要停止侦听的源对象。</param>
    </member>
    <member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>指定对象上的特定类型的方式调用指定的处理程序。</summary>
      <param name="genericHandler">调用类型特定的方式的一般处理程序。</param>
      <param name="genericTarget">要在调用处理程序的对象。</param>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将源值转换为绑定目标的值。 数据绑定引擎在将该值从源绑定传播到绑定目标时会调用此方法。</summary>
      <param name="values">
        <see cref="T:System.Windows.Data.MultiBinding" /> 中的源绑定生成的值的数组。 值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 指示源绑定没有可供转换的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>转换后的值。如果该方法返回 null，则会使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty" />。<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 的返回值指示转换器没有生成值，并且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />（如果可用），或者将使用默认值。<see cref="T:System.Windows.Data.Binding" /><see cref="F:System.Windows.Data.Binding.DoNothing" /> 的返回值指示绑定不会传输该值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 或默认值。</returns>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>将绑定目标值转换为源绑定值。</summary>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetTypes">要转换为的类型数组。 数组长度指示为要返回的方法所建议的值的数量与类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>已从目标值转换回源值的值的数组。</returns>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>转换值。</summary>
      <param name="value">绑定源生成的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>转换后的值。 如果该方法返回 null，则使用有效的 null 值。</returns>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>转换值。</summary>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetType">要转换为的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>转换后的值。 如果该方法返回 null，则使用有效的 null 值。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <summary>新实例初始化 <see cref="T:System.Windows.Data.ListCollectionView" /> 类，使用提供的集合可实现 <see cref="T:System.Collections.IList" />。</summary>
      <param name="list">基础集合，必须实现 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNew">
      <summary>开始执行添加事务并返回挂起的新项。</summary>
      <returns>挂起的新项。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <summary>将指定的对象添加到集合。</summary>
      <param name="newItem">要添加到集合中的对象。</param>
      <returns>对象，该对象添加到集合。</returns>
      <exception cref="T:System.InvalidOperationException">无法将对象添加到 <see cref="T:System.Windows.Data.ListCollectionView" /> 使用 <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> 方法。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <summary>结束编辑事务，如果可能，请还原项的原始值。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelNew">
      <summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitNew">
      <summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <summary>比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象。</summary>
      <param name="o1">要比较的第一个对象。</param>
      <param name="o2">要比较的第二个对象。</param>
      <returns>小于零 <paramref name="o1" /> 是小于 <paramref name="o2" />, ，零 <paramref name="o1" /> 和 <paramref name="o2" /> 是否相等或者大于零 <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示给定的项是否属于集合视图。</summary>
      <param name="item">要检查的对象。</param>
      <returns>true 如果项属于集合视图;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <summary>开始指定项的编辑事务。</summary>
      <param name="item">要编辑的项。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <summary>返回可用于枚举在视图中的项的对象。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举在视图中的项。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <summary>检索位于指定位置的视图中的项。</summary>
      <param name="index">该项位于从零开始索引。</param>
      <returns>在视图中的指定位置处的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="index" /> 超出范围。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <summary>返回给定的数据项中的对应位置集合，则为-1 如果该项的索引是未知的索引。</summary>
      <param name="item">要检查在集合中的对象。</param>
      <returns>在集合中，项的索引或 -1 如果集合中不存在此项。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <summary>返回一个值，该值指示是否 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 包含的项。</summary>
      <param name="item">要查找的项。</param>
      <returns>true 如果 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 包含的项; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <summary>返回的枚举数 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</summary>
      <returns>用于 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <summary>返回在指定的项的索引 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</summary>
      <param name="item">要返回其索引的项。</param>
      <returns>中的指定项的索引 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <summary>返回在给定索引处的项 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</summary>
      <param name="index">项所在的索引。</param>
      <returns>在视图中指定的从零开始索引处的项。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
      <returns>如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围，则抛出。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>当 <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> 属性更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>由基类来通知派生类调用 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件已发送到消息队列。</summary>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 已添加到更改日志对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="args" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定的项是否属于视图。</summary>
      <param name="item">要检查的项。</param>
      <returns>true 如果指定的项属于视图，，或如果未设置集合视图; 筛选器否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>处理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</summary>
      <param name="args">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象传递给过程。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="args" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <summary>重新创建该视图。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <summary>从集合中删除指定位置的项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于集合视图中的项数。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="o1">要比较的第一个对象。</param>
      <param name="o2">要比较的第二个对象。</param>
      <returns>值是小于 0，则意味着 <paramref name="o1" /> 是小于 <paramref name="o2;" /> 值为零表示对象相等，则一个值，超过为零表示 <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.MultiBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <summary>将当前的绑定目标值发送到 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定中的绑定源属性。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <summary>强制将数据从绑定源属性传输到绑定目标属性。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <summary>开始创建请求的对象，立即或在后台线程，基于值的 <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> 属性。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.PriorityBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
      <summary>返回一个值，该值指示序列化进程是否应序列化的有效值 <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要添加作为子站点的对象。</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="text">要添加到对象的字符串。</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <summary>更新对活动绑定源。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <summary>更新对活动绑定目标。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>使用指定的属性名称初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>使用指定的属性名称和转换器初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。 如果为 null，则将项本身传递到值转换器。</param>
      <param name="converter">将应用于属性值或项以生成用于确定项所属组的最终值的 <see cref="T:System.Windows.Data.IValueConverter" /> 对象。 转换器可能会返回一个集合，该集合指示项可以出现在多个组中。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。 如果为 null，则将项本身传递到值转换器。</param>
      <param name="converter">将应用于属性值或项以生成用于确定项所属组的最终值的 <see cref="T:System.Windows.Data.IValueConverter" /> 对象。 转换器可能会返回一个集合，该集合指示项可以出现在多个组中。</param>
      <param name="stringComparison">一个 <see cref="T:System.StringComparison" /> 值，该值指定项的值和组的名称之间的比较。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>返回给定项的组名称。</summary>
      <param name="item">要返回其组名称的项。</param>
      <param name="level">分组级别。</param>
      <param name="culture">要提供给转换器的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <returns>给定项的组名称。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>返回一个值，该值指示组名称和项名称是否匹配，从而指示项是否属于组。</summary>
      <param name="groupName">要检查的组名称。</param>
      <param name="itemName">要检查的项名称。</param>
      <returns>如果名称匹配并且项属于组，则为 true，否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>新实例初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 用初始模式的类。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 类初始模式以及用于查找所需的相对源的其他树遍历限定符。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。 对于要相关此签名，这应是 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />。</param>
      <param name="ancestorType">
        <see cref="T:System.Type" /> 要查找的上级节点。</param>
      <param name="ancestorLevel">在给定类型的所有祖先构成之间所需的祖先的序号位置。</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <summary>返回一个对象，应在对此标记扩展的目标对象的属性设置为值。 有关 <see cref="T:System.Windows.Data.RelativeSource" />, ，这是另一种 <see cref="T:System.Windows.Data.RelativeSource" />, ，对于指定的模式使用适当的源。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。 在此实现中，此参数可以为 null。</param>
      <returns>另一个 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <summary>使用指定的源类型和目标类型初始化 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 类的新实例。</summary>
      <param name="sourceType">此转换器转换的类型。</param>
      <param name="targetType">此转换器转换为的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetType" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <summary>返回 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 的此实例的哈希代码。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 的此实例的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
      <param name="info">承载序列化对象数据的对象。</param>
      <param name="context">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <summary>使用指定的消息初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。 如果 <paramref name="innerException" /> 参数不是 null 引用（在 Visual Basic 中为 Nothing），则在处理内部异常的 catch 块中引发当前异常。</param>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlDataProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <summary>准备加载的任何一个内联 XML 还是外部 XML 文件，以生成的集合 XML 节点。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.EndInit">
      <summary>指示此元素的初始化已完成;这将导致 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 当没有其他 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> 未完成。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <summary>新实例初始化 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 类以指定前缀和 uniform resource identifier (URI)。</summary>
      <param name="prefix">要在中使用的前缀 可扩展应用程序标记语言 (XAML)。</param>
      <param name="uri">
        <see cref="T:System.Uri" /> 要创建的映射的命名空间。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <summary>返回一个值，该值指示是否此 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 等效于指定的实例。</summary>
      <param name="obj">要比较相等的实例。</param>
      <returns>true 如果两个实例是否相同，则为否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>按值执行等同性比较。</summary>
      <param name="mappingA">要比较的第一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <param name="mappingB">要比较的第二个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象是否相同; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>按值执行不相等比较。</summary>
      <param name="mappingA">要比较的第一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <param name="mappingB">要比较的第二个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象是否不相同; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <summary>将一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象添加到此集合。</summary>
      <param name="mapping">要添加的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。 该类型不能为 null。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <summary>将一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象添加到此集合。</summary>
      <param name="value">要添加的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。 该类型不能为 null。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="mapping" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <summary>将文本字符串添加为此子 <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> 对象。</summary>
      <param name="text">要添加为子级的文本字符串。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="text" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <summary>删除所有 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 此集合中的对象。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <summary>返回一个值，该值指示此集合是否包含指定 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</summary>
      <param name="mapping">
        <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 感兴趣的对象。 该类型不能为 null。</param>
      <returns>true 如果此集合包含指定 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <summary>集合中的项复制到指定的数组，指定索引处开始。</summary>
      <param name="array">一个数组，它是从集合复制的项的目标。</param>
      <param name="arrayIndex">数组中的从零开始的索引开始复制。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="array" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果项的数目超过数组的长度。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举此集合中的项。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 对象可用于枚举此集合中的项。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <summary>返回一个一般 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</summary>
      <returns>一个泛型 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <summary>移除指定 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 此集合中的对象。</summary>
      <param name="mapping">要移除的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。 该类型不能为 null。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象已成功删除; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象是 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 添加。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">要添加到文本 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
      <summary>使用指定的 <see cref="T:System.Windows.DataTemplate" /> 属性初始化 <see cref="P:System.Windows.DataTemplate.DataType" /> 类的新实例。</summary>
      <param name="dataType">如果模板是为对象数据，这是数据对象的类型名称。</param>
    </member>
    <member name="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>检查模板化父级针对一组规则。</summary>
      <param name="templatedParent">此模板应用到的元素。</param>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTemplateKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
      <summary>使用指定的类型初始化 <see cref="T:System.Windows.DataTemplateKey" /> 类的新实例。</summary>
      <param name="dataType">为其设计此模板类型。 这可能是 <see cref="T:System.Type" /> (若要指示 <see cref="T:System.Windows.DataTemplate" /> 用来显示给定类型的项)，或字符串 (以指示 <see cref="T:System.Windows.DataTemplate" /> 用于显示 <see cref="T:System.Xml.XmlNode" /> 具有给定的标记名称的元素)。</param>
    </member>
    <member name="M:System.Windows.DataTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTrigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理标记扩展提供一个值的属性的情况 <see cref="T:System.Windows.DataTrigger" /> 对象。</summary>
      <param name="targetObject">标记扩展在其中设置值的对象。</param>
      <param name="eventArgs">适用于标记扩展处理的数据。</param>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DeferrableContentConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换指定的对象与 <see cref="T:System.Windows.DeferrableContent" /> 对象。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，它表示您想要将从转换的类型。</param>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的流转换为一个新 <see cref="T:System.Windows.DeferrableContent" /> 对象。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的源流。</param>
      <returns>一个新 <see cref="T:System.Windows.DeferrableContent" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="context" /> 不能为 BAML 提供必需的 XAML 架构上下文。- 或 -<see cref="T:System.Windows.Markup.IProvideValueTarget" /> 服务的解释 <paramref name="context" /> 确定的目标对象不是 <see cref="T:System.Windows.ResourceDictionary" />。- 或 -<paramref name="value" /> 不是有效的字节流。</exception>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回一种结构，该结构报告特定 <see cref="T:System.Windows.DependencyObject" /> 上指定依赖属性的各种元数据和属性系统特征。</summary>
      <param name="dependencyObject">包含要报告其相关信息的 <paramref name="dependencyProperty" /> 的元素。</param>
      <param name="dependencyProperty">要报告其相关信息的依赖项属性的标识符。</param>
      <returns>报告特定信息的 <see cref="T:System.Windows.ValueSource" /> 结构。</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DialogResultConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持从其他类型转换为 <see cref="P:System.Windows.Window.DialogResult" /> ( <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />)。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，它表示要从转换的类型。</param>
      <returns>一个 <see cref="T:System.Boolean" /> 始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持从转换 <see cref="P:System.Windows.Window.DialogResult" /> ( <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />) 为其他类型。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" /> ，它表示要转换的类型。</param>
      <returns>一个 <see cref="T:System.Boolean" /> 始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持从转换 <see cref="P:System.Windows.Window.DialogResult" /> ( <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />) 为其他类型。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。 如果传递 null，则采用当前区域性。</param>
      <param name="source">要转换的 <see cref="T:System.Object" />。</param>
      <returns>始终引发 <see cref="T:System.InvalidOperationException" />。</returns>
      <exception cref="T:System.InvalidOperationException">调用 <see cref="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />。</exception>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持从其他类型转换为 <see cref="P:System.Windows.Window.DialogResult" /> ( <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />)。</summary>
      <param name="typeDescriptorContext">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。 如果传递 null，则采用当前区域性。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <param name="destinationType">值参数所要转换成的 <see cref="T:System.Type" />。</param>
      <returns>始终引发 <see cref="T:System.InvalidOperationException" />。</returns>
      <exception cref="T:System.InvalidOperationException">调用 <see cref="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />。</exception>
    </member>
    <member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Adorner" /> 类的新实例。</summary>
      <param name="adornedElement">要将绑定到的装饰器的元素。</param>
      <exception cref="T:System.ArgumentNullException">adornedElement 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <summary>返回 <see cref="T:System.Windows.Media.Transform" /> 装饰器，基于当前应用于所装饰的元素的转换。</summary>
      <param name="transform">当前应用于所装饰的元素转换。</param>
      <returns>要应用于装饰器的转换。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />。</summary>
      <param name="layoutSlotSize">元素提供的可用大小。</param>
      <returns>可能的剪辑几何图形。 请参阅“备注”。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
      <summary>装饰器实现任何自定义度量行为。</summary>
      <param name="constraint">若要将限制到装饰器大小。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示所需的装饰器的布局空间量。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素，并确定的大小 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</summary>
      <param name="finalSize">此元素保留由其父级的大小。</param>
      <returns>元素所需的实际大小。  此返回值通常是相同的值传递给 finalSize。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 在指定的子 <paramref name="index" /> 位置。</summary>
      <param name="index">所需的索引位置 <see cref="T:System.Windows.Media.Visual" /> 子。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Visual" /> 父级的子项的 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
      <summary>测量所需的子元素的大小，并确定的大小 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</summary>
      <param name="constraint">若要将限制的大小 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 到。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示布局所需的空间量 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
      <summary>将装饰器添加到装饰器层。</summary>
      <param name="adorner">要添加的装饰器。</param>
      <exception cref="T:System.ArgumentNullException">当 adorner 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
      <summary>获取 <see cref="T:System.Windows.Media.AdornerHitTestResult" /> 为指定的点。</summary>
      <param name="point">用于命中测试的点。</param>
      <returns>
        <see cref="T:System.Windows.Media.AdornerHitTestResult" /> 指定点。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素，并确定的大小 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <param name="finalSize">此元素保留由其父级的大小。</param>
      <returns>元素所需的实际大小。  此返回值通常是相同的值传递给 finalSize。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
      <summary>返回可视化树中指定的 <see cref="T:System.Windows.Media.Visual" /> 上方的第一个装饰器层。</summary>
      <param name="visual">要为其查找装饰器层的可视元素。</param>
      <returns>为所指定可视元素的装饰器层；若未找到任何装饰器层，则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">在可视元素为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
      <summary>返回装饰器的数组，这些装饰器绑定到指定的 <see cref="T:System.Windows.UIElement" /> 上。</summary>
      <param name="element">要检索其装饰器数组的 <see cref="T:System.Windows.UIElement" />。</param>
      <returns>为修饰指定 <see cref="T:System.Windows.UIElement" /> 的装饰器数组；若指定元素上未绑定任何装饰器，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 在指定的子 <paramref name="index" /> 位置。</summary>
      <param name="index">所需的索引位置 <see cref="T:System.Windows.Media.Visual" /> 子。</param>
      <returns>一个 <see cref="T:System.Windows.Media.Visual" /> 父级的子项的 <see cref="T:System.Windows.Documents.AdornerLayer" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
      <summary>测量所需的子元素的大小，并确定的大小 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <param name="constraint">未使用。</param>
      <returns>此方法始终返回 <see cref="T:System.Windows.Size" /> (0，0)。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
      <summary>从装饰器层删除指定的 <see cref="T:System.Windows.Documents.Adorner" />。</summary>
      <param name="adorner">要移除的 <see cref="T:System.Windows.Documents.Adorner" />。</param>
      <exception cref="T:System.ArgumentNullException">当 adorner 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update">
      <summary>更新的布局并重绘所有装饰器在装饰器层中。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
      <summary>更新的布局和所有绑定中的装饰器层装饰器将重新绘制到指定 <see cref="T:System.Windows.UIElement" />。</summary>
      <param name="element">
        <see cref="T:System.Windows.UIElement" /> 装饰器来更新与相关联。</param>
      <exception cref="T:System.ArgumentNullException">时引发 元素 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">找不到指定的元素时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>初始化基类在由派生类中，将指定值 <see cref="T:System.Windows.Documents.Block" /> 对象作为新后代的初始内容 <see cref="T:System.Windows.Documents.AnchoredBlock" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.AnchoredBlock" /> 子代。</summary>
      <param name="block">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新元素的初始内容。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Block" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定在其中创建后, 插入元素的插入位置或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> 属性应在从派生的对象的序列化期间序列化 <see cref="T:System.Windows.Documents.AnchoredBlock" />。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">时引发 <paramref name="manager" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Block" /> 基类值由派生类调用时。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性值。</summary>
      <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 为负数。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的值。</summary>
      <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类，将指定 <see cref="T:System.Windows.UIElement" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</summary>
      <param name="uiElement">
        <see cref="T:System.Windows.UIElement" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Bold" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Bold" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Bold" />。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Bold" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Bold" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Bold" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Bold" />。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Inline" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.Bold" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Bold" /> 类，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，以指示的开头和结尾的内容所包含的新选择 <see cref="T:System.Windows.Documents.Bold" />。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容开始 <see cref="T:System.Windows.Documents.Bold" />。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容结束 <see cref="T:System.Windows.Documents.Bold" />。</param>
      <exception cref="T:System.ArgumentNullException">时引发 <paramref name="start" /> 或 <paramref name="end" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="start" /> 和 <paramref name="end" /> 不能解析为一系列内容的段落 <see cref="T:System.Windows.Documents.Bold" /> 元素，例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
      <summary>同步加载和分析指定的文档 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 属性位置。</summary>
      <param name="forceReload">true 若要强制新的加载 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 文档，即使先前已加载。</param>
      <returns>已加载文档。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
      <summary>将附加 <see cref="T:System.Windows.Documents.FixedDocument" /> 到 <see cref="T:System.Windows.Documents.DocumentReference" />。</summary>
      <param name="doc">附加的文档。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
      <summary>将元素添加到集合的末尾。</summary>
      <param name="item">要添加到集合末尾的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
      <summary>将整个集合复制到给定的数组索引处开始的数组。</summary>
      <param name="array">集合中的元素应复制到目标数组。</param>
      <param name="arrayIndex">要复制集合元素的位置在该数组中从零开始的起始索引。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
      <summary>返回用于遍历集合的枚举。</summary>
      <returns>一个可用于循环访问集合的枚举。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问集合的枚举数。  使用类型安全 <see cref="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator" /> 方法相反。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
      <summary>请勿使用。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>将命名的元素添加到该图中。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>未实现此方法。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 添加。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到列表项。</summary>
      <param name="element">要添加的块。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>未实现。</summary>
      <param name="text">未使用。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.Add(System.Windows.Documents.DocumentStructures.ListItemStructure)">
      <summary>向列表添加列表项。</summary>
      <param name="listItem">要添加的列表项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listItem" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#ListItemStructure}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>将命名的元素添加到该段落。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>未实现。</summary>
      <param name="text">未使用。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到的部分。</summary>
      <param name="element">要添加的块元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" />
      </returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>System.Collections.IEnumerator</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到文章段落。</summary>
      <param name="element">要添加的块。</param>
      <exception cref="T:System.ArgumentNullException">传递的块是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.Add(System.Windows.Documents.DocumentStructures.StoryFragment)">
      <summary>添加 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 到 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> 集合。</summary>
      <param name="storyFragment">要添加的 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#StoryFragment}#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#IEnumerable#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加到子对象 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块元素添加到表格单元格。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加到子对象 <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" />。</summary>
      <param name="value">要添加的子对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.Add(System.Windows.Documents.DocumentStructures.TableRowStructure)">
      <summary>将行添加到表行组。</summary>
      <param name="tableRow">要添加的行。</param>
      <exception cref="T:System.ArgumentNullException">该行是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowStructure}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.Add(System.Windows.Documents.DocumentStructures.TableCellStructure)">
      <summary>将一个单元格添加到表行。</summary>
      <param name="tableCell">要添加的单元格。</param>
      <exception cref="T:System.ArgumentNullException">该单元格是否 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableCellStructure}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.Add(System.Windows.Documents.DocumentStructures.TableRowGroupStructure)">
      <summary>向表中添加一组行。</summary>
      <param name="tableRowGroup">要添加的行组。</param>
      <exception cref="T:System.ArgumentNullException">行组是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowGroupStructure}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 为添加的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不可以是子级，此类的类型之一。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Figure" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Figure" /> 类，将指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Figure" />。</summary>
      <param name="childBlock">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Figure" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Figure" /> 类，将指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Figure" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.Figure" /> 元素。</summary>
      <param name="childBlock">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Figure" />。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Block" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.Figure" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedDocument" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
      <summary>创建文档的自动化对等方。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 公开 <see cref="T:System.Windows.Documents.FixedDocument" /> 给 Microsoft UI 自动化。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />。- 或 - 如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
      <summary>创建序列的自动化对等方。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 公开 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 给 Microsoft UI 自动化。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />。- 或 - 如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedPage" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
      <summary>返回一个元素的底部和其父级底部之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要从其中获取底部偏移量元素。</param>
      <returns>元素的下边框和与其父画布底部之间的距离。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
      <summary>返回一个元素的左侧和其父级的左侧之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要从其中获取左侧的偏移量元素。</param>
      <returns>右侧的元素内容和与其父画布的右侧之间的距离。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
      <summary>返回给定元素的 <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 属性。</summary>
      <param name="element">要从中获取属性的元素。</param>
      <returns>
        <see cref="T:System.Uri" /> 的 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
      <summary>返回右端的元素和其父级的右侧之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要从其中获取右侧偏移量元素。</param>
      <returns>右侧的元素内容和与其父画布的右侧之间的距离。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
      <summary>返回元素的顶端和其父级的顶部之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要从其中获取顶部的偏移量元素。</param>
      <returns>元素的顶端和与其父画布顶部之间的距离。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置元素的下边框和其父级的底部之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要对其设置底部偏移量元素。</param>
      <param name="length">该元素的底边和与其父画布的底边之间新的距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置元素的左侧和其父级的左侧之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要对其设置左侧的偏移量元素。</param>
      <param name="length">元素的左边的缘与其父画布的左侧之间新的距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
      <summary>集 uniform resource identifier (URI) 时要导航到单击的超链接。</summary>
      <param name="element">对其设置 URI 偏移量的元素。</param>
      <param name="uri">URI 时要导航到单击的超链接。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置右侧的元素内容和其父级的右侧之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">要对其设置右侧偏移量元素。</param>
      <param name="length">元素的右边缘与其父画布的右侧之间新的距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置元素边缘与其父之间的距离 <see cref="T:System.Windows.Controls.Canvas" />。</summary>
      <param name="element">对其设置前的偏移量的元素。</param>
      <param name="length">该元素的顶边和其父画布的顶边之间新的距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Floater" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Floater" /> 类与指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为其初始内容。</summary>
      <param name="childBlock">新的初始内容 <see cref="T:System.Windows.Documents.Floater" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Floater" /> 类与指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为其初始内容，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，指定为新的插入位置 <see cref="T:System.Windows.Documents.Floater" />。</summary>
      <param name="childBlock">新的初始内容 <see cref="T:System.Windows.Documents.Floater" />。 此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Block" /> 插入。</param>
      <param name="insertionPosition">若要插入的位置 <see cref="T:System.Windows.Documents.Floater" /> 将在创建后的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.FlowDocument" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.FlowDocument" /> 类中，添加指定 <see cref="T:System.Windows.Documents.Block" /> 元素作为初始内容。</summary>
      <param name="block">派生自抽象的对象 <see cref="T:System.Windows.Documents.Block" /> 类中，以添加作为初始内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="block" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
      <summary>当在派生类中重写时提供特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 到实现 Windows Presentation Foundation (WPF) 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当存在于元素上的一个或多个依赖属性的有效值更改时被调用。</summary>
      <param name="e">关联事件的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)">
      <summary>将 DPI 设置为 FlowDocument，从而重新度量和呈现。</summary>
      <param name="dpiInfo">DPI 设置，从其 <see cref="T:System.Windows.Media.Visual" /> 或 <see cref="T:System.Windows.UIElement" /> 呈现。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型为 <paramref name="serviceType." /> 的服务对象- 或 -
如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.FrameworkTextComposition.Complete">
      <summary>完成撰写。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Glyphs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
      <summary>创建 <see cref="T:System.Windows.Media.GlyphRun" /> 与属性 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.GlyphRun" /> 使用的属性创建 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>初始化新的默认实例 <see cref="T:System.Windows.Documents.Hyperlink" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Hyperlink" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Hyperlink" />。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Inline" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.Hyperlink" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，以指示的开头和结尾的内容所包含的新选择 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容开始 <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容结束 <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> 或 <paramref name="end" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> 和 <paramref name="end" /> 不能解析为一系列内容的段落 <see cref="T:System.Windows.Documents.Span" /> 元素; 例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.DoClick">
      <summary>模拟的用户单击 act <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnClick">
      <summary>处理 <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.Hyperlink" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.KeyDown" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件关联的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件关联的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件关联的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>初始化基类值由派生类调用时。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>添加一个隐式 <see cref="T:System.Windows.Documents.Run" /> 元素与给定的文本，作为提供 <see cref="T:System.String" />。</summary>
      <param name="text">文本设为 <see cref="P:System.Windows.Documents.Run.Text" /> 属性的隐式 <see cref="T:System.Windows.Documents.Run" />。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.Windows.UIElement)">
      <summary>添加一个隐式 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 与所提供 <see cref="T:System.Windows.UIElement" /> 已经包含在其中。</summary>
      <param name="uiElement">
        <see cref="T:System.Windows.UIElement" /> 将设置为 <see cref="P:System.Windows.Documents.InlineUIContainer.Child" /> 属性的隐式 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类，将指定 <see cref="T:System.Windows.UIElement" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</summary>
      <param name="childUIElement">
        <see cref="T:System.Windows.UIElement" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类，将指定 <see cref="T:System.Windows.UIElement" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.InlineUIContainer" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 元素。</summary>
      <param name="childUIElement">一个 <see cref="T:System.Windows.UIElement" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.InlineUIContainer" />。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.UIElement" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Italic" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Italic" /> 类与指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容。</summary>
      <param name="childInline">新的初始内容 <see cref="T:System.Windows.Documents.Italic" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Italic" /> 类与指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，指定为新的插入位置 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <param name="childInline">初始的内容。 此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Inline" /> 插入。</param>
      <param name="insertionPosition">要插入的插入位置 <see cref="T:System.Windows.Documents.Italic" /> 将在创建后的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Italic" /> 类与指定 <see cref="T:System.Windows.Documents.TextPointer" /> 指示开始和结束位置的内容选择的对象的新 <see cref="T:System.Windows.Documents.Italic" /> 将包含。</summary>
      <param name="start">选定的开头内容新 <see cref="T:System.Windows.Documents.Italic" /> 将包含。</param>
      <param name="end">选定的最终内容新 <see cref="T:System.Windows.Documents.Italic" /> 将包含。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> 或 <paramref name="end" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> 和 <paramref name="end" /> 不能解析为一系列内容的段落 <see cref="T:System.Windows.Documents.Italic" /> 元素; 例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>初始化新的默认实例 <see cref="T:System.Windows.Documents.LineBreak" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.LineBreak" /> 类，并插入新 <see cref="T:System.Windows.Documents.LineBreak" /> 中的指定位置。</summary>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.LineBreak" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTarget.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.LinkTarget" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
      <summary>添加指定 <see cref="T:System.Windows.Documents.LinkTarget" /> 到集合。</summary>
      <param name="value">添加链接目标。</param>
      <returns>集合中的从零开始的索引 <paramref name="value" /> 添加。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
      <summary>指定一个值，该值指示是否特定 <see cref="T:System.Windows.Documents.LinkTarget" /> 在集合中。</summary>
      <param name="value">要测试的链接。</param>
      <returns>true 如果 <paramref name="value" /> 存在; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
      <summary>将项目复制到指定索引开始的指定的数组集合中。</summary>
      <param name="array">目标数组中。</param>
      <param name="index">第一项复制到其中的数组位置的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
      <summary>获取指定项的索引。</summary>
      <param name="value">要在集合中定位的对象。</param>
      <returns>索引 <paramref name="value" /> 如果在集合中找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
      <summary>将指定的项插入到集合中的指定索引处。</summary>
      <param name="index">插入链接目标的位置的点。</param>
      <param name="value">要插入的目标。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
      <summary>从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要删除的链接目标。</param>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.List" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.List" /> 类，将指定 <see cref="T:System.Windows.Documents.ListItem" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.List" />。</summary>
      <param name="listItem">一个 <see cref="T:System.Windows.Documents.ListItem" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.List" />。</param>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.ListItem" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.ListItem" /> 类，将指定 <see cref="T:System.Windows.Documents.Paragraph" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.ListItem" />。</summary>
      <param name="paragraph">一个 <see cref="T:System.Windows.Documents.Paragraph" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.ListItem" />。</param>
    </member>
    <member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Documents.ListItem.Blocks" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Documents.ListItem" /> 对象。</summary>
      <param name="manager">对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Documents.ListItem.Blocks" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.PageContent.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.PageContent" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
      <summary>加载并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。</summary>
      <param name="forceReload">如果为 true，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前已对其进行加载和缓存；如果为 false，则仅在没有缓存版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
      <returns>此页的可视化树的根元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
      <summary>以异步方式加载，并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。</summary>
      <param name="forceReload">如果为 true，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前已对其进行加载和缓存；如果为 false，则仅在没有缓存版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
      <summary>取消任何当前 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 操作正在进行中的。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>获取一个值，该值指示是否的值 <see cref="P:System.Windows.Documents.PageContent.Child" /> 属性应为序列化时这 <see cref="T:System.Windows.Documents.PageContent" /> 序列化。</summary>
      <param name="manager">序列化服务提供程序。</param>
      <returns>true 如果 <paramref name="manager" /> 不是 null 并且没有 XmlWriter; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">子 <see cref="T:System.Object" /> 添加。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
      <summary>将新页面添加到页集合。</summary>
      <param name="newPageContent">要添加到集合的新页。</param>
      <returns>已添加页的集合中的从零开始索引。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newPageContent" /> 作为传递 null。</exception>
      <exception cref="T:System.InvalidOperationException">页上作为传递 <paramref name="newPageContent" /> 已经存在于集合中。</exception>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
      <summary>返回用于遍历页集合的枚举。</summary>
      <returns>用于循环访问集合的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，不应在代码中直接使用。  使用类型安全 <see cref="M:System.Windows.Documents.PageContentCollection.GetEnumerator" /> 方法相反。</summary>
      <returns>枚举器。</returns>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Paragraph" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Paragraph" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容。</summary>
      <param name="inline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Paragraph" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>指示是否应保持 <see cref="P:System.Windows.Documents.Paragraph.Inlines" /> 属性。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>初始化新的默认实例 <see cref="T:System.Windows.Documents.Run" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Run" /> 类，将指定的字符串作为其初始内容的文本运行。</summary>
      <param name="text">一个字符串，指定的初始内容 <see cref="T:System.Windows.Documents.Run" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Run" /> 类，在运行时文本的初始内容，并将指定的字符串 <see cref="T:System.Windows.Documents.TextPointer" /> 指定为此文本运行的插入位置。</summary>
      <param name="text">一个字符串，指定的初始内容 <see cref="T:System.Windows.Documents.Run" /> 对象。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定在其中插入文本创建后, 运行的插入位置或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Documents.Run.Text" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Documents.Run" /> 对象。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Documents.Run.Text" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Section" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Section" /> 类，将指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Section" />。</summary>
      <param name="block">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Section" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果 <see cref="P:System.Windows.Documents.Section.Blocks" /> 属性应为序列化; 否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">时引发 <paramref name="manager" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>初始化一个对象派生自抽象 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 为指定的类 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> 向其中写入返回的对象。</param>
      <returns>类的对象派生自 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
      <summary>创建一个新 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 通过给定 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 实现。</summary>
      <param name="factoryInstance">新的数据源的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <returns>一个新 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 其属性初始化中的值与给定 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 实现。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factoryInstance" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">一个或多个的下列属性 <paramref name="factoryInstance" /> 为 null: <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName" />, ，<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName" />, ，<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite" />, ，和 <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension" /></exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
      <summary>测试两个 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 对象是否相等。</summary>
      <param name="obj">与此比较的对象 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <returns>true 如果两个值相等。否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
      <summary>获取序列化程序的唯一哈希代码值。</summary>
      <returns>序列化程序的唯一哈希代码值。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
      <summary>初始化一个对象派生自抽象 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 为指定的类 <see cref="T:System.IO.Stream" /> ，将使用指定的描述符。</summary>
      <param name="serializerDescriptor">一个 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> ，它包含序列化信息 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />。</param>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> 向其中写入返回的对象。</param>
      <returns>类的对象派生自 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />。</returns>
      <exception cref="T:System.ArgumentNullException">其中一个参数为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializerDescriptor" /> 指定了错误版本。- 或 -未注册。- 或 -找不到程序集文件。- 或 -无法加载的程序集。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
      <summary>注册序列化程序插件。</summary>
      <param name="serializerDescriptor">
        <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 的插件。</param>
      <param name="overwrite">true 若要覆盖现有注册同一插件;否则为 false。 请参阅“备注”。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="overwrite" /> 是 false 和已注册的插件。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
      <summary>从注册表中删除插件的序列化程序。</summary>
      <param name="serializerDescriptor">
        <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 的插件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">未注册该插件。 请参阅 备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
      <summary>在派生类中重写时，取消异步写入操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
      <summary>在派生类中重写时，返回写入调整后的 <see cref="T:System.Windows.Media.Visual" /> 元素的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它可将整理后的 <see cref="T:System.Windows.Media.Visual" /> 元素写入到文档输出序列化 <see cref="T:System.IO.Stream" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，返回写入已调整 <see cref="T:System.Windows.Media.Visual" /> 元素的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，同时返回打印票证。</summary>
      <param name="documentSequencePT">
        <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 内容的默认打印首选项。</param>
      <param name="documentPT">
        <see cref="T:System.Windows.Documents.FixedDocument" /> 内容的默认打印首选项。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它可将整理后的 <see cref="T:System.Windows.Media.Visual" /> 元素写入到文档输出序列化 <see cref="T:System.IO.Stream" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>在派生类中重写时，将给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，将已分页的内容与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 同步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 和一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 同步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 和一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 同步写入一个给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 和一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
      <summary>当在派生类中重写时，以同步方式将给定 <see cref="T:System.Windows.Media.Visual" /> 元素写入到序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 同步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素和一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，将已分页的内容与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起同步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="documentPaginator">定义写入序列化 <see cref="T:System.IO.Stream" /> 中的内容的文档分页符。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocument">要写入序列化 <see cref="T:System.IO.Stream" /> 的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedDocumentSequence">一个文档序列，用于定义要写入序列化 <see cref="T:System.IO.Stream" /> 的内容。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 异步写入序列化 <see cref="T:System.IO.Stream" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 的页面。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素以及一个关联的 <see cref="T:System.Printing.PrintTicket" />。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>当在派生类中重写时，将向序列化 <see cref="T:System.IO.Stream" /> 异步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素以及一个关联的 <see cref="T:System.Printing.PrintTicket" /> 和标识符。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
      <summary>当在派生类中重写，将启动批处理写入操作的开始。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
      <summary>当在派生类中重写时，取消同步 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> 操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
      <summary>当在派生类中重写时，取消异步 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> 操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
      <summary>当在派生类中重写，完成批处理写入操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
      <summary>当在派生类中重写时，向序列化流同步写入一个给定的 <see cref="T:System.Windows.Media.Visual" /> 元素。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证一起同步写入序列化流。</summary>
      <param name="visual">写入流的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="printTicket">为材料打印方式指定首选项的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
      <summary>在派生类中重写时，将给定 <see cref="T:System.Windows.Media.Visual" /> 元素异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>在派生类中重写时，将具有指定事件标识符的给定 <see cref="T:System.Windows.Media.Visual" /> 元素异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>当在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证一起异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>当在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证和标识符一起异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
      <param name="userState">用于标识异步写入操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs" /> 类的新实例。</summary>
      <param name="exception">取消执行写入操作的异常。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" /> 类的新实例。</summary>
      <param name="cancelled">true 如果已取消;否则为 false 如果正常情况下，写操作完成。</param>
      <param name="state">传递给的用户提供的状态对象 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> 方法。</param>
      <param name="exception">写入操作过程中发生的错误或 null 是否存在任何错误。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs" /> 类的新实例。</summary>
      <param name="printTicketLevel">一个枚举值，指定范围 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> 作为网页、 文档或文档序列。</param>
      <param name="sequence">基于的作用域定义的 <paramref name="printTicketLevel" />, ，数目的页或与相关联的文档数 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" /> 类的新实例。</summary>
      <param name="writingLevel">指定更改事件（例如，针对整个多文档序列、单个文档或单页的事件）的进度范围的枚举值。</param>
      <param name="number">已写入的文档数或页数，取决于 <paramref name="writingLevel" /> 定义的范围。</param>
      <param name="progressPercentage">已写入的数据的百分比。</param>
      <param name="state">标识写操作的用户提供的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Span" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Span" /> 类与指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为初始内容。</summary>
      <param name="childInline">新的初始内容 <see cref="T:System.Windows.Documents.Span" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Span" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Span" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，指定为新的插入位置 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Span" />。 此参数可能为 null，在这种情况下不 <see cref="T:System.Windows.Documents.Inline" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指定要插入的位置 <see cref="T:System.Windows.Documents.Span" /> 元素之后创建，或者为 null 以不自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Span" /> 类，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，以指示的开头和结尾的选定内容的新 <see cref="T:System.Windows.Documents.Span" /> 将包含。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示选定内容的开头的新 <see cref="T:System.Windows.Documents.Span" /> 将包含。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示选定内容的末尾的新 <see cref="T:System.Windows.Documents.Span" /> 将包含。</param>
      <exception cref="T:System.ArgumentNullException">时引发 <paramref name="start" /> 或 <paramref name="end" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="start" /> 和 <paramref name="end" /> 不能解析为一系列内容的段落 <see cref="T:System.Windows.Documents.Span" /> 元素; 例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示是否的内容 <see cref="T:System.Windows.Documents.Span" /> 应序列化期间序列化元素 <see cref="T:System.Windows.Documents.Run" /> 对象。</summary>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <returns>true 如果应序列化内容;否则为 false。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Table.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Table" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.BeginInit">
      <summary>初始化一个元素之前调用。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.EndInit">
      <summary>在初始化元素后立即调用。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.Table" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.Table" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.ShouldSerializeColumns">
      <summary>获取一个值，该值指示是否的有效值 <see cref="P:System.Windows.Documents.Table.Columns" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Documents.Table" /> 对象。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Documents.Table.Columns" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.TableCell" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.TableCell" /> 类，将指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.TableCell" />。</summary>
      <param name="blockItem">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.TableCell" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.TableCell" />。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的 <see cref="T:System.Windows.Documents.TableCell" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
      <summary>将指定 <see cref="T:System.Windows.Documents.TableCell" /> 追加到表单元格的集合。</summary>
      <param name="item">要追加到表单元格的集合的 <see cref="T:System.Windows.Documents.TableCell" />。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="item" /> 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
      <summary>查询集合中的指定项存在。</summary>
      <param name="item">查询集合中存在的一个项。</param>
      <returns>true 如果指定 <paramref name="item" /> 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>将集合的内容复制并将其插入到指定的数组，数组中的指定的索引位置开始。</summary>
      <param name="array">将集合内容将复制到一维数组。 此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="array" /> 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableCell" />, ，或者如果 <paramref name="index" /> 指定位于边界之外的某个位置 <paramref name="array" />。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
      <summary>复制集合的内容并将其插入到指定 <see cref="T:System.Windows.Documents.TableCell" /> 数组的数组中的指定的索引位置开始。</summary>
      <param name="array">一维 <see cref="T:System.Windows.Documents.TableCell" /> 集合内容将复制到数组。 此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> ，它指定在插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="array" /> 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableCell" />, ，或者如果 <paramref name="index" /> 指定超出范围的某个位置 <paramref name="array" />。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
      <summary>返回指定的集合项的从零开始的索引。</summary>
      <param name="item">要返回其索引的集合项。</param>
      <returns>指定的收集项，否则为-1 指定的项不是集合的成员的从零开始的索引。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
      <summary>将指定项插入到集合中的指定索引位置。</summary>
      <param name="index">一个从零开始的索引，它指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要从集合中移除的项。</param>
      <returns>true 如果找到指定的项并将其删除;否则为 false。</returns>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="item" /> 集合中不存在。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，该索引指定要删除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 也不可小于零，或者当 <paramref name="index" /> 是否大于或等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列指定的起始索引和计数，集合中的项目。</summary>
      <param name="index">一个从零开始的索引，该值指示要移除的项范围的起点。</param>
      <param name="count">项目中删除，数从指定的位置开始 <paramref name="index" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 或 <paramref name="count" /> 也不可小于零，或者当 <paramref name="index" /> 是否大于或等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="index" /> 和 <paramref name="count" /> 没有在此集合中指定的有效范围。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Documents.TableCellCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
      <summary>通过设置基础集合来优化找不到的内存消耗 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 的集合中当前项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableColumn" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
      <summary>将指定的项追加到集合。</summary>
      <param name="item">要追加到列集合的表列。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
      <summary>查询集合中的指定项存在。</summary>
      <param name="item">查询集合中存在的一个项。</param>
      <returns>true 如果指定 项 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>将集合的内容复制并将其插入到指定的数组，数组中的指定的索引位置开始。</summary>
      <param name="array">将集合内容将复制到一维数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableColumn" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
      <summary>复制集合的内容并将其插入到指定 <see cref="T:System.Windows.Documents.TableColumn" /> 数组的数组中的指定的索引位置开始。</summary>
      <param name="array">一维 <see cref="T:System.Windows.Documents.TableColumn" /> 集合内容将复制到数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableColumn" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
      <summary>返回指定的集合项的从零开始的索引。</summary>
      <param name="item">要返回其索引的集合项。</param>
      <returns>指定的收集项的从零开始的索引或 -1 如果指定的项不是集合的成员。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
      <summary>将指定项插入到集合中的指定索引位置。</summary>
      <param name="index">一个从零开始的索引，它指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要从集合中移除的项。</param>
      <returns>如果找到并移除指定的项，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentException">当项不存在于集合中时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，该索引指定要删除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于零，或者当索引大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列指定的起始索引和计数，集合中的项目。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的起点。</param>
      <param name="count">项目中删除，数从指定的位置开始 <paramref name="index" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 索引 或 计数 也不可小于零，或者当 索引 是否大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" />。</exception>
      <exception cref="T:System.ArgumentException">时引发 索引 和 计数 没有在此集合中指定的有效范围。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableColumn}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)" /> 方法相反。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Clear" /> 方法相反。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)" /> 方法相反。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Documents.TableColumnCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)" /> 方法相反。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)" /> 方法相反。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, ，<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, ，或 <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> 方法相反。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。 使用类型安全 <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />, ，<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />, ，或 <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> 方法相反。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
      <summary>通过设置基础集合来优化找不到的内存消耗 <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity" /> 等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 的集合中当前项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.TableRow" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
      <summary>返回一个值，该值指示是否的有效值 <see cref="P:System.Windows.Documents.TableRow.Cells" /> 应序列化期间序列化属性 <see cref="T:System.Windows.Documents.TableRow" /> 对象。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Documents.TableRow.Cells" /> 属性应为序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> 要添加子属性 <see cref="T:System.Windows.Documents.TableCell" /> 元素与 <see cref="T:System.Windows.Documents.TableRow" />。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
      <summary>将指定的项追加到集合。</summary>
      <param name="item">要追加到集合或行的表行。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
      <summary>查询集合中的指定项存在。</summary>
      <param name="item">查询集合中存在的一个项。</param>
      <returns>true 如果指定 项 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>将集合的内容复制并将其插入到指定的数组，数组中的指定的索引位置开始。</summary>
      <param name="array">将集合内容将复制到一维数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableRow" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
      <summary>复制集合的内容并将其插入到指定 <see cref="T:System.Windows.Documents.TableRow" /> 数组的数组中的指定的索引位置开始。</summary>
      <param name="array">一维 <see cref="T:System.Windows.Documents.TableRow" /> 集合内容将复制到数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableRow" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
      <summary>返回指定的集合项的从零开始的索引。</summary>
      <param name="item">要返回其索引的集合项。</param>
      <returns>指定的收集项的从零开始的索引或 -1 如果指定的项不是集合的成员。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
      <summary>将指定项插入到集合中的指定索引位置。</summary>
      <param name="index">一个从零开始的索引，它指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要从集合中移除的项。</param>
      <returns>如果找到并移除指定的项，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentException">当项不存在于集合中时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，该索引指定要删除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于零，或者当索引大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列指定的起始索引和计数，集合中的项目。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的起点。</param>
      <param name="count">若要开始移除指定的位置的项的数目 <paramref name="index" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 索引 或 计数 也不可小于零，或者当 索引 是否大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" />。</exception>
      <exception cref="T:System.ArgumentException">时引发 索引 和 计数 没有在此集合中指定的有效范围。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRow}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Documents.TableRowCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
      <summary>通过设置基础集合来优化找不到的内存消耗 <see cref="P:System.Windows.Documents.TableRowCollection.Capacity" /> 等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 的集合中当前项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableRowGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
      <summary>指示是否应保持 <see cref="P:System.Windows.Documents.TableRowGroup.Rows" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将添加到一个表行 <see cref="T:System.Windows.Documents.TableRowGroup" /> 集合。</summary>
      <param name="value">要添加到集合中的 <see cref="T:System.Windows.Documents.TableRow" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
      <summary>将指定的项追加到集合。</summary>
      <param name="item">要追加到集合的项。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
      <summary>查询集合中的指定项存在。</summary>
      <param name="item">查询集合中存在的一个项。</param>
      <returns>true 如果指定 项 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>将集合的内容复制并将其插入到指定的数组，数组中的指定的索引位置开始。</summary>
      <param name="array">将集合内容将复制到一维数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableRowGroup" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
      <summary>复制集合的内容并将其插入到指定 <see cref="T:System.Windows.Documents.TableRowGroup" /> 数组的数组中的指定的索引位置开始。</summary>
      <param name="array">一维 <see cref="T:System.Windows.Documents.TableRowGroup" /> 集合内容将复制到数组。  此数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TableRowGroup" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
      <summary>返回指定的集合项的从零开始的索引。</summary>
      <param name="item">要返回其索引的集合项。</param>
      <returns>指定的收集项的从零开始的索引或 -1 如果指定的项不是集合的成员。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
      <summary>将指定项插入到集合中的指定索引位置。</summary>
      <param name="index">一个从零开始的索引，它指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要从集合中移除的项。</param>
      <returns>如果找到并移除指定的项，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentException">当项不存在于集合中时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，该索引指定要删除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 索引 也不可小于零，或者当 索引 是否大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>移除一系列指定的起始索引和计数，集合中的项目。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的起点。</param>
      <param name="count">若要开始移除指定的位置的项的数目 <paramref name="index" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 索引 或 计数 也不可小于零，或者当 索引 是否大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />。</exception>
      <exception cref="T:System.ArgumentException">时引发 索引 和 计数 没有在此集合中指定的有效范围。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRowGroup}#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在其中插入 <see cref="T:System.Object" />。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
      <summary>通过设置基础集合来优化找不到的内存消耗 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity" /> 等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 的集合中当前项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
      <summary> 解析为的文本效果目标列表上的文本范围的文本效果。</summary>
      <param name="startPosition">起始文本指针</param>
      <param name="endPosition">结束文本指针</param>
      <param name="effect">要应用于文本的效果</param>
      <returns>集合 <see cref="T:System.Windows.Documents.TextEffectTarget" /> 与文本范围相对应的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Disable">
      <summary> 禁用 <see cref="T:System.Windows.Media.TextEffect" /> 影响目标系统上。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Enable">
      <summary>使 <see cref="T:System.Windows.Media.TextEffect" /> 对目标文本。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>处理通知一个或多个元素存在的依赖项属性已经更改的有效值。</summary>
      <param name="e">更改属性值相关联的参数。<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property" /> 属性指定哪个属性已更改， <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" /> 属性指定以前的属性值，与 <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" /> 属性指定新的属性值。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
      <summary>将指定的项追加到集合。</summary>
      <param name="item">要追加到集合的项。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">在 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
      <summary>将指定的项范围追加到集合。</summary>
      <param name="range">实现的对象 <see cref="T:System.Collections.IEnumerable" /> 接口，并指定要添加到集合的项范围。</param>
      <exception cref="T:System.ArgumentException">时引发 范围 包括任何 null 项。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 范围 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
      <summary>查询集合中的指定项存在。</summary>
      <param name="item">查询集合中存在的一个项。</param>
      <returns>true 如果指定 项 存在于集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>将集合的内容复制并将其插入到指定的数组，数组中的指定的索引位置开始。</summary>
      <param name="array">将集合内容将复制到一维数组。  此数组必须使用从零开始的索引。</param>
      <param name="arrayIndex">中的从零开始索引 <paramref name="array" /> 指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">时引发 数组 包括与该类型不兼容的项 <see cref="T:System.Windows.Documents.TextElement" />, ，或者如果 arrayIndex 指定超出范围的某个位置 数组。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 数组 是 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 arrayIndex 是小于 0。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
      <summary>返回集合的内容的枚举数。</summary>
      <returns>一个为该集合的内容的的枚举。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
      <summary>将指定的项插入集合中要在指定的集合项。</summary>
      <param name="previousSibling">将在其后插入新项的集合中的项。</param>
      <param name="newItem">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentException">时引发 newItem 已经属于一个集合。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 previousSibling 或 newItem 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">时引发 previousSibling 不属于此集合。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
      <summary>将指定的项插入到指定的集合项在集合中。</summary>
      <param name="nextSibling">将在其之前插入新项的集合中的项。</param>
      <param name="newItem">要插入到集合的项。</param>
      <exception cref="T:System.ArgumentException">时引发 newItem 已经属于一个集合。</exception>
      <exception cref="T:System.ArgumentNullException">时引发 nextSibling 或 newItem 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">时引发 nextSibling 不属于此集合。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">将项从集合中移除。</param>
      <returns>如果找到并移除指定的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>中的元素复制 <see cref="T:System.Collections.ICollection" /> 到 <see cref="T:System.Array" />, 特定处开始， <see cref="T:System.Array" /> 索引...  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)" /> 方法相反。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问集合的枚举数。  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator" /> 方法相反。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Collections.IList" /> 中。  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.Add(`0)" /> 方法相反。</summary>
      <param name="value">要添加到 <see cref="T:System.Collections.IList" /> 的对象。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.Clear" /> 方法相反。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>确定是否 <see cref="T:System.Collections.IList" /> 包含特定值...  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)" /> 方法相反。</summary>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</param>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在 <see cref="T:System.Collections.IList" /> 中的指定索引处插入一个项。  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)" /> 或 <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)" /> 方法相反。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">要插入到 <see cref="T:System.Collections.IList" /> 中的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。  使用类型安全 <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> 方法相反。</summary>
      <param name="value">要从 <see cref="T:System.Collections.IList" /> 中删除的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>移除位于指定索引处的 <see cref="T:System.Collections.IList" /> 项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>执行序号比较当前指定的位置之间 <see cref="T:System.Windows.Documents.TextPointer" /> 和另一个指定 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指定一个位置可将与当前的位置进行比较。</param>
      <returns>– 1 如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 之前 <paramref name="position" />; 如果是相同的位置为 0，+ 1 如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 遵循 <paramref name="position" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> 指定与当前的位置相关联的文本容器之外的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
      <summary>从当前所指示的位置中删除指定的数目的字符 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="count">要删除的字符数从当前位置开始。 指定正值，若要删除当前的位置; 之后的字符指定要删除的当前位置之前的字符的负值。</param>
      <returns>实际删除的字符数。</returns>
      <exception cref="T:System.InvalidOperationException">不允许文本的位置调用方法。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
      <summary>如果有的话，边界正好位于当前返回了元素， <see cref="T:System.Windows.Documents.TextPointer" /> 中指定的逻辑方向。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定要在其中搜索相邻元素的逻辑方向。</param>
      <returns>在指定的相邻元素 <paramref name="direction" />, ，或 null 如果相邻元素不存在。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>返回边界框 (<see cref="T:System.Windows.Rect" />) 的边界当前 <see cref="T:System.Windows.Documents.TextPointer" /> 中指定的逻辑方向。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定在其中查找内容边界框的逻辑方向。</param>
      <returns>边界框的边界当前 <see cref="T:System.Windows.Documents.TextPointer" /> 沿指定方向或 <see cref="P:System.Windows.Rect.Empty" /> ，如果当前有效的布局信息不可用。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 指向最接近的插入位置的指定逻辑方向。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定要在其中搜索最接近的插入位置的逻辑方向。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指向最接近的插入位置的指定方向。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 指定相对于当前行的开头到 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="count">起始行标记要跳过在确定要为其返回的起始位置的行数。 负值指定前面的行、 0 指定当前行和正值指定后面的行。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指向指定行的开头 (与 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 设置为 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />)，或 null 如果指定的行不在范围内或否则找不到。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 指定相对于当前行的开头到 <see cref="T:System.Windows.Documents.TextPointer" />, ，并报告已跳过多少行。</summary>
      <param name="count">起始行标记要跳过在确定要为其返回的起始位置的行数。 负值指定前面的行、 0 指定当前行和正值指定后面的行。</param>
      <param name="actualCount">此方法返回时，包含在确定要为其返回的起始位置的行时将跳过的行开始标记的实际数量。  此值可能小于 <paramref name="count" /> 跳过指定的行数之前如果遇到的开头或结尾的内容。 此参数未经初始化即被传递。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指向指定行的开头 (与 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 设置为 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />)，或如果指定的行不在范围内指定的行与最接近的行的开头。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回指向指定逻辑方向中的下一步符号的指针。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定要在其中搜索下一个符号的逻辑方向。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 所请求的方向的下一个符号或 null 如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 边框的开始或结束的内容。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的逻辑方向中的下一步插入位置。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定要在其中搜索的下一步的插入位置的逻辑方向。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它标识所请求的方向下, 一步的插入位置或 null 如果找不到没有下一步的插入位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
      <summary>返回的符号数之间当前 <see cref="T:System.Windows.Documents.TextPointer" /> 和另一个指定 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指定要查找的距离 （以符号） 的位置。</param>
      <returns>符号之间当前的相对数量 <see cref="T:System.Windows.Documents.TextPointer" /> 和 <paramref name="position" />。  负值表示当前 <see cref="T:System.Windows.Documents.TextPointer" /> 由指定的位置之后 <paramref name="position" />, ，0 表示，位置是等效的但正值指示当前 <see cref="T:System.Windows.Documents.TextPointer" /> 之前指定的位置 <paramref name="position" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> 指定与当前的位置相关联的文本容器之外的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
      <summary>返回内容的类别指示器旁边当前 <see cref="T:System.Windows.Documents.TextPointer" /> 中指定的逻辑方向。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 指定逻辑的方向来确定相邻内容类别的值。</param>
      <returns>其中一个 <see cref="T:System.Windows.Documents.TextPointerContext" /> 值，该值指示指定的逻辑方向上相邻内容的类别。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的偏移量，在符号，从当前的开头所指示的位置 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="offset">中的偏移量，符号，为其计算和返回的位置。  如果偏移量为负，此位置计算量逻辑相反的方向 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的偏移量，指示的位置或 null 如果找不到对应位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>返回 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的偏移量，在符号，从当前的开头所指示的位置 <see cref="T:System.Windows.Documents.TextPointer" /> 并按指定的方向。</summary>
      <param name="offset">中的偏移量，符号，为其计算和返回的位置。  如果偏移量为负，则返回 <see cref="T:System.Windows.Documents.TextPointer" /> 位于当前 <see cref="T:System.Windows.Documents.TextPointer" />; 否则为它遵循。</param>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定所返回的逻辑的方向 <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到指定的偏移量，指示的位置或 null 如果偏移量超过内容的末尾。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
      <summary>返回一个包含与当前相邻的任何文本字符串 <see cref="T:System.Windows.Documents.TextPointer" /> 中指定的逻辑方向。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 指定的逻辑顺序以查找并返回任何相邻的文本方向的值。</param>
      <returns>一个包含指定的逻辑方向中的任何相邻文本字符串或 <see cref="F:System.String.Empty" /> 如果找不到相邻文本。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
      <summary>从指定方向为调用方提供的字符数组中的任何相邻文本复制指定的最大字符数。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定在其中查找并复制任何相邻的文本的逻辑方向。</param>
      <param name="textBuffer">任何文本复制到其中一个缓冲区。</param>
      <param name="startIndex">中的索引 <paramref name="textBuffer" /> 从此处开始复制的文本写入。</param>
      <param name="count">要复制的字符数最大。</param>
      <returns>实际复制到的字符数 <paramref name="textBuffer" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> 小于 0 或大于 <see cref="P:System.Array.Length" /> 属性 <paramref name="textBuffer" />。- 或 -<paramref name="count" /> 小于 0 或大于中剩余的空间 <paramref name="textBuffer" /> (<paramref name="textBuffer" />。<see cref="P:System.Array.Length" /> 减去 <paramref name="startIndex" />)。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
      <summary>返回当前之间的 Unicode 字符数 <see cref="T:System.Windows.Documents.TextPointer" /> 和指定的逻辑方向中的下一步的非文本符号。</summary>
      <param name="direction">其中一个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，该值指定的逻辑方向进行计数的字符数。</param>
      <returns>当前之间的 Unicode 字符数 <see cref="T:System.Windows.Documents.TextPointer" /> 和下一步的非文本符号。  如果没有相邻的文本，此数可能为 0。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
      <summary>在当前位置插入分行符。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 定位后立即 <see cref="T:System.Windows.Documents.LineBreak" /> 由此方法插入的元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
      <summary>在当前位置插入一个分段符。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到开头 (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) 的新的段落。</returns>
      <exception cref="T:System.InvalidOperationException">这种方法称为在位置上不能对其进行拆分，以的作用域中，如容纳一个新的段落， <see cref="T:System.Windows.Documents.Hyperlink" /> 或 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
      <summary>将指定的文本插入到文本 <see cref="T:System.Windows.Documents.Run" /> 当前位置。</summary>
      <param name="textData">要插入的文本。</param>
      <exception cref="T:System.InvalidOperationException">当前的位置不在 <see cref="T:System.Windows.Documents.Run" /> 元素。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textData" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
      <summary>指示指定的位置是否与当前的位置相同的文本容器中。</summary>
      <param name="textPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，它指定一个位置可将与当前的位置进行比较。</param>
      <returns>true 如果 <paramref name="textPosition" /> 指示的位置，则在相同的文本容器与当前的位置; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textPosition" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.ToString">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>表示对象的字符串。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.TextRange" /> 类，将两个指定 <see cref="T:System.Windows.Documents.TextPointer" /> 作为新范围的开始和结束位置的位置。</summary>
      <param name="position1">标记用于形成新的所选内容的一个结尾固定定位点位置 <see cref="T:System.Windows.Documents.TextRange" />。</param>
      <param name="position2">标记用于形成新的所选内容的另一端的可移动位置 <see cref="T:System.Windows.Documents.TextRange" />。</param>
      <exception cref="T:System.ArgumentException">当同一文档里的 <paramref name="position1" /> 和 <paramref name="position2" /> 未定位时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="position1" /> 或 <paramref name="position2" /> 为 null 时发生。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>将指定的格式设置属性和值应用于当前所选内容。</summary>
      <param name="formattingProperty">要应用的格式设置属性。</param>
      <param name="value">格式设置属性的值。</param>
      <exception cref="T:System.ArgumentException">发生时 <paramref name="formattingProperty" /> 未指定有效的格式设置属性，或 <paramref name="value" /> 指定的值无效 <paramref name="formattingProperty" />。</exception>
      <exception cref="T:System.ArgumentNullException">发生时 <paramref name="formattingProperty" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
      <summary>检查是否可以与指定的数据格式中的内容加载当前所选内容。</summary>
      <param name="dataFormat">要检查负载兼容性到当前所选内容的数据格式。  请参阅 <see cref="T:System.Windows.DataFormats" /> 的预定义的数据格式的列表。</param>
      <returns>true 如果当前所选内容可以加载与所指定的数据格式; 中的内容否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
      <summary>检查是否可将当前所选内容作为指定的数据格式保存。</summary>
      <param name="dataFormat">要检查的数据格式保存与当前所选内容的兼容性。  请参阅 <see cref="T:System.Windows.DataFormats" /> 的预定义的数据格式的列表。</param>
      <returns>true 如果当前所选内容可以另存为指定的数据格式;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
      <summary>删除所有格式设置属性 (由表示 <see cref="T:System.Windows.Documents.Inline" /> 元素) 从当前所选内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
      <summary>检查某个位置 (由指定 <see cref="T:System.Windows.Documents.TextPointer" />) 位于当前所选内容。</summary>
      <param name="textPointer">要测试其包含在当前所选内容位置。</param>
      <returns>true 如果指定的位置是位于当前所选内容;否则为 false。</returns>
      <exception cref="T:System.ArgumentException">发生时 textPointer 不在与当前所选内容相同的文档。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>对当前选定内容中返回指定的格式设置属性的有效值。</summary>
      <param name="formattingProperty">要获取与当前所选内容相关的值的格式设置属性。</param>
      <returns>一个对象，指定所指定的格式设置属性的值。</returns>
      <exception cref="T:System.ArgumentException">发生时 <paramref name="formattingProperty" /> 未指定有效的格式设置属性，或 <paramref name="value" /> 指定的值无效 <paramref name="formattingProperty" />。</exception>
      <exception cref="T:System.ArgumentNullException">发生时 <paramref name="formattingProperty" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
      <summary>将指定的数据格式中的当前选定加载从指定的流。</summary>
      <param name="stream">包含要加载到当前所选内容的数据的可读流。</param>
      <param name="dataFormat">要为将数据加载的数据格式。  当前支持的数据的格式为 <see cref="F:System.Windows.DataFormats.Rtf" />, ，<see cref="F:System.Windows.DataFormats.Text" />, ，<see cref="F:System.Windows.DataFormats.Xaml" />, ，和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <exception cref="T:System.ArgumentNullException">发生时 <paramref name="stream" /> 或 <paramref name="dataFormat" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">不支持指定的数据格式时出现。  如果从加载的内容也可能引发 <paramref name="stream" /> 与指定的数据格式不匹配。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
      <summary>将当前所选内容保存到指定的流中指定的数据格式。</summary>
      <param name="stream">一个空的可写流保存到当前所选内容。</param>
      <param name="dataFormat">要保存为当前选定内容的数据格式。  当前支持的数据的格式为 <see cref="F:System.Windows.DataFormats.Rtf" />, ，<see cref="F:System.Windows.DataFormats.Text" />, ，<see cref="F:System.Windows.DataFormats.Xaml" />, ，和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="dataFormat" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">指定的数据格式不受支持。- 或 -从加载的内容 <paramref name="stream" /> 与指定的数据格式不匹配。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)">
      <summary>将当前所选内容保存到指定的流中指定的数据格式，并且可以选择保留自定义 <see cref="T:System.Windows.Documents.TextElement" /> 对象。</summary>
      <param name="stream">一个空的可写流保存到当前所选内容。</param>
      <param name="dataFormat">要保存为当前选定内容的数据格式。  当前支持的数据的格式为 <see cref="F:System.Windows.DataFormats.Rtf" />, ，<see cref="F:System.Windows.DataFormats.Text" />, ，<see cref="F:System.Windows.DataFormats.Xaml" />, ，和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <param name="preserveTextElements">true 要保留自定义 <see cref="T:System.Windows.Documents.TextElement" /> 对象; 否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">发生时 <paramref name="stream" /> 或 <paramref name="dataFormat" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">不支持指定的数据格式时出现。  如果从加载的内容也可能引发 <paramref name="stream" /> 与指定的数据格式不匹配。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>更新当前所选内容，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 位置来指示更新的所选内容。</summary>
      <param name="position1">一个固定的定位点位置，用于标记更新的所选内容的一端。</param>
      <param name="position2">可移动位置，标记更新的所选内容的另一端。</param>
      <exception cref="T:System.ArgumentException">当同一文档里的 <paramref name="position1" /> 和 <paramref name="position2" /> 未定位时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="position1" /> 或 <paramref name="position2" /> 为 null 时发生。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性值。</summary>
      <param name="element">要为其检索 <see cref="P:System.Windows.Documents.Typography.Variants" /> 属性值的依赖对象。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的值。</summary>
      <param name="element">要为其设置 <see cref="P:System.Windows.Documents.Typography.Variants" /> 属性值的依赖对象。</param>
      <param name="value">要将此属性设为的新值。</param>
      <exception cref="T:System.ArgumentNullException">在 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>初始化新的空实例 <see cref="T:System.Windows.Documents.Underline" /> 类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Underline" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Underline" />。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Underline" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Underline" /> 类，将指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的初始内容 <see cref="T:System.Windows.Documents.Underline" />, ，和一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新的插入位置 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的初始内容 <see cref="T:System.Windows.Documents.Underline" />。  此参数可以为 null, ，在这种情况下没有 <see cref="T:System.Windows.Documents.Inline" /> 插入。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定要插入的插入位置 <see cref="T:System.Windows.Documents.Underline" /> 元素之后创建，或 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新实例初始化 <see cref="T:System.Windows.Documents.Underline" /> 类，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，以指示的开头和结尾的内容所包含的新选择 <see cref="T:System.Windows.Documents.Underline" />。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容开始 <see cref="T:System.Windows.Documents.Underline" />。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，该值指示包含的新内容的选择内容结束 <see cref="T:System.Windows.Documents.Underline" />。</param>
      <exception cref="T:System.ArgumentNullException">时引发 <paramref name="start" /> 或 <paramref name="end" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">时引发 <paramref name="start" /> 和 <paramref name="end" /> 不能解析为一系列内容的段落 <see cref="T:System.Windows.Documents.Underline" /> 元素，例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.ZoomPercentageConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将转换 <see cref="T:System.Double" /> (用作值 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) 为指定类型的对象。</summary>
      <param name="value">当前值 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />。</param>
      <param name="targetType">为类型 <paramref name="value" /> 将要转换。 这必须是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。 请参阅“备注”。</param>
      <param name="parameter">null。 请参阅“备注”。</param>
      <param name="culture">转换期间采用的区域性和语言。</param>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 当转换器不能生成一个值;例如，当 <paramref name="value" /> 是 null 时，或者当 <paramref name="targetType" /> 不是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。- 或 -新 <see cref="T:System.Object" /> 指定的类型。 在此类中实现时，这必须是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。 如果它是一个字符串，它将设置适当的格式为 <paramref name="culture" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>返回先前转换的值 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 回 <see cref="T:System.Double" /> ，可分配给 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />。</summary>
      <param name="value">要转换回对象 <see cref="T:System.Double" />。</param>
      <param name="targetType">
        <paramref name="value" /> 的类型。 这必须是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。 请参阅“备注”。</param>
      <param name="parameter">null。 请参阅“备注”。</param>
      <param name="culture">转换期间采用的区域性和语言。</param>
      <returns>
        <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 当转换器不能生成一个值;例如，当 <paramref name="value" /> 不是有效的百分比时 <paramref name="targetType" /> 不是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。- 或 -一个 <see cref="T:System.Double" /> 表示的缩放百分比 <see cref="T:System.Windows.Controls.DocumentViewer" />。</returns>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DynamicResourceExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.DynamicResourceExtension" /> 类，提供的初始密钥。</summary>
      <param name="resourceKey">此标记扩展所引用的资源键。</param>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在应用了此扩展的属性上设置的对象。 有关 <see cref="T:System.Windows.DynamicResourceExtension" />, ，这是由键控的当前父链中的资源字典中找到的对象 <see cref="P:System.Windows.DynamicResourceExtension.ResourceKey" />。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。</param>
      <returns>要设置的属性上应用了扩展的对象。 而不是实际值，这将是将在以后的某个时间计算的表达式。</returns>
      <exception cref="T:System.InvalidOperationException">尝试为未提供的扩展提供一个值 <paramref name="resourceKey" />。</exception>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DynamicResourceExtensionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。</summary>
      <param name="context">应在其中计算所提供的类型的上下文。</param>
      <param name="destinationType">转换的目标/输出类型。</param>
      <returns>true 如果 <paramref name="destinationType" /> 是种 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的对象转换为另一种类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的对象。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 指定的区域性将数量表示的对象。</param>
      <param name="value">要转换的值。 这类型应为 <see cref="T:System.Windows.DynamicResourceExtension" />。</param>
      <param name="destinationType">应转换为的类型。</param>
      <returns>返回转换的对象。 将此对象转换为请求的类型。 通常这应被强制转换到 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不能指定为 <see cref="T:System.Windows.DynamicResourceExtension" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.EventSetter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)">
      <summary>初始化的新实例 <see cref="T:System.Windows.EventSetter" /> 类，使用提供的事件和处理程序参数。</summary>
      <param name="routedEvent">特定的路由的事件， <see cref="T:System.Windows.EventSetter" /> 响应。</param>
      <param name="handler">要在此资源库中分配的处理程序。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)">
      <summary>新实例初始化 <see cref="T:System.Windows.EventTrigger" /> 使用指定的事件的类。</summary>
      <param name="routedEvent">
        <see cref="T:System.Windows.RoutedEvent" /> 激活此触发器。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.AddChild(System.Object)">
      <summary>指定将对象添加到 <see cref="P:System.Windows.EventTrigger.Actions" /> 当前事件触发器的集合。</summary>
      <param name="value">一个 <see cref="T:System.Windows.TriggerAction" /> 要添加到对象 <see cref="P:System.Windows.EventTrigger.Actions" /> 此触发器的集合。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.AddText(System.String)">
      <summary>此方法不受支持，将引发异常。</summary>
      <param name="text">未使用此参数。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.ShouldSerializeActions">
      <summary>返回序列化进程是否应序列化 <see cref="P:System.Windows.EventTrigger.Actions" /> 对此类的实例的属性。</summary>
      <returns>返回 true 如果 <see cref="P:System.Windows.EventTrigger.Actions" /> 序列化; 否则为应将属性值 false。</returns>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.FigureLength" /> 像素为单位的长度的指定个数的类。</summary>
      <param name="pixels">组成长度的独立于设备的像素 （每英寸 96 像素为单位） 数。</param>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double,System.Windows.FigureUnitType)">
      <summary>使用指定的 <see cref="T:System.Windows.FigureLength" /> 和 <see cref="P:System.Windows.FigureLength.Value" /> 初始化 <see cref="P:System.Windows.FigureLength.FigureUnitType" /> 类的新实例。</summary>
      <param name="value">
        <see cref="P:System.Windows.FigureLength.Value" /> 的 <see cref="T:System.Windows.FigureLength" /> 类。</param>
      <param name="type">
        <see cref="P:System.Windows.FigureLength.Value" /> 的 <see cref="P:System.Windows.FigureLength.FigureUnitType" /> 类。</param>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Object)">
      <summary>确定是否指定 <see cref="T:System.Object" /> 是 <see cref="T:System.Windows.FigureLength" /> 以及它是否等同于此 <see cref="T:System.Windows.FigureLength" />。</summary>
      <param name="oCompare">
        <see cref="T:System.Object" /> 要与此实例进行比较。</param>
      <returns>如果 <paramref name="oCompare" /> 为 <see cref="T:System.Windows.FigureLength" /> 且与此 <see cref="T:System.Windows.FigureLength" /> 相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Windows.FigureLength)">
      <summary>比较两个 <see cref="T:System.Windows.FigureLength" /> 结构是否相等。</summary>
      <param name="figureLength">
        <see cref="T:System.Windows.FigureLength" /> 要与此实例进行比较。</param>
      <returns>true 如果 <paramref name="figureLength" /> 是否与此 <see cref="T:System.Windows.FigureLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.FigureLength" /> 的哈希代码。</summary>
      <returns>此哈希代码 <see cref="T:System.Windows.FigureLength" /> 结构。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Equality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>比较两个 <see cref="T:System.Windows.FigureLength" /> 结构是否相等。</summary>
      <param name="fl1">要比较的第一个 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <param name="fl2">要比较的第二个 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <returns>如果 <paramref name="fl1" /> 和 <paramref name="fl2" /> 相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Inequality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>比较两个 <see cref="T:System.Windows.FigureLength" /> 结构是否不相等。</summary>
      <param name="fl1">要比较的第一个 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <param name="fl2">要比较的第二个 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <returns>如果 <paramref name="fl1" /> 和 <paramref name="fl2" /> 不相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.ToString">
      <summary>创建 <see cref="T:System.String" /> 这种表示形式 <see cref="T:System.Windows.FigureLength" />。</summary>
      <returns>一个 <see cref="T:System.String" /> 这种表示形式 <see cref="T:System.Windows.FigureLength" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FigureLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示是否可以将对象从给定类型转换到的实例 <see cref="T:System.Windows.FigureLength" />。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">源 <see cref="T:System.Type" /> 正被查询转换支持。</param>
      <returns>true 如果指定类型的对象可以转换为 <see cref="T:System.Windows.FigureLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否的实例 <see cref="T:System.Windows.FigureLength" /> 可以转换为指定的类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型这 <see cref="T:System.Windows.FigureLength" /> 的计算结果将转换。</param>
      <returns>true 如果实例 <see cref="T:System.Windows.FigureLength" /> 可以转换为 <paramref name="destinationType" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Windows.FigureLength" />。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述 <see cref="T:System.Globalization.CultureInfo" /> 正在转换的类型。</param>
      <param name="source">要转换的对象。</param>
      <returns>
        <see cref="T:System.Windows.FigureLength" /> 从转换创建 <paramref name="source" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定 <see cref="T:System.Windows.FigureLength" /> 为指定的类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述 <see cref="T:System.Globalization.CultureInfo" /> 正在转换的类型。</param>
      <param name="value">要转换的 <see cref="T:System.Windows.FigureLength" />。</param>
      <param name="destinationType">要转换的类型 <see cref="T:System.Windows.FigureLength" /> 到。</param>
      <returns>创建将该表达式转换的对象 <see cref="T:System.Windows.FigureLength" />。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FontSizeConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否从到的指定类型的转换 <see cref="T:System.Double" /> 一点的值。</summary>
      <param name="context">描述组件如其容器的上下文信息和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="sourceType">标识要评估为进行转换的数据类型。</param>
      <returns>true 如果 <paramref name="sourceType" /> 可以转换为 <see cref="T:System.Double" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否能的字体大小值转换为指定的类型。</summary>
      <param name="context">如其容器的组件的上下文信息和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="destinationType">要计算为进行转换的数据类型。</param>
      <returns>true 如果可以转换此类型;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将转换到的指定的类型 <see cref="T:System.Double" />。</summary>
      <param name="context">如其容器的组件的上下文信息和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="culture">区域性特定信息，包括书写系统和使用的日历。</param>
      <param name="value">要转换为字体大小值的值。</param>
      <returns>一个 <see cref="T:System.Double" /> 值，该值表示转换后的字体大小值。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将转换 <see cref="T:System.Double" /> 为指定类型的值。</summary>
      <param name="context">如其容器的组件的上下文信息和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="culture">区域性特定信息，包括书写系统和使用的日历。</param>
      <param name="value">
        <see cref="T:System.Object" /> 正在转换。</param>
      <param name="destinationType">此字体大小值转换为数据类型。</param>
      <returns>一个新 <see cref="T:System.Object" /> 转换的值。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkContentElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)">
      <summary>将提供的元素添加为此元素的子元素。</summary>
      <param name="child">要添加的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginInit">
      <summary>初始化一个元素之前调用。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>开始提供的情节提要中包含的操作序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary> 开始操作，并指定如果该属性已进行动画处理应该发生什么选项中提供的演示图板，包含序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
      <param name="handoffBehavior">描述要使用的属性在情节提要中所述的行为的枚举值已进行动画处理。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary> 开始使用指定的状态控制动画启动后，它提供的演示图板中包含的操作序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
      <param name="handoffBehavior">描述要使用的属性在情节提要中所述的行为的枚举值已进行动画处理。</param>
      <param name="isControllable">声明是否可以控制动画 （可暂停） 在启动之后。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BringIntoView">
      <summary>尝试将此元素放入视图，它包含在任何可滚动区域内。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.EndInit">
      <summary> 在初始化元素后立即调用。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindName(System.String)">
      <summary> 查找具有提供的标识符名的元素。</summary>
      <param name="name">要搜索的元素的名称。</param>
      <returns>请求的元素。 可能是 null 如果不找到任何匹配的元素。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindResource(System.Object)">
      <summary> 搜索具有指定键的资源，如果找不到请求的资源，则会引发异常。</summary>
      <param name="resourceKey">要查找的资源的键标识符。</param>
      <returns>找到的资源，如果找不到任何匹配资源，则为 null（如果为 null，则还会引发异常）。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">找不到请求的资源键。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary> 获取 <see cref="T:System.Windows.Data.BindingExpression" /> 指定的属性的绑定。</summary>
      <param name="dp">目标 <see cref="T:System.Windows.DependencyProperty" /> 要从其中获取绑定。</param>
      <returns>返回 <see cref="T:System.Windows.Data.BindingExpression" /> 如果目标是数据绑定; 否则为 null。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetUIParentCore">
      <summary>如果没有视觉父级，则返回此元素的备用逻辑父级。 在这种情况下，<see cref="T:System.Windows.FrameworkContentElement" /> 父级始终与 <see cref="P:System.Windows.FrameworkContentElement.Parent" /> 属性具有相同值。</summary>
      <returns>当此方法的 WPF 框架级别实现具有非视觉父级连接时，即返回 null 之外的内容。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary> 将此元素中的键盘焦点移到另一个元素。</summary>
      <param name="request">重点是枚举值作为移动方向。</param>
      <returns>返回 true 如果成功，则移动焦点 false 如果方向为目标元素指定不存在。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary> 每当调用 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary> 每当调用 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">该事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>类处理程序 <see cref="E:System.Windows.ContentElement.GotFocus" /> 事件。</summary>
      <param name="e">该事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)">
      <summary> 引发 <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> 事件。 调用此方法，只要 <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> 设置为 true。</summary>
      <param name="e">该事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新此 <see cref="T:System.Windows.FrameworkContentElement" /> 的任何依赖属性的有效值时调用。 将在实参形参中报告已更改的特定依赖属性。 重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">描述已更改的属性的事件数据，包括旧值和新值。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>正在使用此元素的更改中的样式时调用。</summary>
      <param name="oldStyle">旧的样式。</param>
      <param name="newStyle">将新样式。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary> 每当调用 <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary> 每当调用 <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>确定将接收相对于提供的焦点移动方向，此元素的焦点，但不实际移动焦点的下一个元素。 此方法密封的不能重写。</summary>
      <param name="direction">应为其确定潜在的焦点更改方向。</param>
      <returns>如果实际遍历了焦点，将要移到集中的下一个元素。 可能会返回 null 如果焦点相对于此元素时不能提供的方向移动。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定了一种中的以下指示 <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />。 这些说明不是合法的 <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (但它们都是合法的 <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />)。</exception>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)">
      <summary>提供可简化对访问 <see cref="T:System.Windows.NameScope" /> 注册方法。</summary>
      <param name="name">要使用指定的对象名称的映射的名称。</param>
      <param name="scopedElement">映射的对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)">
      <summary>从该元素的逻辑树中移除指定的元素。</summary>
      <param name="child">要移除的元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>将绑定附加到此元素，作为数据源的路径限定基于提供的源属性名称。</summary>
      <param name="dp">标识绑定的属性。</param>
      <param name="path">源属性名称或用于绑定的属性的路径。</param>
      <returns>记录绑定的条件。 此返回值可用于错误检查。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>基于已提供的绑定对象将一个绑定附加到此元素上。</summary>
      <param name="dp">标识绑定的属性。</param>
      <param name="binding">表示数据绑定。</param>
      <returns>记录绑定的条件。 此返回值可用于错误检查。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>搜索具有指定名称的资源并将设置为指定的属性对它的资源引用。</summary>
      <param name="dp">资源绑定到它的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeResources">
      <summary>返回序列化进程是否应序列化的内容 <see cref="P:System.Windows.FrameworkContentElement.Resources" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkContentElement.Resources" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle">
      <summary>返回序列化进程是否应序列化的内容 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> 方法。</summary>
      <param name="propertyName">请求的环境属性的名称。</param>
      <returns>true 如果 <paramref name="propertyName" /> 可用; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)">
      <summary>搜索具有指定键的资源，如果找到，则返回该资源。</summary>
      <param name="resourceKey">要查找的资源的键标识符。</param>
      <returns>找到的资源。 如果找不到资源，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)">
      <summary>简化了对访问 <see cref="T:System.Windows.NameScope" /> 取消注册方法。</summary>
      <param name="name">若要删除当前作用域的名称对象对的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle">
      <summary>重新默认样式应用到当前 <see cref="T:System.Windows.FrameworkContentElement" />。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
      <summary>将所提供的对象添加到此元素的逻辑树。</summary>
      <param name="child">要添加的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ApplyTemplate">
      <summary>在必要时生成当前模板的可视化树，然后返回一个值，该值指示可视化树是否由此调用重新生成。</summary>
      <returns>如果在树中添加了视觉对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
      <summary>实现 <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (定义为中的虚拟机 <see cref="T:System.Windows.UIElement" />) 并密封实现。</summary>
      <param name="finalRect">父级中应使用此元素排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>在派生类中重写时，为 <see cref="T:System.Windows.FrameworkElement" /> 派生类定位子元素并确定大小。</summary>
      <param name="finalSize">父级中应使用此元素排列自身及其子元素的最终区域。</param>
      <returns>使用的实际大小。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginInit">
      <summary>启动此元素的初始化过程。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>开始提供的情节提要中包含的操作序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>开始使用该属性已进行动画处理应执行的操作为指定的选项中提供的演示图板，包含的操作序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
      <param name="handoffBehavior">描述要使用的属性在情节提要中所述的行为的枚举值已进行动画处理。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary> 开始使用指定的状态控制动画启动后，它提供的演示图板中包含的操作序列。</summary>
      <param name="storyboard">若要开始情节提要。</param>
      <param name="handoffBehavior">描述要使用的属性在情节提要中所述的行为的枚举值已进行动画处理。</param>
      <param name="isControllable">声明是否可以控制动画 （可暂停） 在启动之后。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView">
      <summary>尝试将此元素放入视图，它包含在任何可滚动区域内。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
      <summary>尝试将放入视图，它包含在任何可滚动区域内的此元素提供的区域大小。</summary>
      <param name="targetRectangle">指定也放入视图的元素的大小。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.EndInit">
      <summary>指示该元素的初始化过程已完成。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.FrameworkElement.EndInit" /> 已调用 <see cref="M:System.Windows.FrameworkElement.BeginInit" /> 且以前未调用在元素上。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>查找具有提供的标识符名的元素。</summary>
      <param name="name">所请求元素的名称。</param>
      <returns>请求的元素。 如果找不到匹配的元素，该值将为 null。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindResource(System.Object)">
      <summary>搜索具有指定键的资源并在引发异常，如果找不到所请求的资源。</summary>
      <param name="resourceKey">所请求的资源键标识符。</param>
      <returns>所请求的资源。 如果找到具有所提供键没有任何资源，则将引发异常。<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 中异常的情况下可能还会返回值。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
        <paramref name="resourceKey" /> 未找到，并且事件处理程序不存在的 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件。- 或 -<paramref name="resourceKey" /> 找不到与 <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> 属性是 false 中 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>返回表示指定属性的绑定的 <see cref="T:System.Windows.Data.BindingExpression" />。</summary>
      <param name="dp">要从中获取绑定的目标 <see cref="T:System.Windows.DependencyProperty" />。</param>
      <returns>如果目标属性具有活动的绑定，则返回 <see cref="T:System.Windows.Data.BindingExpression" />；否则返回 null。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加属性值。</summary>
      <param name="element">要为其返回 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 的元素。</param>
      <returns>所请求的流方向（作为一个枚举值）。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
      <summary>返回剪切蒙板的形状。 如果布局系统尝试排列大于可用的显示空间的元素，将应用该掩码。</summary>
      <param name="layoutSlotSize">执行可视化演示的元素的部件的大小。</param>
      <returns>剪切形状。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
      <summary>在实例化的可视树中返回的已命名的元素 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
      <param name="childName">要查找的子级的名称。</param>
      <returns>请求的元素。 可能是 null 如果请求的名称的元素不存在。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetUIParentCore">
      <summary>如果没有视觉父级，则返回此元素的备用逻辑父级。</summary>
      <returns>当此方法的 WPF 框架级别实现具有非视觉父级连接时，即返回 null 之外的内容。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
      <summary>重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, ，并返回指定索引处的子从子元素的集合。</summary>
      <param name="index">集合中请求的子元素的从零开始的索引。</param>
      <returns>请求的子元素。 这不应返回 null；如果提供的索引超出范围，则引发异常。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
      <summary>实现 <see cref="T:System.Windows.FrameworkElement" /> 的基本度量传递布局系统行为。</summary>
      <param name="availableSize">父元素可以赋予子元素的可用大小。</param>
      <returns>此元素在布局中的所需大小。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>在派生类中重写时，测量子元素在布局中所需的大小，并确定由 <see cref="T:System.Windows.FrameworkElement" /> 派生的类的大小。</summary>
      <param name="availableSize">此元素可提供给子元素的可用大小。 可指定无穷大作为一个值，该值指示元素将调整到适应内容的大小。</param>
      <returns>此元素基于其对子元素大小的计算确定它在布局期间所需要的大小。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>在提供的遍历方向移动键盘焦点离开此元素和到另一个元素。</summary>
      <param name="request">重点是枚举值作为移动方向。</param>
      <returns>返回 true 如果成功，则移动焦点 false 如果方向为目标元素指定不存在或可能不会在键盘焦点。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>在派生类中重写时，每当应用程序代码或内部进程调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，都将调用此方法。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary> 每当某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary> 每当某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>每当某个未处理调用 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件到达其路由中的此元素。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。 调用此方法，只要 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 内部。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 的任何依赖属性的有效值时调用。 将在实参形参中报告已更改的特定依赖属性。 重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">描述已更改的属性的事件数据（包括旧值和新值）。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>引发 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 事件，将指定的信息用作最终事件数据的一部分。</summary>
      <param name="sizeInfo">更改中所涉及新旧大小的详细信息。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>在此元素上使用的样式更改时调用，这将导致失效布局。</summary>
      <param name="oldStyle">旧的样式。</param>
      <param name="newStyle">将新样式。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary> 每当某个未处理调用 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary> 每当调用 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由的事件到达此类在其路由。 实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>当此元素父级在可视化树中发生更改时进行了调用。 重写 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />。</summary>
      <param name="oldParent">旧的父元素。 可能是 null，指示元素之前没有可视父级。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
      <summary> 支持 <see cref="T:System.Windows.FrameworkElement" /> 的专用子类中的增量布局实现。 如果子元素包含无效属性，且该属性在元数据中标记为影响布局过程中父元素的测量或排列过程的因素，则调用 <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />。</summary>
      <param name="child">报告更改的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>确定将接收相对于提供的焦点移动方向，此元素的焦点，但不实际移动焦点的下一个元素。</summary>
      <param name="direction">应为其确定潜在的焦点更改方向。</param>
      <returns>如果实际遍历了焦点，将要移到集中的下一个元素。 可能会返回 null 如果焦点相对于此元素时不能提供的方向移动。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定了一种中的以下指示 <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, ，<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />。 这些说明不是合法的 <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (但它们都是合法的 <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />)。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
      <summary>提供可简化对访问 <see cref="T:System.Windows.NameScope" /> 注册方法。</summary>
      <param name="name">要使用指定的对象名称的映射的名称。</param>
      <param name="scopedElement">映射的对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
      <summary>从此元素的逻辑树中删除所提供的对象。<see cref="T:System.Windows.FrameworkElement" /> 将更新受影响的逻辑树父指针，以便与此删除操作保持同步。</summary>
      <param name="child">要移除的元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>将绑定附加到此元素，作为数据源的路径限定基于提供的源属性名称。</summary>
      <param name="dp">标识其中应建立绑定目标属性。</param>
      <param name="path">源属性名称或用于绑定的属性的路径。</param>
      <returns>记录绑定的条件。 此返回值可用于错误检查。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>基于已提供的绑定对象将一个绑定附加到此元素上。</summary>
      <param name="dp">标识应在其中建立绑定的属性。</param>
      <param name="binding">表示数据绑定的详细信息。</param>
      <returns>记录绑定的条件。 此返回值可用于错误检查。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
      <summary>设置所提供元素的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加属性的值。</summary>
      <param name="element">指定流方向的元素。</param>
      <param name="value">一个枚举值，用于指定方向。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>搜索具有指定名称的资源并将设置为指定的属性对它的资源引用。</summary>
      <param name="dp">资源绑定到它的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeResources">
      <summary>返回序列化进程是否应序列化的内容 <see cref="P:System.Windows.FrameworkElement.Resources" /> 属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkElement.Resources" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
      <summary>返回序列化进程是否应序列化的内容 <see cref="P:System.Windows.FrameworkElement.Style" /> 属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkElement.Style" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
      <summary>返回序列化进程是否应序列化的内容 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> 方法。</summary>
      <param name="propertyName">请求的环境属性的名称。</param>
      <returns>true 如果 <paramref name="propertyName" /> 可用; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
      <summary>搜索具有指定键的资源，如果找到，则返回该资源。</summary>
      <param name="resourceKey">要找的资源键标识符。</param>
      <returns>找到的资源，或 null 如果利用所提供的任何资源 <paramref name="key" /> 找到。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
      <summary>简化了对访问 <see cref="T:System.Windows.NameScope" /> 取消注册方法。</summary>
      <param name="name">若要删除当前作用域的名称对象对的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
      <summary>重新默认样式应用到当前 <see cref="T:System.Windows.FrameworkElement" />。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 用指定的文本以生成的类。</summary>
      <param name="text">要生成的文本字符串。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)">
      <summary>使用指定的 <see cref="T:System.Windows.FrameworkElementFactory" /> 初始化 <see cref="T:System.Type" /> 类的新实例。</summary>
      <param name="type">要创建的实例类型。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类与指定 <see cref="T:System.Type" /> 和名称。</summary>
      <param name="type">要创建的实例类型。</param>
      <param name="name">样式标识符。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>向此 factory 创建的实例添加给定路由事件的事件处理程序。</summary>
      <param name="routedEvent">要处理的路由事件的标识符对象。</param>
      <param name="handler">对处理程序实现的引用。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>将给定的路由事件一个事件处理程序添加到此工厂，甚至在已经标记为处理由该路线沿途的另一个元素的路由事件的情况下调用提供的处理程序的选项创建的实例。</summary>
      <param name="routedEvent">要处理的路由事件的标识符对象。</param>
      <param name="handler">对处理程序实现的引用。</param>
      <param name="handledEventsToo">处理在其参数对象是否将调用在情况下，路由的事件已标记为处理程序。true 调用处理程序，甚至当标记为路由的事件处理;否则为 false。 默认值为 false。 请求处理已处理路由的事件并不常见。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)">
      <summary>将子工厂添加到此工厂。</summary>
      <param name="child">
        <see cref="T:System.Windows.FrameworkElementFactory" /> 要作为子级添加对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>从给定的路由事件中删除事件处理程序。 这适用于此工厂创建的实例。</summary>
      <param name="routedEvent">路由事件的标识符对象。</param>
      <param name="handler">要删除的处理程序。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>设置在属性上的数据绑定。</summary>
      <param name="dp">标识应在其中建立绑定的属性。</param>
      <param name="binding">绑定的说明。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>设置子属性上的动态资源引用。</summary>
      <param name="dp">资源绑定到它的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>设置依赖项属性的值。</summary>
      <param name="dp">要设置的属性的依赖项属性标识符。</param>
      <param name="value">新值。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类，具有指定的默认值。</summary>
      <param name="defaultValue">依赖项属性，作为特定类型的值通常提供默认值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 使用提供的默认值和框架级别的元数据选项。</summary>
      <param name="defaultValue">依赖项属性，作为特定类型的值通常提供默认值。</param>
      <param name="flags">元数据选项标志 (的组合 <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值)。 这些选项指定的依赖项属性进行交互的特征与系统，例如布局或数据绑定。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类提供的默认值和框架元数据选项，并且指定 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调。</summary>
      <param name="defaultValue">依赖项属性，作为特定类型的值通常提供默认值。</param>
      <param name="flags">元数据选项标志 (的组合 <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值)。 这些选项指定的依赖项属性进行交互的特征与系统，例如布局或数据绑定。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 使用提供的默认值以及框架元数据选项和指定的回调类。</summary>
      <param name="defaultValue">依赖项属性，通常作为特定类型提供默认值。</param>
      <param name="flags">元数据选项标志 (的组合 <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值)。 这些选项指定的依赖项属性进行交互的特征与系统，例如布局或数据绑定。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <param name="coerceValueCallback">当属性系统调用时，将调用处理程序实现的参考 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 根据此属性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 用提供的默认值和框架元数据选项、 指定的回调和一个布尔值，用于防止动画的属性。</summary>
      <param name="defaultValue">依赖项属性，通常作为特定类型提供默认值。</param>
      <param name="flags">元数据选项标志 (的组合 <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值)。 这些选项指定的依赖项属性进行交互的特征与系统，例如布局或数据绑定。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <param name="coerceValueCallback">当属性系统调用时，将调用处理程序实现的参考 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 此依赖项属性。</param>
      <param name="isAnimationProhibited">true 若要阻止属性系统对此元数据应用到的属性进行动画处理。 此类属性会引发源自属性系统，如果动画处理，它们会尝试运行时异常。false 若要允许对属性进行动画处理。 默认值为 false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类提供的默认值和框架元数据选项，指定的回调，可以用来防止动画的属性，并且数据绑定更新触发器默认布尔值。</summary>
      <param name="defaultValue">依赖项属性，通常作为特定类型提供默认值。</param>
      <param name="flags">元数据选项标志 (的组合 <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值)。 这些选项指定的依赖项属性进行交互的特征与系统，例如布局或数据绑定。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <param name="coerceValueCallback">当属性系统调用时，将调用处理程序实现的参考 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 根据此属性。</param>
      <param name="isAnimationProhibited">true 若要阻止属性系统对此元数据应用到的属性进行动画处理。 此类属性会引发源自属性系统，如果动画处理，它们会尝试运行时异常。 默认值为 false。</param>
      <param name="defaultUpdateSourceTrigger">
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 时应用此属性的绑定具有要使用其 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类提供的默认值并且指定 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调。</summary>
      <param name="defaultValue">依赖项属性，作为特定类型的值通常提供默认值。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 带有提供的默认值和指定的回调类。</summary>
      <param name="defaultValue">依赖项属性，通常作为特定类型提供默认值。</param>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <param name="coerceValueCallback">当属性系统调用时，将调用处理程序实现的参考 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 此依赖项属性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; 请参阅备注。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类与指定 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调。</summary>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>新实例初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 用指定的回调类。</summary>
      <param name="propertyChangedCallback">对有效的属性值发生更改时，将调用属性系统的处理程序实现的引用。</param>
      <param name="coerceValueCallback">当属性系统调用时，将调用处理程序实现的引用 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 此依赖项属性。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>允许合并源元数据和基本元数据。</summary>
      <param name="baseMetadata">要合并的基本元数据。</param>
      <param name="dp">此元数据被应用到的依赖属性。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>此元数据已应用到属性，用于指示正在密封元数据时调用。</summary>
      <param name="dp">向其应用了元数据依赖项属性。</param>
      <param name="targetType">如果这是类型特定的元数据与此元数据关联的类型。 如果这是默认元数据，此值可为 null。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)">
      <summary>查找与此模板中定义的指定名称关联的元素。</summary>
      <param name="name">字符串名称。</param>
      <param name="templatedParent">应用此模板的 <see cref="T:System.Windows.FrameworkElement" /> 的上下文。</param>
      <returns>与指定名称关联的元素。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.LoadContent">
      <summary>实例对象的形式加载模板的内容并返回内容的根元素。</summary>
      <returns>内容的根元素。 调用此操作多次返回单独的实例。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)">
      <summary>将新的名称/对象对注册到当前的名称范围。</summary>
      <param name="name">要注册的名称。</param>
      <param name="scopedElement">要映射到所提供名称的对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.Seal">
      <summary>锁定模板，使它不能更改。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示序列化进程是否应序列化的值 <see cref="P:System.Windows.FrameworkTemplate.Resources" /> 对此类的实例的属性。</summary>
      <param name="manager">
        <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />。</param>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkTemplate.Resources" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree">
      <summary>返回一个值，该值指示序列化进程是否应序列化的值 <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 对此类的实例的属性。</summary>
      <returns>如果应当序列化 <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>返回具有提供的标识名称的对象。</summary>
      <param name="name">发出请求的对象的名称标识符。</param>
      <returns>对象（如果找到）。 如果找不到该名称的对象，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>查询指定的环境属性在当前范围中是否可用。</summary>
      <param name="propertyName">请求的环境属性的名称。</param>
      <returns>true 如果请求的环境属性可用;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)">
      <summary>从 XAML 名称范围中删除名称/对象映射。</summary>
      <param name="name">要删除的映射的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>当在派生类中重写，提供此模板将应用于的元素的规则。</summary>
      <param name="templatedParent">此模板应用到的元素。</param>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.GridLength" /> 结构，以像素为单位使用指定的绝对值。</summary>
      <param name="pixels">独立于设备的像素 （每英寸 96 像素为单位） 数。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Pixels" /> 等同于 <see cref="F:System.Double.NegativeInfinity" />, ，<see cref="F:System.Double.PositiveInfinity" />, ，或 <see cref="F:System.Double.NaN" />。</exception>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>新实例初始化 <see cref="T:System.Windows.GridLength" /> 结构和指定类型的它保存的值。</summary>
      <param name="value">此实例的初始值 <see cref="T:System.Windows.GridLength" />。</param>
      <param name="type">
        <see cref="T:System.Windows.GridUnitType" /> 的此实例所持有的 <see cref="T:System.Windows.GridLength" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 等同于 <see cref="F:System.Double.NegativeInfinity" />, ，<see cref="F:System.Double.PositiveInfinity" />, ，或 <see cref="F:System.Double.NaN" />。</exception>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>确定指定对象是否与当前的 <see cref="T:System.Windows.GridLength" /> 实例相等。</summary>
      <param name="oCompare">要与当前实例进行比较的对象。</param>
      <returns>true 如果指定的对象具有相同的值和 <see cref="T:System.Windows.GridUnitType" /> 与当前实例; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>确定指定的 <see cref="T:System.Windows.GridLength" /> 是否等同于当前的 <see cref="T:System.Windows.GridLength" />。</summary>
      <param name="gridLength">
        <see cref="T:System.Windows.GridLength" /> 结构要与当前实例进行比较。</param>
      <returns>true 如果指定 <see cref="T:System.Windows.GridLength" /> 具有相同的值和 <see cref="P:System.Windows.GridLength.GridUnitType" /> 与当前实例; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.GridLength" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Windows.GridLength" /> 结构的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>比较两个 <see cref="T:System.Windows.GridLength" /> 结构是否相等。</summary>
      <param name="gl1">要比较的第一个 <see cref="T:System.Windows.GridLength" /> 实例。</param>
      <param name="gl2">要比较的第二个 <see cref="T:System.Windows.GridLength" /> 实例。</param>
      <returns>true 如果两个实例 <see cref="T:System.Windows.GridLength" /> 具有相同的值和 <see cref="T:System.Windows.GridUnitType" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>比较两个 <see cref="T:System.Windows.GridLength" /> 结构以确定它们是否不相等。</summary>
      <param name="gl1">要比较的第一个 <see cref="T:System.Windows.GridLength" /> 实例。</param>
      <param name="gl2">要比较的第二个 <see cref="T:System.Windows.GridLength" /> 实例。</param>
      <returns>true 如果两个实例 <see cref="T:System.Windows.GridLength" /> 不具有相同的值和 <see cref="T:System.Windows.GridUnitType" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>返回 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.GridLength" /> 表示形式。</summary>
      <returns>一个 <see cref="T:System.String" /> 形式显示当前 <see cref="T:System.Windows.GridLength" /> 结构。</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.GridLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否可以将一个类从给定类型转换到的实例 <see cref="T:System.Windows.GridLength" />。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">正在计算的转换的源的类型。</param>
      <returns>true 如果该转换器可以转换从指定类型的实例 <see cref="T:System.Windows.GridLength" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.GridLength" /> 可以转换为其他类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型的此实例 <see cref="T:System.Windows.GridLength" /> 转换进行评估。</param>
      <returns>true 如果该转换器可以转换的此实例 <see cref="T:System.Windows.GridLength" /> 为指定的类型; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>试图将指定对象转换为 <see cref="T:System.Windows.GridLength" /> 实例。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">转换过程中应考虑的区域性特定信息。</param>
      <param name="source">要转换的对象。</param>
      <returns>从已转换的 <paramref name="source" /> 创建的 <see cref="T:System.Windows.GridLength" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 对象为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 对象不为 null，而且不是可转换为 <see cref="T:System.Windows.GridLength" /> 的有效类型。</exception>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换的一个实例 <see cref="T:System.Windows.GridLength" /> 为指定的类型。</summary>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">转换过程中应考虑的区域性特定信息。</param>
      <param name="value">实例 <see cref="T:System.Windows.GridLength" /> 将转换。</param>
      <param name="destinationType">指示此实例的类型的 <see cref="T:System.Windows.GridLength" /> 转换为。</param>
      <returns>转换后的实例创建的对象 <see cref="T:System.Windows.GridLength" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 不是要转换的有效类型之一。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.HierarchicalDataTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.HierarchicalDataTemplate" /> 模板所针对的指定类型的类。</summary>
      <param name="dataType">此模板所针对的类型。</param>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Input.CommandConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的对象是否可以转换为的一个实例 <see cref="T:System.Windows.Input.ICommand" />, ，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="sourceType">计算用于转换类型。</param>
      <returns>如果 true 的类型是 <paramref name="sourceType" />，则为 <see cref="T:System.String" /> ；否则，为 false。</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.Input.ICommand" /> 可以转换为指定的类型，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="destinationType">计算用于转换类型。</param>
      <returns>如果 true 的类型是 <paramref name="destinationType" />，则为 <see cref="T:System.String" /> ；否则，为 false。</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将转换指定的对象与 <see cref="T:System.Windows.Input.ICommand" />, ，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="source">要转换的对象。</param>
      <returns>转换后的对象，或 null 如果 <paramref name="source" /> 为一个空字符串。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 不能转换。</exception>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换 <see cref="T:System.Windows.Input.ICommand" /> 到指定的类型，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>转换后的对象或为空字符串。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性值。</summary>
      <param name="element">从中读取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性值。</summary>
      <param name="element">从中获取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性值。</summary>
      <param name="element">从中获取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性值。</summary>
      <param name="element">从中读取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性值。</summary>
      <param name="element">从中读取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性值。</summary>
      <param name="element">从中获取附加属性的元素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定的元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性的值。</summary>
      <param name="element">要向其写入附加属性的元素。</param>
      <param name="enabled">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定的元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性的值。</summary>
      <param name="element">要在其上设置附加属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定的元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性的值。</summary>
      <param name="element">要在其上设置附加属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定的元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性的值。</summary>
      <param name="element">要向其写入附加属性的元素。</param>
      <param name="isTabStop">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性的值。</summary>
      <param name="element">要对其设置附加属性的元素。</param>
      <param name="index">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定的元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性的值。</summary>
      <param name="element">要在其上设置附加属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>创建 <see cref="T:System.Windows.Interop.ActiveXHost" /> 窗口并将其分配到某个父级。</summary>
      <param name="hwndParent">父窗口中。</param>
      <returns>一个 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 到 <see cref="T:System.Windows.Interop.ActiveXHost" /> 窗口。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>销毁所承载的窗口。</summary>
      <param name="hwnd">一个包含窗口句柄的结构。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <summary>释放由非托管的资源 <see cref="T:System.Windows.Interop.ActiveXHost" /> ，还可以释放托管的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <summary>返回由表示的窗口的大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象，如下所请求的布局引擎运行。</summary>
      <param name="swConstraint">大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象。</param>
      <returns>大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>提供类处理对此元素有意义的访问键时调用。</summary>
      <param name="args">事件数据的访问键事件。 事件数据报告哪个键被调用，并指示是否 <see cref="T:System.Windows.Input.AccessKeyManager" /> 控件发送这些事件的对象也将此访问键调用发送到其他元素。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 的任何依赖属性的有效值时调用。 将在实参形参中报告已更改的特定依赖属性。 重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">描述已更改的属性的事件数据（包括旧值和新值）。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>当所承载的窗口位置发生更改时调用。</summary>
      <param name="bounds">窗口的位置。</param>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.#ctor">
      <summary> 此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>一个新 <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.IServiceProvider.GetService(System.Type)" />。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />。- 或 - 如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <summary>尝试将该脚本对象转换为字符串表示形式。</summary>
      <returns>脚本对象，可以将对象转换; 如果对象的字符串表示形式否则为该对象的默认属性或方法的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>获取索引的值从脚本对象使用的第一个索引值 <paramref name="indexes" /> 集合。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="indexes">要检索的索引。</param>
      <param name="result">方法的结果。</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">长度 <paramref name="indexes" /> 是否不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值是 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>从该脚本对象中获取的成员值。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="result">方法的结果。</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>调用默认的脚本方法。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="args">要传递给默认方法的参数。</param>
      <param name="result">方法的结果。</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMethodException">该方法不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>对脚本对象调用方法。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="args">要传递给默认方法的参数。</param>
      <param name="result">方法的结果。</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMethodException">该方法不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>成员的 script 对象使用设置中指定的第一个索引 <paramref name="indexes" /> 集合。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="indexes">要检索的索引。</param>
      <param name="value">方法结果</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">长度 <paramref name="indexes" /> 是否不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值是 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>设置为指定值的脚本对象成员。</summary>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="value">要设置的成员的值。</param>
      <returns>始终返回 true。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">长度 <paramref name="indexes" /> 是否不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值是 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Interop.HwndHost" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>当在派生类中重写创建托管窗口。</summary>
      <param name="hwndParent">父窗口的窗口句柄。</param>
      <returns>子窗口的句柄 Win32 窗口创建。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>如果在派生类中重写，将销毁所承载的窗口。</summary>
      <param name="hwnd">一个包含窗口句柄的结构。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose">
      <summary>立即释放该对象可能持有的所有系统资源。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <summary>立即释放该对象可能持有的所有系统资源。</summary>
      <param name="disposing">设置为 true 如果从显式释放器调用和 false 否则为。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Finalize">
      <summary>垃圾回收器销毁对象之前，请执行最后的清理工作。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <summary>获取一个值，该值指示是否接收器或所包含的组件之一具有焦点。</summary>
      <returns>true 如果接收器或所包含的组件之一具有焦点，则否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <summary>返回由表示的窗口的大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象，如下所请求的布局引擎运行。</summary>
      <param name="constraint">大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象。</param>
      <returns>大小 <see cref="T:System.Windows.Interop.HwndHost" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 为 <see cref="T:System.Windows.Interop.HwndHost" /> 。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>时，调用此 HwndHost 呈现更改 DPI。</summary>
      <param name="oldDpi">原始的 DPI 比例设置。</param>
      <param name="newDpi">新的 DPI 比例设置。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>当所承载的窗口接收时调用 WM_KEYDOWN 消息。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary> 当所承载的窗口接收时调用 WM_KEYUP 消息。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>调用此接收器的助记键 （访问键） 之一时调用。</summary>
      <param name="msg">助记键和关联数据的的消息。</param>
      <param name="modifiers">修改键。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary> 当所承载的窗口位置发生更改时调用。</summary>
      <param name="rcBoundingBox">窗口的位置。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>注册 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 包含组件的接口。</summary>
      <param name="sink">
        <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 包含组件的接收器。</param>
      <returns>
        <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 包含组件的站点。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</summary>
      <returns>true 如果接收器或所包含的组件之一具有焦点，则否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <param name="msg">助记键和关联数据的的消息。 不要修改此消息结构。 它是通过只为了提高性能的引用进行传递。</param>
      <param name="modifiers">修改键。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</summary>
      <param name="sink">
        <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 包含组件的接收器。</param>
      <returns>
        <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 包含组件的站点。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</summary>
      <param name="request">指定是应该将焦点设置到第一项或最后一个制表位。</param>
      <returns>true 如果焦点已设为，请求; false, ，如果不有任何制表位。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <param name="msg">消息和相关联的数据。 不要修改此结构。 它是通过只为了提高性能的引用进行传递。</param>
      <param name="modifiers">修改键。</param>
      <returns>true 如果该消息已处理的方法的实现过程;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <param name="msg">消息和相关联的数据。 不要修改此结构。 它是通过只为了提高性能的引用进行传递。</param>
      <param name="modifiers">修改键。</param>
      <returns>true 如果消息已处理和 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 调用; 否则为不应为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>将焦点设置在第一个制表位或接收器的最后一个制表位。</summary>
      <param name="request">指定是应该将焦点设置到第一项或最后一个制表位。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>处理 keydown 消息级别的键盘输入。</summary>
      <param name="msg">消息和相关联的数据。 不要修改此结构。 它是通过只为了提高性能的引用进行传递。</param>
      <param name="modifiers">修改键。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>处理 WM_CHAR 和 WM_SYSCHAR、 WM_DEADCHAR，和 WM_SYSDEADCHAR 输入的消息之前 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 调用方法。</summary>
      <param name="msg">消息和相关联的数据。 不要修改此结构。 它是通过只为了提高性能的引用进行传递。</param>
      <param name="modifiers">修改键。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <summary> 更新子窗口的大小、 可见性和位置，以反映该元素的当前状态。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>当在派生类中重写访问托管的子窗口的窗口过程 （句柄）。</summary>
      <param name="hwnd">所承载的窗口的窗口句柄。</param>
      <param name="msg">要对其执行操作的消息。</param>
      <param name="wParam">可能会涉及到处理消息的信息。 这通常用于存储少量信息，如标志。</param>
      <param name="lParam">可能会涉及到处理消息的信息。 这通常用于引用的对象。</param>
      <param name="handled">是否应标记为产生的事件处理。</param>
      <returns>子窗口的窗口句柄。</returns>
    </member>
    <member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <summary>提供上载进度数字信息可以用于更新进度指示器。</summary>
      <param name="bytesDownloaded">到目前为止下载的总字节数。</param>
      <param name="bytesTotal">需要下载的应用程序的总字节数。</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <summary>新实例初始化 <see cref="T:System.Windows.Interop.WindowInteropHelper" /> 为指定的类 Windows Presentation Foundation (WPF) 窗口。 </summary>
      <param name="window">一个 WPF 窗口对象。</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <summary>如果尚未创建 HWND，创建窗口的 HWND。</summary>
      <returns>
        <see cref="T:System.IntPtr" /> 表示 HWND。</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.LengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否可以从指定类型到转换 <see cref="T:System.Double" /> ，它表示对象的长度。</summary>
      <param name="typeDescriptorContext">提供有关组件的上下文信息。</param>
      <param name="sourceType">标识要计算以供转换的数据类型。</param>
      <returns>true 如果可以转换;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否进行转换，则为指定的类型从 <see cref="T:System.Double" /> ，它表示对象的长度。</summary>
      <param name="typeDescriptorContext">提供有关组件的上下文信息。</param>
      <param name="destinationType">标识要计算以供转换的数据类型。</param>
      <returns>true 如果转换为 <paramref name="destinationType" /> 可能; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将其他数据类型的实例转换为的实例 <see cref="T:System.Double" /> 表示对象的长度。</summary>
      <param name="typeDescriptorContext">提供有关组件的上下文信息。</param>
      <param name="cultureInfo">表示转换期间维持的区域性特定信息。</param>
      <param name="source">标识要转换为对象 <see cref="T:System.Double" />。</param>
      <returns>一个实例 <see cref="T:System.Double" /> 转换的值。</returns>
      <exception cref="T:System.ArgumentNullException">如果则会发生 <paramref name="source" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果则会发生 <paramref name="source" /> 不是 null 并且不是有效的转换类型。</exception>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将其他类型的实例转换为 <see cref="T:System.Double" /> 表示对象的长度。</summary>
      <param name="typeDescriptorContext">描述的组件，例如其容器的上下文信息和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="cultureInfo">标识区域性特定信息，包括书写系统和使用的日历。</param>
      <param name="value">标识 <see cref="T:System.Object" /> 正在转换。</param>
      <param name="destinationType">数据类型的此实例 <see cref="T:System.Double" /> 要转换为。</param>
      <returns>一个新 <see cref="T:System.Object" /> 转换的值。</returns>
      <exception cref="T:System.ArgumentNullException">如果则会发生 <paramref name="value" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">如果则会发生 <paramref name="value" /> 不是 null 并且不是 <see cref="T:System.Windows.Media.Brush" />, ，或 <paramref name="destinationType" /> 无效。</exception>
    </member>
    <member name="M:System.Windows.Localization.GetAttributes(System.Object)">
      <summary>获取的值 <see cref="F:System.Windows.Localization.AttributesProperty" /> 从指定元素附加属性。</summary>
      <param name="element">一个 <see cref="T:System.Object" /> ，表示要检索其附加的属性的元素。</param>
      <returns>一个 <see cref="T:System.String" /> 值，该值表示本地化属性。</returns>
    </member>
    <member name="M:System.Windows.Localization.GetComments(System.Object)">
      <summary>获取的值 <see cref="F:System.Windows.Localization.CommentsProperty" /> 从指定元素附加属性。</summary>
      <param name="element">一个 <see cref="T:System.Object" /> ，表示要检索其附加的属性的元素。</param>
      <returns>一个 <see cref="T:System.String" /> 值，该值表示本地化注释。</returns>
    </member>
    <member name="M:System.Windows.Localization.SetAttributes(System.Object,System.String)">
      <summary>集 <see cref="F:System.Windows.Localization.AttributesProperty" /> 附加属性的指定元素。</summary>
      <param name="element">一个 <see cref="T:System.Object" /> ，表示要设置的附加的属性的元素。</param>
      <param name="attributes">一个 <see cref="T:System.String" /> ，它指定本地化属性。</param>
    </member>
    <member name="M:System.Windows.Localization.SetComments(System.Object,System.String)">
      <summary>集 <see cref="F:System.Windows.Localization.CommentsProperty" /> 附加到指定的元素的属性。</summary>
      <param name="element">一个 <see cref="T:System.Object" /> ，表示要设置的附加的属性的元素。</param>
      <param name="comments">一个 <see cref="T:System.String" /> ，它指定本地化注释。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
      <summary>尝试将请求的用户界面元素放入视图，并引发 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 以报告结果目标系统上的事件。</summary>
      <param name="current">要使其可见的 UI 元素。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
      <summary>尝试查找并返回具有指定的名称的对象。 搜索从指定的对象开始，并持续到逻辑树的子节点。</summary>
      <param name="logicalTreeNode">要从开始搜索的对象。 此对象必须是 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
      <param name="elementName">要查找的对象的名称。</param>
      <returns>找到具有匹配名称，如果一个对象;返回 null 如果逻辑树中不找到任何匹配的名称。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
      <summary>通过处理逻辑树返回指定的对象的即时子对象集合。</summary>
      <param name="current">要从中开始处理逻辑树的对象。 这预期为是 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
      <returns>来自指定对象逻辑树的即时子对象的可枚举集合。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
      <summary>返回指定的直接子对象的集合 <see cref="T:System.Windows.FrameworkContentElement" /> 通过处理逻辑树。</summary>
      <param name="current">要从中开始处理逻辑树的对象。</param>
      <returns>从逻辑树中 <paramref name="current" /> 开始的即时子对象的枚举集合。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
      <summary>通过处理逻辑树返回指定 <see cref="T:System.Windows.FrameworkElement" /> 的即时子对象集合。</summary>
      <param name="current">要从中开始处理逻辑树的对象。</param>
      <returns>从逻辑树中 <paramref name="current" /> 开始的即时子对象的枚举集合。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>通过处理逻辑树中返回指定对象的父对象。</summary>
      <param name="current">要查找的父对象的对象。 这预期可以是以下之一 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
      <returns>请求的父对象中。</returns>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>添加指定的事件处理程序，它在指定的源引发时调用 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <param name="handler">处理的委托 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>将提供的侦听器添加到的侦听器提供的源上的列表。</summary>
      <param name="source">与事件对象。</param>
      <param name="listener">要作为侦听器添加的对象。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.NewListenerList">
      <summary>返回一个新的对象，以包含侦听器 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</summary>
      <returns>新的对象，以包含侦听器 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</returns>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>从指定的源中删除指定的事件处理程序。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <param name="handler">处理的委托 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>从提供的源上的侦听器的列表中删除指定的侦听器。</summary>
      <param name="source">要从中移除侦听器的对象。</param>
      <param name="listener">要移除的侦听器。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
      <summary>开始侦听 <see cref="E:System.Windows.UIElement.LostFocus" /> 给定源上的事件附加到该源的内部类处理程序。</summary>
      <param name="source">在其上开始侦听相关对象 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
      <summary>停止侦听 <see cref="E:System.Windows.UIElement.LostFocus" /> 给定源上的事件。</summary>
      <param name="source">源对象在其上停止侦听 <see cref="E:System.Windows.UIElement.LostFocus" />。</param>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的对象是否可以转换为的一个实例 <see cref="T:System.Windows.ComponentResourceKey" />, ，使用指定的上下文。 始终返回 false。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="sourceType">计算用于转换类型。</param>
      <returns>在所有情况下均为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.ComponentResourceKey" /> 可以转换为指定的类型，使用指定的上下文。 始终返回 false。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="destinationType">计算用于转换类型。</param>
      <returns>在所有情况下均为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将转换指定的对象与 <see cref="T:System.Windows.ComponentResourceKey" />, ，使用指定的上下文。 在所有情况下，将引发异常。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <returns>在所有情况下，将引发异常。</returns>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换 <see cref="T:System.Windows.ComponentResourceKey" /> 到指定的类型，使用指定的上下文。 在所有情况下，将引发异常。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>在所有情况下，将引发异常。</returns>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 类型不是 <see cref="T:System.Windows.ComponentResourceKey" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的对象是否可以转换为的一个实例 <see cref="T:System.Windows.DependencyProperty" />。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="sourceType">计算用于转换类型。</param>
      <returns>true 如果该转换器能够执行该操作;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.DependencyProperty" /> 可以转换为指定的类型。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="destinationType">计算用于转换类型。</param>
      <returns>true 如果该转换器能够执行该操作;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将转换指定的对象与 <see cref="T:System.Windows.DependencyProperty" />, ，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="source">要转换的对象。</param>
      <returns>被转换的对象。 如果转换成功，这是 <see cref="T:System.Windows.DependencyProperty" />。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 不能转换。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="source" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换 <see cref="T:System.Windows.DependencyProperty" /> 到指定的类型，使用指定的上下文。 将始终引发异常。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换到的一种类型的对象 <see cref="T:System.Delegate" />。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，它表示您想要将从转换的类型。</param>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以将对象转换为指定的类型。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" /> ，它表示您想要将转换为的类型。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的字符串转换为一个新 <see cref="T:System.Delegate" /> 事件处理程序。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="source">要转换的源字符串。</param>
      <returns>一个新 <see cref="T:System.Delegate" /> ，表示被引用的事件处理程序。</returns>
      <exception cref="T:System.NotSupportedException">必需的服务不可用。- 或 -未能执行特定转换。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> 或 <paramref name="source" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的值对象转换为指定的类型。 将始终引发异常。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的值。</param>
      <param name="destinationType">
        <paramref name="value" /> 参数所要转换成的类型。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下引发。</exception>
    </member>
    <member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
      <summary>将附加事件资源库和编译内容中的模板上的事件。</summary>
      <param name="connectionId">事件布线用途唯一连接 ID。</param>
      <param name="target">针对事件布线的链接。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
      <summary>返回一个值，该值指示是否指定的类型的元素可以进行本地化，如果是这样，是否可以为内联格式。</summary>
      <param name="assembly">包含的程序集的全名 BAML 进行本地化。</param>
      <param name="className">您想要检索其本地化信息元素的完整类名称。</param>
      <returns>一个包含指定的程序集和元素的可本地化性信息的对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
      <summary>返回一个值，该值指示是否可以本地化的指定类型的元素指定的属性。</summary>
      <param name="assembly">包含的程序集的全名 BAML 进行本地化。</param>
      <param name="className">您想要检索其本地化信息元素的完整类名称。</param>
      <param name="property">您想要检索其本地化信息的属性的名称。</param>
      <returns>一个对象，指定是否以及如何可本地化属性。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
      <summary>返回包含指定的类的程序集的全名。</summary>
      <param name="className">完整类名中。</param>
      <returns>包含类的程序集全名。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
      <summary>返回的完整类名称 XAML 不中遇到的标记 BAML。</summary>
      <param name="formattingTag">标记的名称。</param>
      <returns>与标记关联的完整类名称。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 类，使用指定的可本地化值、 本地化注释、 资源类别、 本地化锁定状态和资源的可见性。</summary>
      <param name="content">可本地化值。</param>
      <param name="comments">用于本地化的注释。</param>
      <param name="category">资源字符串类别。</param>
      <param name="modifiable">true 如果该资源应可修改;否则为 false。</param>
      <param name="readable">true 如果出于翻译目的，因为它是可能在用户界面; 中的文本作为可读，资源应是可见否则为 false。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
      <summary>确定指定 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 对象是否等于此对象。</summary>
      <param name="other">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 对象测试相等性。</param>
      <returns>true 如果 <paramref name="other" /> 等于此对象; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
      <summary>返回表示此实例的整数哈希代码。</summary>
      <returns>整数哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 用提供的 Uid、 类名和属性名称。</summary>
      <param name="uid">具有可本地化资源的元素的 Uid。</param>
      <param name="className">中的可本地化资源的类名 binary XAML (BAML)。</param>
      <param name="propertyName">中的可本地化资源的属性名称 BAML。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
      <summary>比较对象的实例与 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 是否相等。</summary>
      <param name="other">要比较相等的对象。</param>
      <returns>如果两个实例相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>比较两个实例的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 是否相等。</summary>
      <param name="other">另一个实例的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 要比较是否相等。</param>
      <returns>如果两个实例相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
      <summary>返回表示此实例的整数哈希代码。</summary>
      <returns>整数哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
      <summary>添加带有提供的键和值的一项 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</summary>
      <param name="key">资源键。</param>
      <param name="value">一个包含资源的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">已存在具有相同键的项。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Clear">
      <summary>删除所有资源从 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>确定是否 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象包含具有指定键的资源。</summary>
      <param name="key">要查找的资源键。</param>
      <returns>true 如果 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象包含具有指定的资源键; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">关键是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>中的内容复制 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象传递给的一维数组 <see cref="T:System.Collections.DictionaryEntry" /> 对象，指定索引处开始。</summary>
      <param name="array">要保存的数据的对象数组。</param>
      <param name="arrayIndex">起始的索引值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> 超过目标数组长度。- 或 -副本不能容纳在其余数组空间之间 <paramref name="arrayIndex" /> 和目标数组长度。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的枚举数。</summary>
      <returns>一个专用 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator" /> ，可以循环访问字典的内容。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>移除指定的可本地化资源从 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</summary>
      <param name="key">要删除的资源键。</param>
      <exception cref="T:System.ArgumentNullException">关键是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个从零开始 <see cref="T:System.Array" /> 接收复制的项。</param>
      <param name="index">在指定的第一个位置 <see cref="T:System.Array" /> 以接收复制的内容。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />。</summary>
      <param name="key">要添加的元素的键。</param>
      <param name="value">要添加到 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的对象值。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />。</summary>
      <param name="key">要在字典中查找的键。</param>
      <returns>true 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的枚举器对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />。</summary>
      <param name="key">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
      <summary>移至集合中的下一个项。</summary>
      <returns>true 如果枚举数成功前移至下一个元素。 如果没有剩余的元素，此方法返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Reset">
      <summary>为其初始位置，即在集合中的第一个对象之前返回的枚举器。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 用指定的 BAML 源流的类。</summary>
      <param name="source">包含输入要本地化的 BAML 的文件流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 带有指定的可本地化性冲突解决程序和 BAML 源流的类。</summary>
      <param name="source">包含输入要本地化的 BAML 的文件流。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 的一个实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 类具有指定的可本地化性冲突解决程序，BAML 源流和 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="source">包含输入要本地化的 BAML 的文件流。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 的一个实例。</param>
      <param name="comments">读取此 BAML 输入与关联的本地化的 XML 注释。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
      <summary>BAML 流中提取所有可本地化的资源。</summary>
      <returns>可本地化的资源中的窗体的 BAML 流从一份 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件。</summary>
      <param name="e">所需的事件参数。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
      <summary>将资源更新应用于 BAML 源并更新后的版本写入指定的流以创建源 BAML 的本地化的版本。</summary>
      <param name="target">将收到更新的 BAML 流。</param>
      <param name="updates">要应用于源 BAML 资源更新。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 或 <paramref name="updates" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> 类具有指定的格式设置标记和可本地化性属性。</summary>
      <param name="formattingTag">格式设置的标记名称。 将一个非空值分配给此参数来指示内联格式设置。</param>
      <param name="attribute">关联的元素的可本地化性属性。</param>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> 类，使用提供的 XML 命名空间、 CLR 命名空间和程序集信息。</summary>
      <param name="xmlNamespace">XML 命名空间映射前缀。</param>
      <param name="assemblyName">包含的 CLR 命名空间和类型映射到 XML 命名空间的程序集。</param>
      <param name="clrNamespace">中包含相关的类型的程序集的 CLR 命名空间。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 - <paramref name="assemblyName" /> 为 null- 或 - <paramref name="clrNamespace" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ParserContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
      <summary>使用指定的 <see cref="T:System.Windows.Markup.ParserContext" /> 初始化 <see cref="T:System.Xml.XmlParserContext" /> 类的新实例。</summary>
      <param name="xmlParserContext">若要建立新的 XML 处理上下文 <see cref="T:System.Windows.Markup.ParserContext" /> 上。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlParserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
      <summary>将 XAML 转换 <see cref="T:System.Windows.Markup.ParserContext" /> 到 <see cref="T:System.Xml.XmlParserContext" />。</summary>
      <param name="parserContext">XAML 分析器上下文将转换为 <see cref="T:System.Xml.XmlParserContext" />。</param>
      <returns>转换后的 XML 分析器上下文。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
      <summary>将转换 <see cref="T:System.Windows.Markup.ParserContext" /> 到 <see cref="T:System.Xml.XmlParserContext" />。</summary>
      <param name="parserContext">要转换的上下文 <see cref="T:System.Xml.XmlParserContext" />。</param>
      <returns>XML 分析器上下文。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Markup.Primitives.MarkupWriter" /> 占用的资源。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
      <summary>创建的一个实例 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 从指定的对象。</summary>
      <param name="instance">一个对象，将序列化的树的根。</param>
      <returns>支持在对象树中导航的标记对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>创建的一个实例 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 从指定的对象和指定的序列化管理器。</summary>
      <param name="instance">一个对象，将序列化的树的根。</param>
      <param name="manager">序列化管理器。</param>
      <returns>支持在对象树中导航的标记对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 或 <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ResourceReferenceExpressionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示该转换器可以转换将源对象传递给从 ResourceReferenceExpression 对象。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示该转换器可以转换 ResourceReferenceExpression 对象传递给指定的目标类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定将值转换为 ResourceReferenceExpression 类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的对象。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的 ResourceReferenceExpression 对象转换为指定的类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>转换后的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 类型必须为 ResourceReferenceExpression。</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.RoutedEventConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的对象是否可以转换为的一个实例 <see cref="T:System.Windows.RoutedEvent" />。</summary>
      <param name="typeDescriptorContext">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="sourceType">计算用于转换类型。</param>
      <returns>true 如果该转换器能够执行该操作;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.RoutedEvent" /> 可以转换为指定的类型。</summary>
      <param name="typeDescriptorContext">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="destinationType">计算用于转换类型。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将转换指定的对象与 <see cref="T:System.Windows.RoutedEvent" /> 对象时，使用指定的上下文。</summary>
      <param name="typeDescriptorContext">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="cultureInfo">区域性特定信息。</param>
      <param name="source">要转换的对象。</param>
      <returns>转换结果。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 不是字符串或不能转换。</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换 <see cref="T:System.Windows.RoutedEvent" /> 为指定的类型。 在所有情况下，将引发异常。</summary>
      <param name="typeDescriptorContext">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="cultureInfo">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。 这不是保存的正常运行转换器路径...</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 或 <paramref name="destinationType" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.SetterTriggerConditionValueConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器是否可以将转换源对象中为端产生 <see cref="T:System.Windows.Setter" />, ，<see cref="T:System.Windows.Trigger" /> 或 <see cref="T:System.Windows.Condition" /> 。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示该转换器可以转换为指定的目标类型。 始终返回 false。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将已转换的源值的转换，如果可以从上下文获取基础类型转换器。 否则将返回未转换的源。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="source">要转换的对象。</param>
      <returns>转换器对象中，或者可能未转换的源。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="source" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">否 <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> 提供服务。</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的对象转换成指定的类型。 将始终引发异常。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.InvalidOperationException">在所有情况下引发。</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.TemplateKeyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定类型的对象是否可以转换为的一个实例 <see cref="T:System.Windows.TemplateKey" />。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="sourceType">计算用于转换类型。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定实例是否 <see cref="T:System.Windows.TemplateKey" /> 可以转换为指定的类型。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="destinationType">计算用于转换类型。</param>
      <returns>始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将指定的对象 (string) 转换到 <see cref="T:System.Windows.TemplateKey" />。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="source">要转换的对象。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 不能转换。</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换 <see cref="T:System.Windows.TemplateKey" /> 到指定的类型，使用指定的上下文。</summary>
      <param name="context">提供有关从中调用此转换器的环境的信息的一种格式上下文。</param>
      <param name="culture">区域性特定信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>将始终引发异常。</returns>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> 类的新实例。</summary>
      <param name="xmlWriter">要使用作为基础的 XML 编写器实现 <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlInstanceCreator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
      <summary>当在派生类中重写，创建一个新对象来存储分析器记录。</summary>
      <returns>创建的对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
      <param name="info">包含要序列化或反序列化对象所需的所有信息。</param>
      <param name="context">源和序列化流的目标。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类，使用指定的异常消息字符串。</summary>
      <param name="message">异常消息。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类，使用指定的异常消息字符串和内部异常。</summary>
      <param name="message">异常消息。</param>
      <param name="innerException">初始所发生的异常。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类中，使用指定的异常消息字符串、 与指定的行数和在一行中的位置。</summary>
      <param name="message">异常消息。</param>
      <param name="lineNumber">发生了异常行号。</param>
      <param name="linePosition">发生了异常的行中的位置。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类，使用指定的异常消息、 内部异常、 行号和行中的位置。</summary>
      <param name="message">异常消息。</param>
      <param name="lineNumber">发生了异常行号。</param>
      <param name="linePosition">发生了异常的行中的位置。</param>
      <param name="innerException">初始所发生的异常。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>获取所需进行序列化指定的对象填充指定的数据 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">要添加到序列化数据的序列化信息对象。</param>
      <param name="context">此序列化的目标。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.CancelAsync">
      <summary>中止当前的异步加载操作，如果没有挂起的异步加载操作。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext">
      <summary>返回 <see cref="T:System.Xaml.XamlSchemaContext" /> 对象，表示 WPF 架构上下文设置为 <see cref="T:System.Windows.Markup.XamlReader" />。</summary>
      <returns>一个 <see cref="T:System.Xaml.XamlSchemaContext" /> 对象，表示 WPF 架构上下文设置为 <see cref="T:System.Windows.Markup.XamlReader" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.IO.Stream" /> ，并返回 <see cref="T:System.Object" /> ，它是对应的对象树的根。</summary>
      <param name="stream">要加载流窗体中的 XAML。</param>
      <returns>创建的对象树的根处的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.IO.Stream" /> ，并返回一个对象，它对应的对象树的根。</summary>
      <param name="stream">包含输入要加载的 XAML 流。</param>
      <param name="parserContext">分析器使用的上下文信息。</param>
      <returns>创建的对象树的根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。- 或 -<paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)">
      <summary>读取通过所提供的 XAML 输入 <see cref="T:System.Xaml.XamlReader" /> ，并返回一个对象，它对应的对象树的根。</summary>
      <param name="reader">一个 <see cref="T:System.Xaml.XamlReader" /> 对象。 这需要使用输入 XAML 进行初始化。</param>
      <returns>创建的对象树的根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.Xml.XmlReader" /> ，并返回一个对象，它对应的对象树的根。</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> ，已加载的 XAML 输入加载以 XML 格式。</param>
      <returns>创建的对象树的根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.IO.Stream" /> 并返回相应的对象树的根。</summary>
      <param name="stream">包含的 XAML 输入要加载的流。</param>
      <returns>创建的对象树的根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">多个加载操作处于挂起状态对同一个 <see cref="T:System.Windows.Markup.XamlReader" />。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.IO.Stream" /> 并返回相应的对象树的根。</summary>
      <param name="stream">包含的 XAML 输入要加载的流。</param>
      <param name="parserContext">分析器使用的上下文信息。</param>
      <returns>创建的对象树的根。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">多个加载操作执行对同一个 <see cref="T:System.Windows.Markup.XamlReader" />。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
      <summary>读取中指定的 XAML 输入 <see cref="T:System.Xml.XmlReader" /> 并返回相应的对象树的根。</summary>
      <param name="reader">现有  <see cref="T:System.Xml.XmlReader" /> ，具有已加载/read 的 XAML 输入。</param>
      <returns>创建的对象树的根。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">多个加载操作执行对同一个 <see cref="T:System.Windows.Markup.XamlReader" />。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String)">
      <summary>读取指定的文本字符串中的 XAML 输入并返回对应的对象与指定标记的根。</summary>
      <param name="xamlText">输入 XAML 中，作为单个文本字符串。</param>
      <returns>创建的对象树的根。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)">
      <summary>读取指定的文本字符串中的 XAML 标记 (使用指定 <see cref="T:System.Windows.Markup.ParserContext" />) 并返回对应的对象与指定标记的根。</summary>
      <param name="xamlText">输入 XAML 中，作为单个文本字符串。</param>
      <param name="parserContext">分析器使用的上下文信息。</param>
      <returns>创建的对象树的根。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 通过指定一个程序集的字符串数组的类名 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应使用。</summary>
      <param name="assemblyNames">程序集名称的数组 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应使用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类，使用指定的程序集名称数组并指定的命名空间映射。</summary>
      <param name="assemblyNames">程序集名称的数组 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应使用。</param>
      <param name="namespaceMaps">命名空间映射大量 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应使用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
      <summary>定义 XML 命名空间和 CLR 命名空间之间的映射中的程序集，并将它们添加到 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 信息。</summary>
      <param name="xmlNamespace">XML 命名空间的前缀...</param>
      <param name="clrNamespace">包含要映射的类型的 CLR 命名空间。</param>
      <param name="assemblyName">包含的 CLR 命名空间的程序集。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 -<paramref name="clrNamespace" /> 为 null- 或 -<paramref name="assemblyName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
      <summary>请求权限 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 派生在完全信任才能访问特定的内部类型下调用的类型。</summary>
      <param name="type">要访问的类型。</param>
      <returns>true 如果可以访问内部类型;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
      <summary>获取 CLR <see cref="T:System.Type" /> 给定的 XAML 元素映射到，使用指定的 XML 命名空间前缀和元素名称。</summary>
      <param name="xmlNamespace">指定的 XML 命名空间前缀。</param>
      <param name="localName">要获取其映射的 XAML 元素的"本地"名称 <see cref="T:System.Type" /> 有关。 在此上下文中的本地意味着映射而非提供 <paramref name="xmlNamespace" />。</param>
      <returns>
        <see cref="T:System.Type" /> 对于对象，或 null 如果没有映射可被解析。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 -<paramref name="localName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
      <summary>指定在加载的程序集时要使用的路径。</summary>
      <param name="assemblyName">没有指定扩展名或路径的程序集的短名称 (等效于 <see cref="P:System.Reflection.AssemblyName.Name" />)。</param>
      <param name="assemblyPath">程序集的文件路径。 程序集路径必须是包含文件扩展名的完整文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> 为 null- 或 -<paramref name="assemblyPath" /> 为 null。</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">
        <paramref name="assemblyName" /> 为 <see cref="F:System.String.Empty" />- 或 -<paramref name="assemblyPath" /> 为 <see cref="F:System.String.Empty" />- 或 -<paramref name="assemblyPath" /> 不是完整文件路径包含文件扩展名。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
      <summary>返回序列化指定的对象和其属性的 XAML 字符串。</summary>
      <param name="obj">要进行序列化的元素。 通常情况下，这是页面或应用程序的根元素。</param>
      <returns>一个可写入到流或文件的 XAML 字符串。 属于所提供的所有元素的逻辑树 <paramref name="obj" /> 元素将被序列化。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未运行在完全信任环境中。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
      <summary>XAML 将信息保存到指定的流来序列化指定的对象及其属性。</summary>
      <param name="obj">要进行序列化的元素。 通常情况下，这是页面或应用程序的根元素。</param>
      <param name="stream">序列化的 XAML 信息的目标流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未运行在完全信任环境中。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
      <summary>将 XAML 信息保存为提供的源 <see cref="T:System.IO.TextWriter" /> 对象。 输出 <see cref="T:System.IO.TextWriter" /> 用于序列化所提供的对象及其属性。</summary>
      <param name="obj">要进行序列化的元素。 通常情况下，这是页面或应用程序的根元素。</param>
      <param name="writer">一个 <see cref="T:System.IO.TextWriter" /> 实例作为目标的序列化的 XAML 信息的写入位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="writer" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未运行在完全信任环境中。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>XAML 将信息保存到自定义序列化程序。 序列化程序的输出然后用于序列化所提供的对象及其属性。</summary>
      <param name="obj">要进行序列化的元素。 通常情况下，这是页面或应用程序的根元素。</param>
      <param name="manager">一个自定义序列化实现。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="manager" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未运行在完全信任环境中。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
      <summary>将 XAML 信息保存为提供的源 <see cref="T:System.Xml.XmlWriter" /> 对象。 输出 <see cref="T:System.Xml.XmlWriter" /> 用于序列化所提供的对象及其属性。</summary>
      <param name="obj">要进行序列化的元素。 通常情况下，这是页面或应用程序的根元素。</param>
      <param name="xmlWriter">用于序列化的 XAML 信息写入的编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="xmlWriter" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未运行在完全信任环境中。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性值。</summary>
      <param name="dependencyObject">要从中获取 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 属性的对象。</param>
      <returns>指定对象的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 属性的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要获取的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性值。</param>
      <returns>值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的指定对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要获取的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性值。</param>
      <returns>值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的指定对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
      <summary>获取的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要获取的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性值。</param>
      <returns>值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的指定对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
      <summary>设置的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要对其设置的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性。</param>
      <param name="value">要设置的字符串值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
      <summary>设置的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要对其设置的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 属性。</param>
      <param name="value">以字符串形式的 XML 命名空间定义。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
      <summary>设置的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要对其设置的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性。</param>
      <param name="value">xmlns 以字符串形式的字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
      <summary>设置的值 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的指定 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">要对其设置的对象 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性。</param>
      <param name="value">要用 XML 空格的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
      <summary>新实例初始化 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 通过使用指定的字典作为副本源的类。</summary>
      <param name="xmlnsDictionary">要作为新依据字典 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlnsDictionary" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
      <summary>将前缀 URI 对添加到此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">要添加的 XAML 命名空间前缀。</param>
      <param name="xmlNamespace">XAML 命名空间前缀的 URI 映射到。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 不是字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
      <summary>将前缀 URI 对添加到此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">此 XML 命名空间的前缀。</param>
      <param name="xmlNamespace">将映射到的 XML 命名空间 URI 前缀。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
      <summary>移除所有项从此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
      <summary>返回一个值，该值指示指定的前缀键是否在此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="key">要搜索的前缀键。</param>
      <returns>true 如果请求的前缀键在字典中;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
      <summary>将复制中的条目 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 到指定的数组。</summary>
      <param name="array">要复制到的表数据的数组。</param>
      <param name="index">中开始复制的目标数组的从零开始索引。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>将复制中的条目 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 到指定 <see cref="T:System.Collections.DictionaryEntry" /> 数组。</summary>
      <param name="array">要复制到的表数据的数组。</param>
      <param name="index">中开始复制的目标数组的从零开始索引。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
      <summary>查找对应于默认 XAML 命名空间的 XAML 命名空间。</summary>
      <returns>如果一个包含默认 XML 命名空间对应的命名空间存在;否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
      <summary>返回的字典枚举数循环访问此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <returns>此字典的字典枚举数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
      <summary>返回一个枚举数循环访问此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <returns>此字典的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespace(System.String)">
      <summary>检索 XAML 命名空间提供的前缀字符串。</summary>
      <param name="prefix">要检索的 XAML 命名空间的前缀。</param>
      <returns>请求的 XAML 命名空间 URI 中。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespacePrefixes">
      <summary>返回所有可能的前缀 XAML 命名空间的映射 (<see cref="T:System.Xaml.NamespaceDeclaration" /> 值)，是在活动架构上下文中可用。</summary>
      <returns>可枚举集 <see cref="T:System.Xaml.NamespaceDeclaration" /> 值。 若要获取的前缀字符串具体而言，获取 <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> 返回每个值的值。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
      <summary>返回的 XAML 命名空间 URI 对应于指定的 XML 命名空间前缀。</summary>
      <param name="prefix">要查找的 XAML 命名空间前缀。</param>
      <returns>XAML 命名空间 URI 对应于指定的前缀，如果它存在于此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />; 否则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
      <summary>返回到指定的 XAML 命名空间 URI 的相对应的前缀。</summary>
      <param name="xmlNamespace">XAML 命名空间 URI 以查找。</param>
      <returns>中的 XML 前缀，对应于给定的命名空间;否则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
      <summary>弹出的范围 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
      <summary>推送的范围 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
      <summary>移除指定的前缀中具有键的项 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">要移除的前缀键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
      <summary>移除指定的前缀中具有键的项 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">要移除的前缀键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Seal">
      <summary>锁定字典，以便它不能更改。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>使用指定的结束值初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>使用指定的结束值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。 </summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。 关键时间确定达到目标值的时间，同时也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 的新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用离散内插在上一个关键帧值和当前的关键帧值之间进行内插。</summary>
      <param name="baseValue">动画起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间的值，该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>使用指定的 <see cref="T:System.Windows.Thickness" /> 值初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">初始 <see cref="T:System.Windows.Thickness" /> 值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类与指定 <see cref="T:System.Windows.Thickness" /> 值和关键时间。</summary>
      <param name="value">初始 <see cref="T:System.Windows.Thickness" /> 值。</param>
      <param name="keyTime">初始的关键时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类与指定 <see cref="T:System.Windows.Thickness" /> 值、 key time、 和缓动函数。</summary>
      <param name="value">初始 <see cref="T:System.Windows.Thickness" /> 值。</param>
      <param name="keyTime">初始的关键时间。</param>
      <param name="easingFunction">缓动函数。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Freezable" /> 派生类的新实例。 在创建派生类时，必须重写此方法。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>根据使用以前的关键帧值和当前的关键帧，并使用提供的进度增量的值之间的缓动函数内, 插。</summary>
      <param name="baseValue"> 动画起始值。</param>
      <param name="keyFrameProgress"> 一个介于 0.0 和 1.0 之间的值（包含 0.0 和 1.0），该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>使用指定的结束值初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>使用指定的结束值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。 关键时间确定达到目标值的时间，同时也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 的新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用提供的进度增量，在上一个关键帧值和当前关键帧的值之间以线性方式内插。</summary>
      <param name="baseValue">动画起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间的值（包含 0.0 和 1.0），该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.PauseStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.RemoveStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ResumeStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
      <summary>返回一个值，该值指示是否 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 属性 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 应序列化。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 属性 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 应序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类，具有指定的结束值。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类，具有指定的结束值和关键时间。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。 关键时间确定达到目标值的时间，同时也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类与指定的结束值、 关键时间和 <see cref="T:System.Windows.Media.Animation.KeySpline" />。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。 关键时间确定达到目标值的时间，同时也是关键帧结束的时间。</param>
      <param name="keySpline">
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> 关键帧。<see cref="T:System.Windows.Media.Animation.KeySpline" /> 表示贝塞尔曲线，它定义的关键帧动画进度。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 的新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用样条内插可在前一个关键帧值和当前关键帧值之间进行切换。</summary>
      <param name="baseValue">动画起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间的值（包含 0.0 和 1.0），该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.StopStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="isControllable">如果情节提要可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们的目标并启动它们，使用指定 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们的目标并启动它们，使用指定 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 没有指定动画 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 应用于 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
      <param name="isControllable">声明是否可以控制动画 （可以暂停） 一次启动。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="isControllable">如果情节提要可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们在指定的模板内的目标并启动它们。</summary>
      <param name="containingObject">向其中的对象指定 <paramref name="frameworkTemplate" /> 已应用。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们在指定的模板内的目标并启动它们。</summary>
      <param name="containingObject">向其中的对象指定 <paramref name="frameworkTemplate" /> 已应用。  将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="isControllable">如果情节提要可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们在指定的模板内的目标并启动它们。</summary>
      <param name="containingObject">向其中的对象指定 <paramref name="frameworkTemplate" /> 已应用。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们在指定的模板内的目标并启动它们。</summary>
      <param name="containingObject">向其中的对象指定 <paramref name="frameworkTemplate" /> 已应用。 将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
      <param name="isControllable">如果情节提要可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>与此关联的动画应用 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 到它们的目标并启动它们，使用指定 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 没有指定动画 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 应用于 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</summary>
      <param name="containingObject">包含在与此情节提要的动画目标相同的名称范围内的对象。 没有指定动画 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 应用于 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新的动画的行为应使用与当前的任何动画进行交互。</param>
      <param name="isControllable">声明是否可以控制动画 （可以暂停） 一次启动。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Clone">
      <summary>创建的可修改复本 <see cref="T:System.Windows.Media.Animation.Storyboard" />, ，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true.，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 false</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</summary>
      <returns>新 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>当前全局速度，则为 0，如果该时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>当前全局速度，或 null 如果时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>当前全局速度，或 null 如果时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>在其当前的活动内，此时钟的当前迭代或 null 如果此时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>在其当前的活动内，此时钟的当前迭代或 null 如果此时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>在其当前的活动内，此时钟的当前迭代或 null 如果此时钟已停止。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>null 如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, ，或介于 0.0 如果此时钟处于活动状态并将其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 具有 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的 <see cref="P:System.Windows.Duration.Forever" />; 否则为介于 0.0 和 1.0，该值指示在其当前迭代中此时钟的当前进度。 值 0.0 表示没有进度，并且值为 1.0 指示的时钟是在其当前迭代的末尾。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>null 如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, ，或介于 0.0 如果此时钟处于活动状态并将其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 具有 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的 <see cref="P:System.Windows.Duration.Forever" />; 否则为介于 0.0 和 1.0，该值指示在其当前迭代中此时钟的当前进度。 值 0.0 表示没有进度，并且值为 1.0 指示的时钟是在其当前迭代的末尾。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>null 如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, ，或介于 0.0 如果此时钟处于活动状态并将其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 具有 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的 <see cref="P:System.Windows.Duration.Forever" />; 否则为介于 0.0 和 1.0，该值指示在其当前迭代中此时钟的当前进度。 值 0.0 表示没有进度，并且值为 1.0 指示的时钟是在其当前迭代的末尾。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>创建为此演示图板的时钟的当前状态 ︰ <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, ，<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, ，或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>创建为此演示图板的时钟的当前状态 ︰ <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, ，<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, ，或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>创建为此演示图板的时钟的当前状态 ︰ <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, ，<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, ，或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>null 如果此演示图板的时钟未 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; 否则为演示图板的时钟的当前时间。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>null 如果此演示图板的时钟未 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; 否则为演示图板的时钟的当前时间。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>null 如果此演示图板的时钟未 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; 否则为演示图板的时钟的当前时间。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
      <summary>检索一个值，该值指示是否 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 暂停; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
      <summary>检索一个值，该值指示是否 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>true 如果 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 暂停; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
      <summary>检索一个值，该值指示是否 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <returns>true 如果 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 暂停; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 指定的值 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
      <param name="element">要从中检索时间线 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />。</param>
      <returns>依赖项对象的目标 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 指定的值 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
      <param name="element">要从中检索时间线 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />。</param>
      <returns>所针对的依赖项对象的名称 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
      <summary>检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 指定的值 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
      <param name="element">要从其中获取的依赖项对象 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />。</param>
      <returns>针对的属性 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>暂停 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
      <summary>暂停 <see cref="T:System.Windows.Media.Animation.Clock" /> 指定 <see cref="T:System.Windows.FrameworkContentElement" /> 与此相关 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
      <summary>暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove">
      <summary>删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象 无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
      <summary>删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象 无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
      <summary>删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象 无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
      <summary>恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
      <summary>恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="offset">描述依据应向前或向后移动时间线的量的正数或负数的值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</summary>
      <param name="offset">描述依据应向前或向后移动时间线的量的正数或负数的值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</summary>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">从此处应用 <paramref name="offset" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
      <summary>设置的交互速度比 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <param name="speedRatio">大于零的有限值，该值为 storyboard 的新的交互式速比。 该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。 该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。 例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
      <summary>设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="speedRatio">大于零的有限值，该值为 storyboard 的新的交互式速比。 该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。 该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。 例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
      <summary>设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="speedRatio">大于零的有限值，该值为 storyboard 的新的交互式速比。 该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。 该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。 例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>使指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 依赖项对象为目标。</summary>
      <param name="element">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="value">目标的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
      <summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 面向具有指定名称的依赖属性。</summary>
      <param name="element">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="name">要面向的依赖对象的名称。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
      <summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目标成为指定的依赖属性。</summary>
      <param name="element">要与指定的依赖属性关联的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="path">描述要进行动画处理的依赖属性的路径。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
      <summary>将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
      <summary>将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
      <param name="containingObject">指定的对象时 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法被调用。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。 此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
      <summary> 新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 进行动画处理为指定的值指定的持续时间内的类。 动画的起始值是正在进行动画处理的属性的基值或来自另一个动画的输出。</summary>
      <param name="toValue">动画的目标值。</param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> 新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 进行动画处理为指定的值指定的持续时间内，并具有指定的填充行为的类。 动画的起始值是正在进行动画处理的属性的基值或来自另一个动画的输出。</summary>
      <param name="toValue">动画的目标值。</param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
      <param name="fillBehavior">指定动画不处于活动状态时的行为。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
      <summary> 新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 进行动画处理从指定的起始值为指定的目标值指定的持续时间内的类。</summary>
      <param name="fromValue">动画的起始值。</param>
      <param name="toValue">动画的目标值。</param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> 新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 进行动画处理从指定的起始值为指定的目标值指定的持续时间内，并具有指定的填充行为的类。</summary>
      <param name="fromValue">动画的起始值。</param>
      <param name="toValue">动画的目标值。</param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
      <param name="fillBehavior">指定动画不处于活动状态时的行为。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
      <summary>创建的可修改复本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />, ，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true.，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 的新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>计算一个值，表示正在进行动画处理的属性的当前值由 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" />。</summary>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>计算得出的属性值，该值由当前动画确定。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
      <summary>创建的可修改复本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" />, ，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true.，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>获取动画的当前值。</summary>
      <param name="defaultOriginValue">如果动画不具有其自己的起始值，则为动画提供原始值。</param>
      <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
      <param name="animationClock">动画将使用可以生成 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值的 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 来生成其输出值。</param>
      <returns>动画的当前值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>获取动画的当前值。</summary>
      <param name="defaultOriginValue">如果动画不具有其自己的起始值，则为动画提供原始值。</param>
      <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
      <param name="animationClock">动画将使用可以生成 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值的 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 来生成其输出值。</param>
      <returns>此动画的当前值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>计算一个值，该值表示正在进行动画处理的属性的当前值，并由主机动画确定。</summary>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成主机动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>此动画的当前值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>添加子级 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 至此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</summary>
      <param name="child">要添加为此子对象 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
      <exception cref="T:System.ArgumentException">该参数 <paramref name="child" /> 不是 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
      <summary>将文本字符串添加为此子 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</summary>
      <param name="childText">已添加到文本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
      <exception cref="T:System.InvalidOperationException">一个 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 不接受文本作为子级，因此此方法将引发此异常，除非在派生的类重写了允许文本要添加的行为。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
      <summary>创建的可修改复本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />, ，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true.，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>使该实例指定的深层副本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象的可修改复本，从而深度复制此对象的当前值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>使该实例指定的可修改的深层副本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 使用当前属性值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的新实例。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>使此实例的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象不可修改，或确定是否可使其成为不可修改...</summary>
      <param name="isChecking">若为 true，则检查此实例是否可以冻结；若为 false，则冻结此实例。</param>
      <returns>当 <paramref name="isChecking" /> 为 true 时，如果此实例可以成为只读，则此方法返回 true，如果无法成为只读，则返回 false。 当 <paramref name="isChecking" /> 为 false 时，如果此实例现在为只读，则此方法返回 true，如果它不能成为只读并且具有已开始更改此对象冻结状态的副作用，则返回 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>使此实例的指定克隆 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象。</summary>
      <param name="source">
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 要克隆的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>使该实例指定的冻结的复本 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
      <param name="source">要复制和冻结的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary> 计算一个值，表示由的此实例进行动画处理，该属性的当前值 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</summary>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成主机动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>计算得出的属性值，该值由当前实例确定。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>当 <see cref="T:System.Windows.Duration" /> 属性设置为 <see cref="P:System.Windows.Duration.Automatic" /> 时，提供自定义的自然 <see cref="T:System.Windows.Duration" />。</summary>
      <param name="clock">需要其自然持续时间的 <see cref="T:System.Windows.Media.Animation.Clock" />。</param>
      <returns>如果此动画最后一个关键帧为 <see cref="T:System.Windows.Media.Animation.KeyTime" />，则此值用作 <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />；否则它将为 1 秒。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
      <summary>调用时当前 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 修改对象。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>返回 true if 的值 <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> 的此实例的属性 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 应值序列化。</summary>
      <returns>如果应当序列化属性值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="child">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="childText">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类，该类具有指定的目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</summary>
      <param name="value">
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 新 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>新实例初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类，该类具有指定的目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 和 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />。</summary>
      <param name="value">
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 新 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例。</param>
      <param name="keyTime">
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 新 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
      <summary>返回特定关键帧在提供的进度增量处的内插值。</summary>
      <param name="baseValue">动画起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间的值（包含 0.0 和 1.0），该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="keyFrameProgress" /> 不在 0.0 和 1.0 之间（包含 0.0 和 1.0）时发生。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>在提供的进度增量处，计算一个关键帧的值。</summary>
      <param name="baseValue">动画起始值；通常为上一个关键帧的值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间的值（包含 0.0 和 1.0），该值指定此关键帧已经过去的时间的百分比。</param>
      <returns>给定了指定基值和进度时此关键帧的输出值。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>添加 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 到集合的末尾。</summary>
      <param name="keyFrame">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 将添加到集合的末尾。</param>
      <returns>要添加 <paramref name="keyFrame" /> 的位置处的索引。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clear">
      <summary>删除所有 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 来自集合的对象。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
      <summary>创建的可修改复本 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />, ，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true.，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>使该实例指定的深层副本 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>使该实例指定的可修改的深层副本 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 使用当前属性值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>获取一个值，该值指示集合是否包含指定 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</summary>
      <param name="keyFrame">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 要在集合中查找。</param>
      <returns>如果集合包含 <paramref name="keyFrame" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
      <summary>将所有的复制 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 到指定的数组集合中的对象。</summary>
      <param name="array">标识将内容复制到其中的数组。</param>
      <param name="index">将集合内容复制到其中的数组中的索引位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
      <summary>创建一个新的、 已冻结实例 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</summary>
      <returns>已冻结的实例 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>使此实例的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 只读的或确定是否可以使其成为只读的。</summary>
      <param name="isChecking">若为 true，则检查此实例是否可以冻结；若为 false，则冻结此实例。</param>
      <returns>当 <paramref name="isChecking" /> 为 true 时，如果此实例可以成为只读，则此方法返回 true，如果无法成为只读，则返回 false。 当 <paramref name="isChecking" /> 为 false 时，如果此实例现在为只读，则此方法返回 true，如果它不能成为只读并且具有已开始更改此对象冻结状态的副作用，则返回 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>使此实例的指定克隆 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 对象。</summary>
      <param name="sourceFreezable">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 要克隆的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>使该实例指定的可修改的深层副本 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 使用当前属性值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
      <summary> 返回一个可循环访问集合的枚举数。</summary>
      <returns>可以循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary> 搜索指定 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 并返回整个集合中的第一个匹配项的从零开始索引。</summary>
      <param name="keyFrame">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 要在集合中查找。</param>
      <returns>如果在整个集合中找到 <paramref name="keyFrame" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>将插入 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 在集合中的特定位置。</summary>
      <param name="index">索引位置 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 插入。</param>
      <param name="keyFrame">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 要插入集合中对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>删除 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 来自集合对象。</summary>
      <param name="keyFrame">标识 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 若要从集合中移除。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 从集合中的指定的索引位置。</summary>
      <param name="index">索引位置 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 要删除。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>从特定的 <see cref="T:System.Collections.ICollection" /> 索引处开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Collections.IList" /> 中。</summary>
      <param name="keyFrame">要添加到 <see cref="T:System.Collections.IList" /> 的对象。</param>
      <returns>插入了新元素的位置，-1 指示该项未插入到集合中。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</summary>
      <param name="keyFrame">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</param>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <param name="keyFrame">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在 <see cref="T:System.Collections.IList" /> 中的指定索引处插入一个项。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="keyFrame">要插入到 <see cref="T:System.Collections.IList" /> 中的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="keyFrame">要从 <see cref="T:System.Collections.IList" /> 中删除的对象。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextFormattingMode(System.Windows.DependencyObject)">
      <summary>获取 <see cref="T:System.Windows.Media.TextFormattingMode" /> 对于指定的元素。</summary>
      <param name="element">要获取的元素 <see cref="T:System.Windows.Media.TextFormattingMode" /> 有关。</param>
      <returns>
        <see cref="T:System.Windows.Media.TextFormattingMode" /> 为 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.DependencyObject)">
      <summary>获取 <see cref="T:System.Windows.Media.TextHintingMode" /> 对于指定的元素。</summary>
      <param name="element">要获取的元素 <see cref="T:System.Windows.Media.TextHintingMode" />  有关。</param>
      <returns>
        <see cref="T:System.Windows.Media.TextHintingMode" /> 为 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextRenderingMode(System.Windows.DependencyObject)">
      <summary>获取 <see cref="T:System.Windows.Media.TextRenderingMode" /> 对于指定的元素。</summary>
      <param name="element">要获取的元素 <see cref="T:System.Windows.Media.TextRenderingMode" /> 有关。</param>
      <returns>
        <see cref="T:System.Windows.Media.TextRenderingMode" /> 为 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextFormattingMode(System.Windows.DependencyObject,System.Windows.Media.TextFormattingMode)">
      <summary>集 <see cref="T:System.Windows.Media.TextFormattingMode" /> 对于指定的元素。</summary>
      <param name="element">要设置的元素 <see cref="T:System.Windows.Media.TextFormattingMode" /> 有关。</param>
      <param name="value">
        <see cref="T:System.Windows.Media.TextFormattingMode" /> 开启 <paramref name="element" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.DependencyObject,System.Windows.Media.TextHintingMode)">
      <summary>集 <see cref="T:System.Windows.Media.TextHintingMode" /> 对于指定的元素。</summary>
      <param name="element">要设置的元素 <see cref="T:System.Windows.Media.TextHintingMode" /> 有关。</param>
      <param name="value">
        <see cref="T:System.Windows.Media.TextHintingMode" /> 开启 <paramref name="element" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextRenderingMode(System.Windows.DependencyObject,System.Windows.Media.TextRenderingMode)">
      <summary>集 <see cref="T:System.Windows.Media.TextRenderingMode" /> 对于指定的元素。</summary>
      <param name="element">要设置的元素 <see cref="T:System.Windows.Media.TextRenderingMode" /> 有关。</param>
      <param name="value">
        <see cref="T:System.Windows.Media.TextRenderingMode" /> 开启 <paramref name="element" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>显示一个消息框具有一条消息，并且它返回的结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String)">
      <summary>显示具有消息和标题栏标题; 一个消息框它返回的结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>显示具有消息、 标题栏标题和按钮，则一个消息框它返回的结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>显示具有消息、 标题栏标题、 按钮和图标; 一个消息框它返回的结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>显示具有消息、 标题栏标题、 按钮和图标; 一个消息框并且，接受默认消息框的结果并返回一个结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <param name="defaultResult">一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定消息框的默认结果。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>显示具有消息、 标题栏标题、 按钮和图标; 一个消息框并且，接受默认消息框的结果，符合指定的选项，并返回一个结果。</summary>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <param name="defaultResult">一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定消息框的默认结果。</param>
      <param name="options">一个 <see cref="T:System.Windows.MessageBoxOptions" /> 值对象，用于指定的选项。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)">
      <summary>前面显示一个消息框在指定的时段。 消息框中显示一条消息，并返回一个结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)">
      <summary>前面显示一个消息框在指定的时段。 该消息框显示消息和标题栏标题;它将返回结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>前面显示一个消息框在指定的时段。 该消息框显示消息、 标题栏标题和按钮;它也会返回一个结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>前面显示一个消息框在指定的时段。 该消息框显示消息、 标题栏标题、 按钮和图标;它也会返回一个结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>前面显示一个消息框在指定的时段。 该消息框显示消息、 标题栏标题、 按钮和图标;接受默认消息框的结果并返回一个结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <param name="defaultResult">一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定消息框的默认结果。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>前面显示一个消息框在指定的时段。 该消息框显示消息、 标题栏标题、 按钮和图标;接受默认消息框的结果，符合指定的选项，并返回一个结果。</summary>
      <param name="owner">一个 <see cref="T:System.Windows.Window" /> ，它表示该消息框的所有者窗口。</param>
      <param name="messageBoxText">一个 <see cref="T:System.String" /> ，它指定要显示的文本。</param>
      <param name="caption">一个 <see cref="T:System.String" /> ，它指定要显示的标题栏标题。</param>
      <param name="button">一个 <see cref="T:System.Windows.MessageBoxButton" /> 值，该值指定哪个按钮或要显示的按钮。</param>
      <param name="icon">一个 <see cref="T:System.Windows.MessageBoxImage" /> 值，该值指定要显示的图标。</param>
      <param name="defaultResult">一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定消息框的默认结果。</param>
      <param name="options">一个 <see cref="T:System.Windows.MessageBoxOptions" /> 值对象，用于指定的选项。</param>
      <returns>一个 <see cref="T:System.Windows.MessageBoxResult" /> 值，该值指定在用户单击哪个消息框按钮。</returns>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.MultiDataTrigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.MultiTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.MultiTrigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.CustomContentState" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
      <summary>调用以导航时，重新应用对内容的状态。</summary>
      <param name="navigationService">
        <see cref="T:System.Windows.Navigation.NavigationService" /> 归负责对此进行内容导航器 <see cref="T:System.Windows.Navigation.CustomContentState" /> 正在应用。</param>
      <param name="mode">一个 <see cref="T:System.Windows.Navigation.NavigationMode" /> ，它指定如何向其内容 <see cref="T:System.Windows.Navigation.CustomContentState" /> 是在应用了导航到。</param>
    </member>
    <member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
      <summary>返回要与导航历史记录中的内容相关联的自定义状态类的实例。</summary>
      <returns>自定义的一个实例 <see cref="T:System.Windows.Navigation.CustomContentState" /> 是要与导航历史记录中的内容相关联的类。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntry" /> 类的新实例。</summary>
      <param name="info">序列化信息。</param>
      <param name="context">流上下文。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
      <summary>返回指定元素的日记条目的附加属性 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />。</summary>
      <param name="dependencyObject">从中获取附加属性值的元素。</param>
      <returns>指定元素的日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
      <summary>设置指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
      <param name="dependencyObject">从中获取附加属性值的元素。</param>
      <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>此对象进行序列化时调用。</summary>
      <param name="info">序列化目标对象所需的数据。</param>
      <param name="context">流上下文。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
      <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
      <param name="keepAlive">若要将日记条目保留在内存中，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
      <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
      <param name="name">要分配给附加属性的名称。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
      <summary>此类型或成员支持 Microsoft .NET 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value">绑定源生成的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetType">绑定源属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>合并两个导航历史记录堆栈。</summary>
      <param name="values">两个导航堆栈的数组。</param>
      <param name="targetType">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 可用来枚举导航历史记录堆栈的合并的列表，如果未传递的导航堆栈 null。null, 否则为。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>未实现。</summary>
      <param name="value">未使用此参数。</param>
      <param name="targetTypes">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
      <returns>始终返回 <see cref="F:System.Windows.Data.Binding.DoNothing" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
      <summary>获取指定的元素的 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性。</summary>
      <param name="element">从中获取附加属性值的元素。</param>
      <returns>指定元素的日记条目的 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性的值。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
      <summary>设置指定元素的 <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty" /> 附加属性。</summary>
      <param name="element">要在其上设置附加属性值的元素。</param>
      <param name="position">
        <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> 对象的位置。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>将添加一个条目，以后退导航历史记录，其中包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
      <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，表示与特定部分内容相关联的应用程序定义的状态。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 是 null, ，和一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象不从返回 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
      <summary>获取对 <see cref="T:System.Windows.Navigation.NavigationService" /> 的内容中包含指定对导航器 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <param name="dependencyObject">
        <see cref="T:System.Windows.DependencyObject" /> 的导航器承载的内容中。</param>
      <returns>对引用 <see cref="T:System.Windows.Navigation.NavigationService" /> 的内容中包含指定对导航器 <see cref="T:System.Windows.DependencyObject" />; 可以是 null 在某些情况下 （请参见备注）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>如果有的话，导航到最新的条目到底层导航历史记录。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> 后退导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>如果存在，请导航到前进导航历史记录中的最新条目。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> 前进导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
      <summary>异步导航到包含在某个对象的内容。</summary>
      <param name="root">一个包含要导航到的内容的对象。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
      <summary>异步导航到一个对象，包含的内容并将传递一个对象，包含用于在导航过程处理数据。</summary>
      <param name="root">一个包含要导航到的内容的对象。</param>
      <param name="navigationState">一个包含要用于在导航过程处理数据的对象。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>异步导航到由指定的内容 uniform resource identifier (URI)。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
      <summary>异步导航到位于源内容 uniform resource identifier (URI), ，并传递一个对象，其中包含用于在导航过程处理数据。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <param name="navigationState">一个包含要用于在导航过程处理数据的对象。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
      <summary>异步导航到位于源内容 uniform resource identifier (URI), ，传递一个对象，包含用于处理在导航栏中和沙盒内容导航状态。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <param name="navigationState">一个包含要用于在导航过程处理数据的对象。</param>
      <param name="sandboxExternalContent">将内容下载到部分信任安全沙盒 (使用默认的 Internet 区域的权限集，如果 true。 默认值为 false。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>重新加载当前的内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
      <summary>移除后的历史记录中的最新的日志条目。</summary>
      <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> 中如果有一个后退导航历史记录。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>将停止进一步下载当前导航请求的内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>将添加一个条目，以后退导航历史记录，其中包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
      <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，表示与特定部分内容相关联的应用程序定义的状态。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 是 null, ，和一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象不从返回 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
      <exception cref="T:System.InvalidOperationException">当调用此方法。 这可以防止内容添加到 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 使用 XAML。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
      <summary>将文本添加到该对象。</summary>
      <param name="text">要添加到对象的文本。</param>
      <exception cref="T:System.ArgumentException">如果文本参数值包含非空白字符。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
      <summary>导航到底层的最新项导航历史记录。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" /> 后退导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
      <summary>导航到前进导航历史记录中的最新项。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" /> 前进导航历史记录中没有任何条目时调用。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
      <summary>异步导航到包含在某个对象的内容。</summary>
      <param name="content">
        <see cref="T:System.Object" /> ，包含要导航到的内容。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
      <summary>异步导航到包含在某个对象，并传递一个对象，其中包含要使用的数据导航期间处理的内容。</summary>
      <param name="content">
        <see cref="T:System.Object" /> ，包含要导航到的内容。</param>
      <param name="extraData">一个 <see cref="T:System.Object" /> ，其中包含用于在导航过程处理数据。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
      <summary>异步导航到由指定的内容 uniform resource identifier (URI)。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
      <summary>异步导航到位于源内容 uniform resource identifier (URI), ，并传递一个对象，其中包含用于在导航过程处理数据。</summary>
      <param name="source">一个 <see cref="T:System.Uri" /> 初始化对象， URI 所需内容。</param>
      <param name="extraData">一个 <see cref="T:System.Object" /> ，其中包含用于在导航过程处理数据。</param>
      <returns>true 如果未取消导航;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
      <summary>创建可视化树的模板生成时调用。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closed" /> 事件。</summary>
      <param name="args">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
      <summary>重新加载当前的内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
      <summary>移除后的历史记录中的最新的日志条目。</summary>
      <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> 中如果有一个后退导航历史记录。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
      <summary>指示是否应保持 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.StopLoading">
      <summary>将停止进一步下载当前导航请求的内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
      <summary>一个 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 调用 <see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})" /> 以返回到调用方，并通过返回值传递 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 对象</summary>
      <param name="e">一个 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 对象，其中包含 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回值 (<see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result" />)。</param>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
      <summary>新实例初始化 <see cref="T:System.Windows.Navigation.PageFunctionBase" /> 类型。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.Start">
      <summary>重写此方法以初始化 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 当导航到第一次。</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> 类的新实例。 此构造函数受保护。</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> 类 uniform resource identifier (URI) 和目标名称。</summary>
      <param name="uri">目标 URI。</param>
      <param name="target">目标名称。</param>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>调用来自指定发件人指定的事件处理程序。</summary>
      <param name="genericHandler">该处理程序的名称。</param>
      <param name="genericTarget">引发事件的对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
      <summary>新实例初始化 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 的返回值的类。</summary>
      <param name="result">要返回的值。</param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary> 新实例初始化 <see cref="T:System.Windows.NullableBoolConverter" />  类。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回的标准值适用于此类型转换器的数据类型的集合。</summary>
      <param name="context">提供有关组件，如其容器和属性描述符的上下文信息。</param>
      <returns>保存标准有效值的集合。 对于此实现，因此这些值是 true, ，false, ，和 null。</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回从 <see cref="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的标准值的集合是否为独占列表。</summary>
      <param name="context">提供有关组件，如其容器和属性描述符的上下文信息。</param>
      <returns>此实现始终返回 true。</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回此对象是否支持可以从列表中选取的标准值集。</summary>
      <param name="context">提供有关组件，如其容器和属性描述符的上下文信息。</param>
      <returns>此实现始终返回 true。</returns>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.PropertyPath" /> 类的新实例。</summary>
      <param name="parameter">属性路径，它描述的路径 公共语言运行时 (CLR) 属性或依赖项属性。</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>新实例初始化 <see cref="T:System.Windows.PropertyPath" /> 类，使用提供的路径令牌字符串和参数。</summary>
      <param name="path">一个字符串，指定 <see cref="P:System.Windows.PropertyPath.Path" />, ，已标记化格式。</param>
      <param name="pathParameters">设置对象的数组 <see cref="P:System.Windows.PropertyPath.PathParameters" />。</param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.PropertyPathConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换到的一种类型的对象 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，它表示您想要将从转换的类型。</param>
      <returns>true 如果 <paramref name="sourceType" /> 是类型 <see cref="T:System.String" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换为对象 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" /> ，它表示您想要将转换为的类型。</param>
      <returns>true 如果 <paramref name="destinationType" /> 是类型 <see cref="T:System.String" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定将值转换为 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="source">对象将转换为 <see cref="T:System.Windows.PropertyPath" />。 这应是字符串。</param>
      <returns>转换后 <see cref="T:System.Windows.PropertyPath" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 作为提供 null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 不 null, ，但不是所需 <see cref="T:System.String" /> 类型。</exception>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的值转换为 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="cultureInfo">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的 <see cref="T:System.Windows.PropertyPath" />。</param>
      <param name="destinationType">目标类型。 这应为 <see cref="T:System.String" /> 类型。</param>
      <returns>已转换的目标 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 作为提供 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不 null, ，但不是所需 <see cref="T:System.Windows.PropertyPath" /> 类型。- 或 -<paramref name="destinationType" /> 不 <see cref="T:System.String" /> 类型。</exception>
    </member>
    <member name="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>特定于类型的方式，可能会增加事件系统效率调用事件处理程序。</summary>
      <param name="genericHandler">调用类型特定的方式的一般处理程序。</param>
      <param name="genericTarget">要在调用处理程序的目标。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ResourceDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>将按的键的资源添加到此 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <param name="key">要添加的键的名称。</param>
      <param name="value">要添加的资源的值。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> 被锁定或只读的。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Collections.Hashtable" /> 中已存在具有相同键的元素。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.BeginInit">
      <summary>开始初始化阶段 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <exception cref="T:System.InvalidOperationException">调用 <see cref="M:System.Windows.ResourceDictionary.BeginInit" /> 前多次 <see cref="M:System.Windows.ResourceDictionary.EndInit" /> 调用。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>在基类中清除所有项 （和值） <see cref="T:System.Windows.ResourceDictionary" />。 这并不会清除任何合并的字典项。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>确定是否 <see cref="T:System.Windows.ResourceDictionary" /> 包含带有指定键的元素。</summary>
      <param name="key">要在 <see cref="T:System.Windows.ResourceDictionary" /> 中定位的键。</param>
      <returns>true 如果 <see cref="T:System.Windows.ResourceDictionary" /> 包含具有指定的键 / 值对键; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>副本 <see cref="T:System.Windows.ResourceDictionary" /> 元素到一维 <see cref="T:System.Collections.DictionaryEntry" /> 中指定索引处。</summary>
      <param name="array">目标的一维数组 <see cref="T:System.Collections.DictionaryEntry" /> 从复制对象 <see cref="T:System.Windows.ResourceDictionary" /> 实例。 该数组的索引必须从零开始。</param>
      <param name="arrayIndex">从零开始的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.EndInit">
      <summary>结束初始化阶段，并使以前的树，以便对所有更改密钥的初始化阶段可以得到都解决。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.FindName(System.String)">
      <summary>不支持此字典实现。</summary>
      <param name="name">发出请求的对象的名称标识符。</param>
      <returns>始终返回 null。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IDictionaryEnumerator" /> 可用于循环访问 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <returns>专用化的枚举器 <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
      <summary>发生时 <see cref="T:System.Windows.ResourceDictionary" /> 接收对资源的请求。</summary>
      <param name="key">要获取的资源的键。</param>
      <param name="value">所请求资源的值。</param>
      <param name="canCache">true 如果可以保存该资源，并且将其用于更高版本;否则为 false。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
      <summary>不支持此字典实现。</summary>
      <param name="name">请参阅“备注”。</param>
      <param name="scopedElement">请参阅“备注”。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下调用此方法。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>从基字典中移除具有指定键项。</summary>
      <param name="key">要移除的项的键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> 被锁定或只读的。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个从零开始 <see cref="T:System.Array" /> 接收复制的项从 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</param>
      <param name="arrayIndex">在指定的第一个位置 <see cref="T:System.Array" /> 以接收复制的内容。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
      <summary>不支持此字典实现。</summary>
      <param name="name">请参阅备注</param>
    </member>
    <member name="M:System.Windows.ResourceKey.#ctor">
      <summary> 初始化派生类的新实例 <see cref="T:System.Windows.ResourceKey" />。</summary>
    </member>
    <member name="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)">
      <summary>返回此 <see cref="T:System.Windows.ResourceKey" />。 此类的实例通常用作字典中键。</summary>
      <param name="serviceProvider">服务实现，提供所需的值。</param>
      <returns>调用此方法始终返回该实例本身。</returns>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的序列化信息和流上下文初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类的新实例。</summary>
      <param name="info">序列化过程中的特定信息。</param>
      <param name="context">在异常发生时处的上下文。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.String,System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类，具有指定的错误消息和资源键。</summary>
      <param name="message">可能的描述性消息。</param>
      <param name="resourceKey">找不到键。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>向调试器或对话框报告该异常的详细信息。</summary>
      <param name="info">序列化过程中的特定信息。</param>
      <param name="context">在异常发生时处的上下文。</param>
    </member>
    <member name="M:System.Windows.Resources.ContentTypes.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Resources.ContentTypes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 类基于提供的流。</summary>
      <param name="stream">引用流。</param>
      <param name="contentType">Multipurpose Internet Mail Extensions (MIME)  内容流的类型。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>新实例初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 类，提供的旧的和新值。</summary>
      <param name="oldValue">之前引发的事件的属性的以前值。</param>
      <param name="newValue">该事件时的属性的当前值。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)">
      <summary>新实例初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 类，具有提供的旧的和新值和事件标识符。</summary>
      <param name="oldValue">之前引发的事件的属性的以前值。</param>
      <param name="newValue">该事件时的属性的当前值。</param>
      <param name="routedEvent">此参数类带有其信息的路由事件的标识符。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>特定于类型的方式，可能会增加事件系统效率调用事件处理程序。</summary>
      <param name="genericHandler">调用类型特定的方式的一般处理程序。</param>
      <param name="genericTarget">要在调用处理程序的目标。</param>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Setter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.Setter" /> 类具有指定的属性和值。</summary>
      <param name="property">
        <see cref="T:System.Windows.DependencyProperty" /> 应用 <see cref="P:System.Windows.Setter.Value" /> 到。</param>
      <param name="value">要应用于此属性的值。</param>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Setter" /> 类，具有指定的属性、 值和目标名称。</summary>
      <param name="property">
        <see cref="T:System.Windows.DependencyProperty" /> 应用 <see cref="P:System.Windows.Setter.Value" /> 到。</param>
      <param name="value">要应用于此属性的值。</param>
      <param name="targetName">子节点的名称这 <see cref="T:System.Windows.Setter" /> 旨在用于。</param>
    </member>
    <member name="M:System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理标记扩展提供一个值的属性的情况 <see cref="T:System.Windows.Setter" /> 对象。</summary>
      <param name="targetObject">标记扩展在其中设置值的对象。</param>
      <param name="eventArgs">适用于标记扩展处理的数据。</param>
    </member>
    <member name="M:System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理的类型转换器提供一个值的属性的情况 <see cref="T:System.Windows.Setter" /> 对象。</summary>
      <param name="targetObject">其中的类型转换器设置值的对象。</param>
      <param name="eventArgs">适用于类型转换器处理的数据。</param>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.SetterBase.CheckSealed">
      <summary>检查此对象是否是只读的并且不能更改。</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.SetterBaseCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Ellipse" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Line" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Path" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Polygon" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Polyline" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Rectangle" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Shape" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Shapes.Shape" /> 通过评估来评估其 <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry" /> 和 <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 属性。</summary>
      <param name="finalSize">最终计算大小 <see cref="T:System.Windows.Shapes.Shape" />。</param>
      <returns>排列的最终大小 <see cref="T:System.Windows.Shapes.Shape" /> 元素。</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
      <summary>度量值 <see cref="T:System.Windows.Shapes.Shape" /> 在第一布局过程传递排列之前。</summary>
      <param name="constraint">最多 <see cref="T:System.Windows.Size" /> 为不超过。</param>
      <returns>最大值 <see cref="T:System.Windows.Size" /> 为 <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
      <summary>提供了一种更改的默认外观 <see cref="T:System.Windows.Shapes.Shape" /> 元素。</summary>
      <param name="drawingContext">一个 <see cref="T:System.Windows.Media.DrawingContext" /> 对象，它在此呈现阶段绘制 <see cref="T:System.Windows.Shapes.Shape" />。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem},System.Collections.Generic.IList{System.Windows.Shell.JumpItemRejectionReason})">
      <summary>新实例初始化 <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> 类，该类具有指定的参数。</summary>
      <param name="rejectedItems">无法通过 Windows 外壳程序添加到跳转列表的跳转列表项的列表。</param>
      <param name="reasons">无法将被拒绝的跳转列表项添加到跳转列表的原因的列表。</param>
      <exception cref="T:System.ArgumentException">计数 <paramref name="rejectedItems " />不等于遭到拒绝的计数 <paramref name="reasons" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem})">
      <summary>新实例初始化 <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> 类，该类具有指定的参数。</summary>
      <param name="removedItems">已移除由用户自以来的跳转列表项的列表 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 上一次调用。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
      <param name="items">集合 <see cref="T:System.Windows.Shell.JumpItem" /> 跳转列表中显示的对象。</param>
      <param name="showFrequent">一个值，该值指示是否跳转列表中显示经常使用的项目。</param>
      <param name="showRecent">一个值，该值指示是否跳转列表中显示最近使用的项。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
      <summary>将添加到指定的项路径 最近 跳转列表类别中的。</summary>
      <param name="itemPath">要添加到跳转列表的路径。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
      <summary>添加到所指定的跳转路径 最近 跳转列表类别中的。</summary>
      <param name="jumpPath">
        <see cref="T:System.Windows.Shell.JumpPath" /> 将添加到跳转列表。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
      <summary>添加到指定的跳转任务 最近 跳转列表类别中的。</summary>
      <param name="jumpTask">
        <see cref="T:System.Windows.Shell.JumpTask" /> 将添加到跳转列表。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.Apply">
      <summary>将发送 <see cref="T:System.Windows.Shell.JumpList" /> 的 Windows shell 中其当前状态。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Shell.JumpList" /> 未完全初始化。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.BeginInit">
      <summary>表示开始 <see cref="T:System.Windows.Shell.JumpList" /> 初始化。</summary>
      <exception cref="T:System.InvalidOperationException">此调用 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 嵌套在以前调用 <see cref="M:System.Windows.Shell.JumpList.BeginInit" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.EndInit">
      <summary>结束的信号 <see cref="T:System.Windows.Shell.JumpList" /> 初始化。</summary>
      <exception cref="T:System.NotSupportedException">此调用 <see cref="M:System.Windows.Shell.JumpList.EndInit" /> 未配对通过调用 <see cref="M:System.Windows.Shell.JumpList.BeginInit" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
      <summary>返回 <see cref="T:System.Windows.Shell.JumpList" /> 与应用程序关联的对象。</summary>
      <param name="application">关联的应用程序 <see cref="T:System.Windows.Shell.JumpList" />。</param>
      <returns>
        <see cref="T:System.Windows.Shell.JumpList" /> 与指定的应用程序相关联的对象。</returns>
    </member>
    <member name="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
      <summary>集 <see cref="T:System.Windows.Shell.JumpList" /> 与应用程序关联的对象。</summary>
      <param name="application">关联的应用程序 <see cref="T:System.Windows.Shell.JumpList" />。</param>
      <param name="value">
        <see cref="T:System.Windows.Shell.JumpList" /> 将与该应用程序相关联。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpPath.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpPath" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpTask.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpTask" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.TaskbarItemInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.ThumbButtonInfoCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.CreateInstanceCore">
      <summary>创建集合的新实例。</summary>
      <returns>集合中的新实例。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.WindowChrome" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Shell.WindowChrome" /> 类的新实例。</summary>
      <returns>此类的新实例。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)">
      <summary>获取的值 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 从指定的输入元素附加属性。</summary>
      <param name="inputElement">从其读取的属性值的输入的元素。</param>
      <returns>值 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)">
      <summary>获取的值 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 从指定的输入元素附加属性。</summary>
      <param name="inputElement">从其读取的属性值的输入的元素。</param>
      <returns>值 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)">
      <summary>获取的值 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 从指定附加属性 <see cref="T:System.Windows.Window" />。</summary>
      <param name="window">
        <see cref="T:System.Windows.Window" /> 从中进行读取的属性值。</param>
      <returns>实例 <see cref="T:System.Windows.Shell.WindowChrome" /> ，它是附加到指定 <see cref="T:System.Windows.Window" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)">
      <summary>设置的值 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加指定的输入元素的属性。</summary>
      <param name="inputElement">要对其设置的元素 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性。</param>
      <param name="hitTestVisible">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)">
      <summary>设置的值 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加指定的输入元素的属性。</summary>
      <param name="inputElement">要对其设置的元素 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性。</param>
      <param name="direction">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)">
      <summary>设置的值 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 附加属性指定 <see cref="T:System.Windows.Window" />。</summary>
      <param name="window">
        <see cref="T:System.Windows.Window" /> 在其上设置 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 附加属性。</param>
      <param name="chrome">实例 <see cref="T:System.Windows.Shell.WindowChrome" /> 设置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>特定于类型的方式，可能会增加事件系统效率调用事件处理程序。</summary>
      <param name="genericHandler">调用类型特定的方式的一般处理程序。</param>
      <param name="genericTarget">要在调用处理程序的目标。</param>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.StaticResourceExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor(System.Object)">
      <summary>新实例初始化 <see cref="T:System.Windows.StaticResourceExtension" /> 类，提供的初始密钥。</summary>
      <param name="resourceKey">此标记扩展所引用的资源键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 参数是 null, ，通过标记扩展用法或显式构造。</exception>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在应用了此扩展的属性上设置的对象。 有关 <see cref="T:System.Windows.StaticResourceExtension" />, ，这是在资源字典，其中由标识要查找的对象中找到的对象 <see cref="P:System.Windows.StaticResourceExtension.ResourceKey" />。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。</param>
      <returns>要在其中计算标记扩展提供值的属性上设置的对象值。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> 已 null, ，或未能实现所需的服务。</exception>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Style" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.Windows.Style" /> 类，用于对指定 <see cref="T:System.Type" />。</summary>
      <param name="targetType">该样式将应用于哪个类型。</param>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)">
      <summary>新实例初始化 <see cref="T:System.Windows.Style" /> 类，用于对指定 <see cref="T:System.Type" /> 并根据指定 <see cref="T:System.Windows.Style" />。</summary>
      <param name="targetType">该样式将应用于哪个类型。</param>
      <param name="basedOn">要基于此样式的样式。</param>
    </member>
    <member name="M:System.Windows.Style.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Style" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Style" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Style.RegisterName(System.String,System.Object)">
      <summary>在当前的名称范围中注册新的名称对象对。</summary>
      <param name="name">要注册的名称。</param>
      <param name="scopedElement">要映射到指定的对象 <paramref name="name" />。</param>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>锁定此样式和所有工厂和触发器，使它们不能进行更改。</summary>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>返回具有提供的标识名称的对象。</summary>
      <param name="name">发出请求的对象的名称标识符。</param>
      <returns>对象（如果找到）。 如果找不到该名称的对象，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>查询指定的环境属性在当前范围中是否可用。</summary>
      <param name="propertyName">请求的环境属性的名称。</param>
      <returns>true 如果请求的环境属性可用;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Style.UnregisterName(System.String)">
      <summary>从名称范围中移除名称对象映射。</summary>
      <param name="name">要删除的映射的名称。</param>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.SystemCommands.CloseWindow(System.Windows.Window)">
      <summary>关闭指定的窗口。</summary>
      <param name="window">若要关闭窗口。</param>
    </member>
    <member name="M:System.Windows.SystemCommands.MaximizeWindow(System.Windows.Window)">
      <summary>指定的窗口最大化。</summary>
      <param name="window">最大限度地窗口。</param>
    </member>
    <member name="M:System.Windows.SystemCommands.MinimizeWindow(System.Windows.Window)">
      <summary>最小化在指定的时段。</summary>
      <param name="window">若要最小化窗口。</param>
    </member>
    <member name="M:System.Windows.SystemCommands.RestoreWindow(System.Windows.Window)">
      <summary>还原指定的孤行。</summary>
      <param name="window">还原窗口。</param>
    </member>
    <member name="M:System.Windows.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
      <summary>显示指定的窗口的系统菜单。</summary>
      <param name="window">窗口将显示其系统菜单。</param>
      <param name="screenLocation">系统菜单上的位置。</param>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器能否使用指定上下文将对象转换为指定类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的实现。</param>
      <param name="destinationType">所需的转换类型的输出。</param>
      <returns>true 如果该转换器能够执行请求的转换;否则为 false。 仅 <paramref name="destinationType" /> 的 <see cref="T:System.Windows.Markup.MarkupExtension" /> 返回 true。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将给定的值转换为 <see cref="T:System.Windows.Markup.MarkupExtension" /> 类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的实现。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象。 如果传递 null 引用，则使用当前区域性。</param>
      <param name="value">要转换的值。</param>
      <param name="destinationType">若要将转换为所需的类型。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)">
      <summary>使用指定的依赖属性（该属性是绑定的源）初始化 <see cref="T:System.Windows.TemplateBindingExtension" /> 类的新实例。</summary>
      <param name="property">所绑定属性的标识符。</param>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回一个对象，应在对此标记扩展的目标对象的属性设置为值。 有关 <see cref="T:System.Windows.TemplateBindingExtension" />, ，这是一个表达式 (<see cref="T:System.Windows.TemplateBindingExpression" />) 支持绑定。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。 可能是 null 在此实现中。</param>
      <returns>支持绑定表达式。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器能否使用指定上下文将对象转换为指定类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的实现。</param>
      <param name="destinationType">所需的转换类型的输出。</param>
      <returns>true 如果该转换器能够执行请求的转换;否则为 false。 仅 <paramref name="destinationType" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> 将返回 true。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将给定的值对象转换为指定的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的实现。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象。 如果传递 null 引用，则使用当前区域性。</param>
      <param name="value">要转换的值。</param>
      <param name="destinationType">若要将转换为所需的类型。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateContentLoader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>延迟模式下，基于在加载 XAML 内容 <see cref="T:System.Xaml.XamlReader" /> 和服务提供商提供的某些所需的服务。</summary>
      <param name="xamlReader">启动然后返回到调用的读取器 <see cref="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)" />。</param>
      <param name="serviceProvider">服务提供程序所需的服务。</param>
      <returns>输入节点流的根对象 <see cref="T:System.Xaml.XamlReader" />。 具体而言，这是 <see cref="T:System.Windows.TemplateContent" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlReader" /> 或 <paramref name="serviceProvider" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> 不提供所需的服务。</exception>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)">
      <summary>请不要使用;总是引发异常。 请参阅“备注”。</summary>
      <param name="value">要提交为延迟加载的输入的值。</param>
      <param name="serviceProvider">服务提供程序所需的服务。</param>
      <returns>将始终引发异常。 请参阅“备注”。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下引发。</exception>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType)">
      <summary>新实例初始化 <see cref="T:System.Windows.TemplateKey" /> 与指定的模板类型的类。 此构造函数受保护。</summary>
      <param name="templateType">一个 <see cref="T:System.Windows.TemplateKey.TemplateType" /> 值，该值指定此模板的类型。</param>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType,System.Object)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.TemplateKey" /> 类的新实例。 此构造函数受保护。</summary>
      <param name="templateType">一个 <see cref="T:System.Windows.TemplateKey.TemplateType" /> 值，该值指定此模板的类型。</param>
      <param name="dataType">为其设计此模板类型。</param>
    </member>
    <member name="M:System.Windows.TemplateKey.Equals(System.Object)">
      <summary>返回一个值，该值指示给定的实例是否与此实例的相同 <see cref="T:System.Windows.TemplateKey" />。</summary>
      <param name="o">要比较相等的对象。</param>
      <returns>true 如果两个实例是相同的;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.GetHashCode">
      <summary>返回 <see cref="T:System.Windows.TemplateKey" /> 的此实例的哈希代码。</summary>
      <returns>
        <see cref="T:System.Windows.TemplateKey" /> 的此实例的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.TemplateKey" />。</summary>
      <returns>字符串表示形式 <see cref="T:System.Windows.TemplateKey" />。</returns>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplatePartAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateVisualStateAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ThemeDictionaryExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.ThemeDictionaryExtension" /> 类，使用指定的程序集名称。</summary>
      <param name="assemblyName">程序集名称字符串。</param>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在应用了此扩展的属性上设置的对象。 有关 <see cref="T:System.Windows.ThemeDictionaryExtension" />, ，这是 URI 特殊主题字典扩展的值。</summary>
      <param name="serviceProvider">可为标记扩展提供服务的对象。 此服务需要提供的结果 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />。</param>
      <returns>要在应用了扩展的属性上设置的对象值。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.ThemeDictionaryExtension.AssemblyName" /> 属性为 null。 在构造期间或在使用之前，您必须设置此值 <see cref="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)" />  方法。- 或 -<paramref name="serviceProvide" />r 是 null 或未提供的服务 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />。- 或 -<paramref name="serviceProvider" /> 指定不匹配的目标类型 <see cref="P:System.Windows.ResourceDictionary.Source" />。</exception>
    </member>
    <member name="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
      <summary>新实例初始化 <see cref="T:System.Windows.ThemeInfoAttribute" /> 类，并创建的程序集中定义类型的主题字典位置的属性。</summary>
      <param name="themeDictionaryLocation">特定于主题的资源的位置。</param>
      <param name="genericDictionaryLocation">泛型、 不特定于主题的资源的位置。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>新实例初始化 <see cref="T:System.Windows.Thickness" /> 结构，其中每个边具有指定的统一长度。</summary>
      <param name="uniformLength">应用于所有四个边的边框的统一长度。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Thickness" /> 结构的新实例，该结构具有矩形各边所应用的特定长度（作为 <see cref="T:System.Double" /> 提供）。</summary>
      <param name="left">矩形左侧边的粗细。</param>
      <param name="top">矩形上底的粗细。</param>
      <param name="right">矩形右侧边的粗细</param>
      <param name="bottom">矩形下底的粗细。</param>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>比较此 <see cref="T:System.Windows.Thickness" /> 结构与另一个 <see cref="T:System.Object" /> 是否相等。</summary>
      <param name="obj">要比较的对象。</param>
      <returns>如果两个对象相等，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>比较此 <see cref="T:System.Windows.Thickness" /> 结构与另一个 <see cref="T:System.Windows.Thickness" /> 结构是否相等。</summary>
      <param name="thickness">一个实例 <see cref="T:System.Windows.Thickness" /> 要比较是否相等。</param>
      <returns>true 如果两个实例 <see cref="T:System.Windows.Thickness" /> 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>返回结构的哈希代码。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> 的此实例的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>将两个值进行比较 <see cref="T:System.Windows.Thickness" /> 结构是否相等。</summary>
      <param name="t1">要比较的第一个结构。</param>
      <param name="t2">其他要比较的结构。</param>
      <returns>true 如果两个实例 <see cref="T:System.Windows.Thickness" /> 相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>比较两个 <see cref="T:System.Windows.Thickness" /> 结构是否不相等。</summary>
      <param name="t1">要比较的第一个结构。</param>
      <param name="t2">其他要比较的结构。</param>
      <returns>true 如果两个实例 <see cref="T:System.Windows.Thickness" /> 不相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>返回的字符串表示形式 <see cref="T:System.Windows.Thickness" /> 结构。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示 <see cref="T:System.Windows.Thickness" /> 值。</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ThicknessConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定类型转换器是否可以创建的实例 <see cref="T:System.Windows.Thickness" /> 从指定的类型。</summary>
      <param name="typeDescriptorContext">一种类型的上下文信息。</param>
      <param name="sourceType">类型转换器计算用于转换的源类型。</param>
      <returns>true 如果该类型转换器可以创建的实例 <see cref="T:System.Windows.Thickness" /> 从指定的类型; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定类型转换器是否可以转换的一个实例 <see cref="T:System.Windows.Thickness" /> 都与不同类型。</summary>
      <param name="typeDescriptorContext">一种类型的上下文信息。</param>
      <param name="destinationType">为其类型转换器正在评估的此实例的类型 <see cref="T:System.Windows.Thickness" /> 转换。</param>
      <returns>true 如果该类型转换器可以转换的此实例 <see cref="T:System.Windows.Thickness" /> 到 <paramref name="destinationType" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>试图从指定对象创建 <see cref="T:System.Windows.Thickness" /> 实例。</summary>
      <param name="typeDescriptorContext">类型的上下文信息。</param>
      <param name="cultureInfo">要转换的类型的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="source">要转换的 <paramref name="source" /><see cref="T:System.Object" />。</param>
      <returns>从已转换的 <paramref name="source" /> 创建的 <see cref="T:System.Windows.Thickness" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 对象是空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">示例对象不是空引用，而且不是可以转换为 <see cref="T:System.Windows.Thickness" /> 的有效类型。</exception>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将转换的一个实例 <see cref="T:System.Windows.Thickness" /> 为指定的类型。</summary>
      <param name="typeDescriptorContext">一种类型的上下文信息。</param>
      <param name="cultureInfo">要转换的类型的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">实例 <see cref="T:System.Windows.Thickness" /> 将转换。</param>
      <param name="destinationType">指示此实例的类型的 <see cref="T:System.Windows.Thickness" /> 转换为。</param>
      <returns>类型转换器将转换的一个实例时创建的类型 <see cref="T:System.Windows.Thickness" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 对象不是空引用 (Nothing) 并不是画笔或 <paramref name="destinationType" /> 不是要转换的有效类型之一。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 对象为 null 引用。</exception>
    </member>
    <member name="M:System.Windows.Trigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Trigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理的类型转换器提供一个值的属性的情况 <see cref="T:System.Windows.Trigger" /> 对象。</summary>
      <param name="targetObject">其中的类型转换器设置值的对象。</param>
      <param name="eventArgs">适用于类型转换器处理的数据。</param>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TriggerActionCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor(System.Int32)">
      <summary>初始化的实例 <see cref="T:System.Windows.TriggerActionCollection" /> 类，该类具有指定的初始大小。</summary>
      <param name="initialSize">集合的大小。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)">
      <summary>向集合中添加一项。</summary>
      <param name="value">要添加的 <see cref="T:System.Windows.TriggerAction" /> 对象。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Clear">
      <summary>从集合中移除所有项。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)">
      <summary>返回一个值，该值指示集合是否包含指定 <see cref="T:System.Windows.TriggerAction" /> 对象。</summary>
      <param name="value">
        <see cref="T:System.Windows.TriggerAction" /> 要在集合中定位对象。</param>
      <returns>true 如果 <see cref="T:System.Windows.TriggerAction" /> 对象是在集合中找到; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)">
      <summary>指定索引处开始，并将收集项复制到指定的数组。</summary>
      <param name="array">从集合复制的项的目标位置中的一维数组。 该数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 复制开始位置。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)">
      <summary>返回集合中的指定项的索引。</summary>
      <param name="value">
        <see cref="T:System.Windows.TriggerAction" /> 要在集合中定位对象。</param>
      <returns>索引 <paramref name="value" /> 如果 <see cref="T:System.Windows.TriggerAction" /> 对象是在集合中找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)">
      <summary>将指定的项插入到集合中的指定索引处。</summary>
      <param name="index">从零开始的索引位置 <paramref name="value" /> 必须插入。</param>
      <param name="value">
        <see cref="T:System.Windows.TriggerAction" /> 要插入到集合对象。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)">
      <summary>从集合中移除指定对象的第一个匹配项。</summary>
      <param name="value">要从集合中移除的 <see cref="T:System.Windows.TriggerAction" /> 对象。</param>
      <returns>true 如果成功移除了该项;否则为 false。 此方法也返回 false 如果中找不到项 <see cref="T:System.Windows.TriggerActionCollection" />。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除位于指定索引处的项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="array">从集合复制的项的目标位置中的一维数组。 该数组必须使用从零开始的索引。</param>
      <param name="index">中的从零开始索引 <paramref name="array" /> 复制开始位置。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</param>
      <returns>新元素的插入位置。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</param>
      <returns>true <see cref="T:System.Object" /> 中找到 <see cref="T:System.Collections.IList" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">
        <see cref="T:System.Object" /> 要插入到 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="value">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.ValueSource.Equals(System.Object)">
      <summary>返回一个值，该值指示是否此 <see cref="T:System.Windows.ValueSource" /> 是否与指定对象相等。</summary>
      <param name="o">要与此比较的对象 <see cref="T:System.Windows.ValueSource" />。</param>
      <returns>true 如果所提供的对象等效于当前 <see cref="T:System.Windows.ValueSource" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.ValueSource" /> 的哈希代码。</summary>
      <returns>32 位无符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>确定两个 <see cref="T:System.Windows.ValueSource" /> 实例是否具有相同的值。</summary>
      <param name="vs1">要比较的第一个 <see cref="T:System.Windows.ValueSource" />。</param>
      <param name="vs2">要比较的第二个 <see cref="T:System.Windows.ValueSource" />。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.ValueSource" /> 实例是等效的; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>确定两个 <see cref="T:System.Windows.ValueSource" /> 实例是否具有不同的值。</summary>
      <param name="vs1">要比较的第一个 <see cref="T:System.Windows.ValueSource" />。</param>
      <param name="vs2">要比较的第二个 <see cref="T:System.Windows.ValueSource" />。</param>
      <returns>true 如果两个 <see cref="T:System.Windows.ValueSource" /> 实例是否不相等; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualState" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualStateGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualStateManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</summary>
      <param name="obj">要获取的元素 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</param>
      <returns>控件的状态间转换的可视状态管理器。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>获取 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性。</summary>
      <param name="obj">要获取的元素 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性。</param>
      <returns>集合 <see cref="T:System.Windows.VisualStateGroup" /> 与指定对象相关联的对象。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>转换两个状态间的元素。 应用程序定义而不是由 control 定义的转换状态使用此方法。</summary>
      <param name="stateGroupsRoot">包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</param>
      <param name="stateName">要转换到的状态。</param>
      <param name="useTransitions">true 若要使用 <see cref="T:System.Windows.VisualTransition" /> 对象传递给状态之间转换; 否则为 false。</param>
      <returns>true 如果控件已成功转换为新建状态;否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 为 null。- 或 -<paramref name="stateName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>在控件的两种状态之间转换。 使用此方法的控件的已转换状态 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
      <param name="control">状态间转换控件。</param>
      <param name="stateName">要转换到的状态。</param>
      <param name="useTransitions">true 若要使用 <see cref="T:System.Windows.VisualTransition" /> 对象传递给状态之间转换; 否则为 false。</param>
      <returns>true 如果控件已成功转换为新建状态;否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。- 或 -<paramref name="stateName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>转换状态之间的控件。</summary>
      <param name="control">状态间转换控件。</param>
      <param name="stateGroupsRoot">包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</param>
      <param name="stateName">要转换到状态的名称。</param>
      <param name="group">
        <see cref="T:System.Windows.VisualStateGroup" /> 属于状态。</param>
      <param name="state">表示形式转换为的状态。</param>
      <param name="useTransitions">true 若要使用 <see cref="T:System.Windows.VisualTransition" /> 对象传递给状态之间转换; 否则为 false。</param>
      <returns>true 如果控件已成功转换为新建状态;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>引发 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 上指定事件 <see cref="T:System.Windows.VisualStateGroup" /> 对象。</summary>
      <param name="stateGroup">该对象的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 上发生的事件。</param>
      <param name="oldState">从转换控件状态。</param>
      <param name="newState">控件转换到的状态。</param>
      <param name="control">正在转换状态中的控件。</param>
      <param name="stateGroupsRoot">包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 为 null。- 或 -<paramref name="newState" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>引发 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 上指定事件 <see cref="T:System.Windows.VisualStateGroup" /> 对象。</summary>
      <param name="stateGroup">该对象的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 上发生的事件。</param>
      <param name="oldState">从转换控件状态。</param>
      <param name="newState">控件转换到的状态。</param>
      <param name="control">正在转换状态中的控件。</param>
      <param name="stateGroupsRoot">包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 为 null。- 或 -<paramref name="newState" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>集 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</summary>
      <param name="obj">要对其设置属性的对象。</param>
      <param name="value">控件的状态间转换的可视状态管理器。</param>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualTransition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Window" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Window.Activate">
      <summary>尝试将该窗口调到前台，并将其激活。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Window" /> 成功激活; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
      <summary>重写此方法进行排列和调整窗口和及其子元素的大小。</summary>
      <param name="arrangeBounds">一个 <see cref="T:System.Windows.Size" /> ，反映窗口应该用来排列本身及其子元素的最终大小。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，反映实际使用的实际大小。</returns>
    </member>
    <member name="M:System.Windows.Window.Close">
      <summary>手动关闭 <see cref="T:System.Windows.Window" />。</summary>
    </member>
    <member name="M:System.Windows.Window.DragMove">
      <summary>允许通过使用其左键按下鼠标拖动窗口的工作区的暴露区域上方的窗口。</summary>
      <exception cref="T:System.InvalidOperationException">未按下鼠标左键。</exception>
    </member>
    <member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
      <summary>返回对 <see cref="T:System.Windows.Window" /> 承载内容树中的依赖项对象所在的对象。</summary>
      <param name="dependencyObject">依赖项对象中。</param>
      <returns>一个 <see cref="T:System.Windows.Window" /> 指向主机窗口的引用。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Window.Hide">
      <summary>使窗口不可见。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Hide" /> 正在关闭的窗口上调用 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
      <summary>重写此方法来测量一个窗口的大小。</summary>
      <param name="availableSize">一个 <see cref="T:System.Windows.Size" /> ，反映此窗口可以提供给子级的可用大小。 可为无穷大指定为一个值以指示窗口的大小内容的可用。</param>
      <returns>一个 <see cref="T:System.Windows.Size" /> ，反映此窗口确定其布局基于儿童大小其计算过程中所需的大小。</returns>
    </member>
    <member name="M:System.Windows.Window.OnActivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Activated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closing" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
      <summary>时调用此方法 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">对旧的内容树的根的引用。</param>
      <param name="newContent">对新的内容树的根的引用。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.ContentRendered" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnCreateAutomationPeer">
      <summary>创建并返回 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Window" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 对象的 <see cref="T:System.Windows.Window" />。</returns>
    </member>
    <member name="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Deactivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>时，调用此窗口呈现更改 DPI。</summary>
      <param name="oldDpi">以前的 DPI 比例设置。</param>
      <param name="newDpi">新的 DPI 比例设置。</param>
    </member>
    <member name="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.LocationChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
      <summary>时调用此方法 <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> 事件发生。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.SourceInitialized" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.StateChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>更改窗口的父级时调用。</summary>
      <param name="oldParent">上一个父级。 设置为 null <see cref="T:System.Windows.DependencyObject" /> 没有上一个父级。</param>
    </member>
    <member name="M:System.Windows.Window.Show">
      <summary>打开一个窗口，并返回而不等待新打开的窗口关闭。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Show" /> 正在关闭的窗口上调用 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="M:System.Windows.Window.ShowDialog">
      <summary>打开一个窗口，并关闭新打开的窗口时，才返回。</summary>
      <returns>一个 <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" /> ，它指定活动已被接受 (true) 或已取消 (false)。 返回值是值 <see cref="P:System.Windows.Window.DialogResult" /> 属性窗口关闭前关闭。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> 对调用 <see cref="T:System.Windows.Window" /> 可见- 或 -<see cref="M:System.Windows.Window.ShowDialog" /> 上一个可见调用 <see cref="T:System.Windows.Window" /> 打开通过调用 <see cref="M:System.Windows.Window.ShowDialog" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> 正在关闭的窗口上调用 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="M:System.Windows.WindowCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.WindowCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)">
      <summary>将每个复制 <see cref="T:System.Windows.Window" /> 到一个数组中从指定索引开始集合中的对象。</summary>
      <param name="array">类型的数组 <see cref="T:System.Windows.Window" /> ， <see cref="T:System.Windows.Window" /> 集合中的对象复制到。</param>
      <param name="index">从其开始复制的集合中的位置。</param>
    </member>
    <member name="M:System.Windows.WindowCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> ，可用于枚举 <see cref="T:System.Windows.Window" /> 集合中的对象。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> ，可用于枚举 <see cref="T:System.Windows.Window" /> 集合中的对象。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个从零开始 <see cref="T:System.Array" /> 接收复制的项从 <see cref="T:System.Windows.WindowCollection" />。</param>
      <param name="index">在指定的第一个位置 <see cref="T:System.Array" /> 以接收复制的内容。</param>
    </member>
    <member name="P:Microsoft.Win32.CommonDialog.Tag">
      <summary>获取或设置与对话框相关联的对象。 这样就可以将任意对象附加到对话框。</summary>
      <returns>一个 <see cref="T:System.Object" /> 附加或关联一个对话框。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.AddExtension">
      <summary>获取或设置一个值，该值指示如果用户省略扩展名，文件对话框是否自动在文件名中添加扩展名。</summary>
      <returns>如果添加扩展名，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
      <summary>获取或设置一个值，该值指示如果用户指定不存在的文件名，文件对话框是否显示警告。</summary>
      <returns>如果显示警告，则为 true；否则为 false。 此基类中的默认设置为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
      <summary>获取或设置一个值，该值指定如果用户键入无效的路径和文件名，是否显示警告。</summary>
      <returns>如果显示警告，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CustomPlaces">
      <summary>获取或设置文件对话框的自定义空间的列表。</summary>
      <returns>自定义空间的列表。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DefaultExt">
      <summary>获取或设置一个值，该值指定用来筛选显示的文件列表的默认扩展名字符串。</summary>
      <returns>默认扩展名字符串。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
      <summary>获取或设置一个值，该值指示文件对话框是返回快捷方式引用的文件的位置，还是返回快捷方式文件 (.lnk) 的位置。</summary>
      <returns>true 返回引用的位置；false 返回快捷方式位置。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileName">
      <summary>获取或设置一个字符串，其中包含在文件对话框中选定的文件的完整路径。</summary>
      <returns>一个 <see cref="T:System.String" />，表示文件对话框中选定的文件的完整路径。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileNames">
      <summary>获取一个数组，其中包含与每个选定文件一一对应的文件名。</summary>
      <returns>一个 <see cref="T:System.String" /> 数组，其中包含与每个选定文件一一对应的文件名。 默认值是一个由值为 <see cref="F:System.String.Empty" /> 的单个项组成的数组。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Filter">
      <summary>获取或设置筛选器字符串，该字符串确定在 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 中显示的文件类型。</summary>
      <returns>一个包含筛选器的 <see cref="T:System.String" />。 默认值为 <see cref="F:System.String.Empty" />，这意味着，不应用任何筛选器并显示所有文件类型。</returns>
      <exception cref="T:System.ArgumentException">筛选器字符串无效。</exception>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FilterIndex">
      <summary>获取或设置文件对话框中当前选定的筛选器的索引。</summary>
      <returns>一个 <see cref="T:System.Int32" />，表示选定的筛选器的索引。 默认值为 1。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
      <summary>获取或设置文件对话框显示的初始目录。</summary>
      <returns>一个包含初始目录的 <see cref="T:System.String" />。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Options">
      <summary>获取 Win32 通用文件对话框标志，文件对话框使用这些标志来进行初始化。</summary>
      <returns>一个包含 Win32 通用文件对话框标志的 <see cref="T:System.Int32" />，文件对话框使用这些标志来进行初始化。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
      <summary>不实现此属性。</summary>
      <returns>未实现。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileName">
      <summary>获取一个字符串，其中仅包含选定文件的文件名。</summary>
      <returns>一个 <see cref="T:System.String" />，其中仅包含选定文件的文件名。 默认值为 <see cref="F:System.String.Empty" />，当未选定文件或选定目录时也为此值。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
      <summary>获取一个数组，其中包含与每个选定文件一一对应的安全文件名。</summary>
      <returns>一个 <see cref="T:System.String" /> 数组，其中包含与每个选定文件一一个对应的安全文件名。 默认值是一个由值为 <see cref="F:System.String.Empty" /> 的单个项组成的数组。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Title">
      <summary>获取或设置在文件对话框的标题栏中显示的文本。</summary>
      <returns>一个 <see cref="T:System.String" />，表示在文件对话框的标题栏中显示的文本。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.ValidateNames">
      <summary>获取或设置一个值，该值指示对话框是否只接受有效的 Win32 文件名。</summary>
      <returns>如果在提供无效文件名时将显示警告，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.KnownFolder">
      <summary>获取自定义区域的已知文件夹 GUID。</summary>
      <returns>已知文件夹 GUID。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.Path">
      <summary>获取自定义空间的文件路径。</summary>
      <returns>自定义空间的路径。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Contacts">
      <summary>获取当前用户联系人文件夹。</summary>
      <returns>当前用户的联系人文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Cookies">
      <summary>获取当前用户的 Internet cookie 文件夹。</summary>
      <returns>当前用户的 Internet cookie 文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Desktop">
      <summary>获取用于存储当前用户的桌面上的文件的文件夹。</summary>
      <returns>用于存储当前用户的桌面上的文件的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Documents">
      <summary>获取当前用户文档文件夹。</summary>
      <returns>当前用户文档文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Favorites">
      <summary>获取当前用户收藏夹文件夹。</summary>
      <returns>当前用户的收藏夹文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.LocalApplicationData">
      <summary>获取由当前非漫游用户使用的应用程序特定数据的文件夹。</summary>
      <returns>当前非漫游用户使用的应用程序特定数据的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Music">
      <summary>获取当前用户音乐文件夹。</summary>
      <returns>当前用户的音乐文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Pictures">
      <summary>获取当前用户图片文件夹。</summary>
      <returns>当前用户的图片文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFiles">
      <summary>获取 Program Files 文件夹。</summary>
      <returns>Program Files 文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFilesCommon">
      <summary>获取共享的组件的跨应用程序的文件夹。</summary>
      <returns>应用程序间共享的组件的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Programs">
      <summary>获取包含当前用户的程序组的文件夹。</summary>
      <returns>包含当前用户的程序组的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.RoamingApplicationData">
      <summary>获取的当前漫游用户的应用程序特定数据的文件夹。</summary>
      <returns>当前漫游用户的应用程序特定数据的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.SendTo">
      <summary>获取包含当前用户的发送到菜单项的文件夹。</summary>
      <returns>包含为当前用户的发送到菜单项的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.StartMenu">
      <summary>获取包含当前用户的开始菜单项的文件夹。</summary>
      <returns>包含当前用户的开始菜单项的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Startup">
      <summary>获取当前用户为启动程序组相对应的文件夹。</summary>
      <returns>为当前用户的启动程序组相对应的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.System">
      <summary>获取系统文件夹。</summary>
      <returns>系统文件夹中。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Templates">
      <summary>获取当前用户的文档模板的文件夹。</summary>
      <returns>适用于当前用户的文档模板文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
      <summary>获取或设置一个选项，指示是否 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 允许用户选择多个文件。</summary>
      <returns>true 如果允许多重选择;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
      <summary>获取或设置一个值，该值指示只读复选框将显示由 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 处于选中状态。</summary>
      <returns>true 如果选中该复选框;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 包含只读复选框。</summary>
      <returns>true 如果该复选框会显示出来;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 提示用户提供创建文件，如果用户指定不存在的文件的权限。</summary>
      <returns>true 如果对话框应在保存到以前不存在; 一个文件名之前进行提示，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 显示一条警告，如果用户指定的名称已存在的文件。</summary>
      <returns>true 如果对话框应提示进行以前通过文件名保存之前存在;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>获取或设置是否 <see cref="T:System.Windows.DependencyObject" /> 设计器的上下文中运行。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> ，该值指示是否 <see cref="T:System.Windows.DependencyObject" /> 设计器的上下文中运行。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Anchors">
      <summary>获取集合的零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 定位元素，用于定义要批注的数据选择。</summary>
      <returns>零个或多集合 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 定位点元素。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.AnnotationType">
      <summary>获取 <see cref="T:System.Xml.XmlQualifiedName" /> 个批注类型。</summary>
      <returns>这种类型批注的 XML 限定的名。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Authors">
      <summary>获取字符串的零个或多个作者的集合，用于标识创建者 <see cref="T:System.Windows.Annotations.Annotation" />。</summary>
      <returns>零个或多个作者字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Cargos">
      <summary>获取集合的零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 包含数据的批注的货物元素。</summary>
      <returns>零个或多集合 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 货物元素。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.CreationTime">
      <summary>获取的日期和创建批注的时间。</summary>
      <returns>批注的创建日期和时间。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Id">
      <summary>获取 globally unique identifier (GUID) 的 <see cref="T:System.Windows.Annotations.Annotation" />。</summary>
      <returns>GUID 的批注。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.LastModificationTime">
      <summary>获取的日期和最后一次修改批注的时间。</summary>
      <returns>日期和时间上次修改该批注。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Action">
      <summary> 获取作者更改事件的操作。</summary>
      <returns>作者更改操作 ︰ <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, ，<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, ，或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Annotation">
      <summary> 获取引发事件的批注。</summary>
      <returns>引发事件的批注。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Author">
      <summary> 获取目标的事件的作者对象。</summary>
      <returns>作者对象是目标的事件。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 为总页数。</summary>
      <returns>true 分页是否已完成和 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示总页数; 否则为 false 如果处于进程中的分页和 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示当前已设置格式的页数。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount">
      <summary>获取一个值，该值指示当前已设置格式的页数。</summary>
      <returns>如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 是 true, ，批注页总数; 否则为如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 是 false, ，总页数当前已设置格式 （进程中的分页方式）。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize">
      <summary>获取或设置的建议的宽度和高度的每一页。</summary>
      <returns>建议的宽度和高度用于设置页格式。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source">
      <summary>获取正在进行分页的源文档。</summary>
      <returns>正在进行分页源文档。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.ContentLocators">
      <summary>获取的集合 <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> 元素包含在此资源。</summary>
      <returns>包含在此资源的内容定位器的集合。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Contents">
      <summary>获取一套 <see cref="T:System.Xml.XmlElement" /> 定义此资源的内容的对象。</summary>
      <returns>集合 <see cref="T:System.Xml.XmlElement" /> 定义此资源的内容的对象。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Id">
      <summary>获取 GUID 此资源。</summary>
      <returns>globally unique identifier (GUID) 标识此资源。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Name">
      <summary>获取或设置此 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 的名称。</summary>
      <returns>分配给此名称 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 以区别于其他 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 批注中。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Action">
      <summary>获取批注的操作 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />。</summary>
      <returns>批注的操作 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Annotation">
      <summary>获取引发事件的 <see cref="T:System.Windows.Annotations.Annotation" />。</summary>
      <returns>引发事件的 <see cref="T:System.Windows.Annotations.Annotation" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource">
      <summary>获取 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 与事件关联的资源。</summary>
      <returns>已批注定位点或 cargo 资源 <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />, ，<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />, ，或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.IsEnabled">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Annotations.AnnotationService" /> 已启用。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Annotations.AnnotationService" /> 启用; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.Store">
      <summary>获取 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 由此 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 使用的 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocator.Parts">
      <summary>获取的集合 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素组成此 <see cref="T:System.Windows.Annotations.ContentLocator" />。</summary>
      <returns>集合 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素组成此 <see cref="T:System.Windows.Annotations.ContentLocator" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorGroup.Locators">
      <summary>获取的集合 <see cref="T:System.Windows.Annotations.ContentLocator" /> 元素组成此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</summary>
      <returns>集合 <see cref="T:System.Windows.Annotations.ContentLocator" /> 元素组成此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs">
      <summary>获取定义此部件的名称/值对的集合。</summary>
      <returns>定义此名称/值对的集合 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.PartType">
      <summary>获取类型名称和命名空间的一部分。</summary>
      <returns>类型名称和命名空间的一部分。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Anchor">
      <summary>获取批注的定位点。</summary>
      <returns>已解决的定位点。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Annotation">
      <summary>获取批注对象。</summary>
      <returns>批注对象中。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.ResolvedAnchor">
      <summary>获取表示树上的位置的对象位置 <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> 得到解决。</summary>
      <returns>代表树上的位置的对象，其中 <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> 得到解决。 带批注的对象的类型由指定的类型。 Sticky 说明和数据流中突出显示或固定的文档始终会解析为 <see cref="T:System.Windows.Annotations.TextAnchor" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush">
      <summary>获取或设置一个值，该值指示是否立即将批注缓冲区中的数据写入物理数据存储区。</summary>
      <returns>如果对每次操作都要立即将批注缓冲区中的数据写入物理数据存储区，则为 true；如果要在应用程序显式调用 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" /> 时写入批注缓冲区中的数据，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed">
      <summary>获取一个值，该值指示是否已调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</summary>
      <returns>如果已调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />，则为 true；否则为 false。  默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot">
      <summary>获取要用作 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 临界区的同步锁定的对象。</summary>
      <returns>要用作 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 临界区的同步锁定的对象。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Action">
      <summary>获取所执行的操作。</summary>
      <returns>操作 <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Added" /> 或 <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted" /> 值，该值标识该操作执行。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Annotation">
      <summary>获取 <see cref="T:System.Windows.Annotations.Annotation" /> 已改变的存储区中。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.Annotation" /> 已改变的存储区中。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush">
      <summary>获取或设置一个值，该值指示是否立即将批注缓冲区中的数据写入物理数据存储区。</summary>
      <returns>如果对每次操作都要立即将批注缓冲区中的数据写入物理数据存储区，则为 true；如果要在应用程序显式调用 <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" /> 时写入批注缓冲区中的数据，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces">
      <summary>获取加载 XML 流时被忽略的命名空间的列表。</summary>
      <returns>加载 XML 流时被忽略的命名空间的列表。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces">
      <summary>获取由预定义的所有命名空间的列表 Annotations Framework。</summary>
      <returns>由预定义的命名空间的列表 Microsoft Annotations Framework。</returns>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingEnd">
      <summary>获取文本锚点的结束位置。</summary>
      <returns>文本锚点结束位置。</returns>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingStart">
      <summary>获取文本锚点的开始位置。</summary>
      <returns>文本锚点开始位置。</returns>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>获取 <see cref="T:System.Windows.Application" /> 当前对象 <see cref="T:System.AppDomain" />。</summary>
      <returns>
        <see cref="T:System.Windows.Application" /> 当前对象 <see cref="T:System.AppDomain" />。</returns>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>获取或设置该应用程序的主窗口。</summary>
      <returns>一个 <see cref="T:System.Windows.Window" /> 被指定为主应用程序窗口中。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Application.MainWindow" /> 从应用程序承载在浏览器中，如设置 XAML browser applications (XBAPs)。</exception>
    </member>
    <member name="P:System.Windows.Application.Properties">
      <summary>获取应用程序作用域属性的集合。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> ，它包含应用程序作用域属性。</returns>
    </member>
    <member name="P:System.Windows.Application.ResourceAssembly">
      <summary>获取或设置 <see cref="T:System.Reflection.Assembly" /> 提供包 uniform resource identifiers (URIs) 中的资源 WPF 应用程序。</summary>
      <returns>对引用 <see cref="T:System.Reflection.Assembly" /> 提供包 uniform resource identifiers (URIs) 中的资源 WPF 应用程序。</returns>
      <exception cref="T:System.InvalidOperationException">一个 WPF 应用程序具有一个项程序集，或 <see cref="P:System.Windows.Application.ResourceAssembly" /> 已设置。</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>获取或设置应用程序范围的资源，如样式和画笔的集合。</summary>
      <returns>一个 <see cref="T:System.Windows.ResourceDictionary" /> 对象，其中包含零个或多个应用程序范围资源。</returns>
    </member>
    <member name="P:System.Windows.Application.ShutdownMode">
      <summary>获取或设置导致的情况， <see cref="M:System.Windows.Application.Shutdown" /> 来调用方法。</summary>
      <returns>一个 <see cref="T:System.Windows.ShutdownMode" /> 枚举值。 默认值为 <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />。</returns>
    </member>
    <member name="P:System.Windows.Application.StartupUri">
      <summary>获取或设置 UI 一个应用程序启动时自动显示。</summary>
      <returns>一个 <see cref="T:System.Uri" /> ，指 UI 应用程序启动时自动打开。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Application.StartupUri" /> 设置值为 null。</exception>
    </member>
    <member name="P:System.Windows.Application.Windows">
      <summary>获取应用程序中实例化的窗口。</summary>
      <returns>一个 <see cref="T:System.Windows.WindowCollection" /> ，其中包含对在当前的所有窗口对象的引用 <see cref="T:System.AppDomain" />。</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
      <summary>获取或设置一个值，该值声明是否在应用此 .NET Framework 特性的附加属性上使用深模式来检测父元素。</summary>
      <returns>如果对于拥有附加属性的父元素的逻辑树中的所有子元素来说，附加属性都可浏览，则为 true。 如果仅对于拥有附加属性的父元素的直接子元素来说，附加属性才是可浏览的，则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取网格中的总列数。</summary>
      <returns>在网格中的列的总数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取网格中的总行数。</summary>
      <returns>网格中的总行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>获取当前的特定于控件的视图。</summary>
      <returns>UI 自动化元素的当前视图的值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取一个值，该值指定 UI 自动化提供程序是否允许同时选择多个子元素。</summary>
      <returns>true 如果允许多个所选内容;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取一个值，该值指定 UI 自动化提供程序是否要求至少选择一个子元素。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>检索的主表的遍历方向。</summary>
      <returns>首要遍历方向。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> 当前元素。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果值为只读，则为 true；如果它可以修改，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>该控件的一个字符串值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取网格中的总列数。</summary>
      <returns>在网格中的列的总数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取网格中的总行数。</summary>
      <returns>网格中的总行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取一个值，指定是否 UI 自动化提供程序 允许同时选择多个子元素。</summary>
      <returns>如果允许多重选择，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取一个值，指定是否 UI 自动化提供程序 要求至少一个子元素选择。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>检索的主表的遍历方向。</summary>
      <returns>首要遍历方向。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项的列的序号。</summary>
      <returns>一个从零开始的序号，用于标识包含该单元格或项的列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取由单元格或项跨的列数。</summary>
      <returns>跨的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取 UI 自动化提供程序 实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> 和表示的单元或项的容器。</summary>
      <returns>一个 UI 自动化提供程序 实现 <see cref="T:System.Windows.Automation.GridPattern" /> 和表示的单元或项的容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项的行的序号。</summary>
      <returns>一个从零开始的序号，标识包含该单元格或项的行。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取由单元格或项跨越的行数。</summary>
      <returns>跨的行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值，该值指示是否选定项。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取 UI 自动化提供程序 实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> ，并且可作为调用对象的容器。</summary>
      <returns>支持 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 的提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>获取一个值，指定控件的值是只读的。</summary>
      <returns>如果值为只读，则为 true；如果它可以修改，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>获取控件的值。</summary>
      <returns>该控件作为一个字符串值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>获取一个值，指定是否可以移动列。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>获取一个值，指定是否可以调整列的大小。</summary>
      <returns>如果元素可以调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>获取一个值，指定是否可旋转该控件。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值，该值指示是否选定项。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取 UI 自动化提供程序 实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> ，并且可作为调用对象的容器。</summary>
      <returns>提供程序 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取一个值，该值指示是否 UI 自动化提供程序 允许同时选择多个子元素。</summary>
      <returns>true 如果允许多个所选内容;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取一个值，指定是否 UI 自动化提供程序 要求至少一个子元素选择。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>获取控件的状态 （展开或折叠）。</summary>
      <returns>（展开或折叠） 的状态的控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>获取一个值，指定控件的值是只读的。</summary>
      <returns>如果值为只读，则为 true；如果它可以修改，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>获取控件的值。</summary>
      <returns>一个字符串，表示控件的值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项的列的序号。</summary>
      <returns>一个从零开始的序号，用于标识包含该单元格或项的列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取由单元格或项跨的列数。</summary>
      <returns>跨的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取一个 UI 自动化提供程序，该提供程序可实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> 并表示单元或项的容器。</summary>
      <returns>表示单元格或项容器 UI 自动化提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项的行的序号。</summary>
      <returns>一个从零开始的序号，标识包含该单元格或项的行。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取由单元格或项跨越的行数。</summary>
      <returns>跨的行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值，该值指示是否选定项。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 并且可作为调用对象的容器的 UI 自动化提供程序。</summary>
      <returns>提供程序充当调用对象的容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>（展开或折叠） 的状态的控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>获取当前的特定于控件的视图。</summary>
      <returns>UI 自动化元素的当前视图的值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果可以移动该元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果元素可以调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果该元素可以旋转;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取网格中的总列数。</summary>
      <returns>在网格中的列的总数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取网格中的总行数。</summary>
      <returns>网格中的总行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>获取遍历表的主方向。</summary>
      <returns>首要遍历方向。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项的列的序号。</summary>
      <returns>一个从零开始的序号，用于标识包含该单元格或项的列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取由单元格或项跨的列数。</summary>
      <returns>跨的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取 UI 自动化提供程序实现 <see cref="T:System.Windows.Automation.GridPattern" /> 和表示的单元或项的容器。</summary>
      <returns>一个 UI 自动化提供程序，可实现 <see cref="T:System.Windows.Automation.GridPattern" /> 并表示单元或项容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项的行的序号。</summary>
      <returns>一个从零开始的序号，标识包含该单元格或项的行。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取由单元格或项跨越的行数。</summary>
      <returns>跨的行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果可以移动该元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果元素可以调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果该元素可以旋转;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>获取数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 与此关联的集合 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</summary>
      <returns>数据项。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.ItemsControl" /> ，它持有 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 关联 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemsControlAutomationPeer.IsVirtualized">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 应返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 未虚拟化的子项目的对象。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 应返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象没有被虚拟化; 的子项目 false 如果 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 应返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象的所有子项目。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ListViewAutomationPeer.ViewAutomationPeer">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> 的 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</summary>
      <returns>与此关联的接口实例 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>（展开或折叠） 的状态的控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>控件的切换状态。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果值为只读，则为 true；如果它可以修改，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>该控件的一个字符串值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果值是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>显著更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>小更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果范围值是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>显著更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>控件支持的最大范围值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>控件支持的最小范围值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>小更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>该控件的值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>值，该值指示控件是否可以在水平方向上滚动。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>在控件内总的内容区域的百分比表示水平滚动位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>返回 S_OK 如果成功，或错误否则值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果控件可以滚动，垂直;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>在控件内总的内容区域的百分比表示垂直滚动位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>返回 S_OK 如果成功，或错误否则值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果允许多重选择，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>返回 S_OK 如果成功，或错误否则值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>返回 S_OK 如果成功，或错误否则值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取网格中的总列数。</summary>
      <returns>在网格中的列的总数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取网格中的总行数。</summary>
      <returns>网格中的总行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项的列的序号。</summary>
      <returns>一个从零开始的序号，用于标识包含该单元格或项的列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取由单元格或项跨的列数。</summary>
      <returns>跨的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取 UI 自动化提供程序实现 <see cref="T:System.Windows.Automation.GridPattern" /> 和表示的单元或项的容器。</summary>
      <returns>一个 UI 自动化提供程序，可实现 <see cref="T:System.Windows.Automation.GridPattern" /> 并表示单元或项容器。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项的行的序号。</summary>
      <returns>一个从零开始的序号，标识包含该单元格或项的行。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取由单元格或项跨越的行数。</summary>
      <returns>跨的行数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>如果值为只读，则为 true；如果它可以修改，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>该控件的一个字符串值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>控件的切换状态。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取一个值，该值指定 UI 自动化提供程序是否允许同时选择多个子元素。</summary>
      <returns>如果允许多重选择，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取一个值，该值指定 UI 自动化提供程序是否要求至少选择一个子元素。</summary>
      <returns>如果必须进行选择，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.ParentDataItemAutomationPeer">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> ，它是此自动化同级的父级。</summary>
      <returns>自动化父级。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>获取状态，展开或折叠的控件。</summary>
      <returns>状态、 展开或折叠的控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值，该值指示是否选定项。</summary>
      <returns>true 如果选择了某项;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 UI 自动化提供程序 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> ，并且可作为调用对象的容器。</summary>
      <returns>UI 自动化提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>（展开或折叠） 的状态的控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>true 如果选择了该元素;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.IsEof">
      <summary>获取一个值，报表读取器位置是否位于文件结尾。</summary>
      <returns>true 如果读取器位于末尾的该文件;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Member">
      <summary>如果读取器位置位于在读取器位置获取的当前成员 <see cref="F:System.Xaml.XamlNodeType.StartMember" />。</summary>
      <returns>当前成员，或 null 如果位置不在成员上。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Namespace">
      <summary>从当前节点中获取的 XAML 命名空间。</summary>
      <returns>XAML 命名空间如果可用，否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.NodeType">
      <summary>获取当前节点的类型。</summary>
      <returns>枚举的一个值。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.SchemaContext">
      <summary>获取一个对象，提供的信息集的架构上下文信息。</summary>
      <returns>一个对象，提供的信息的架构上下文信息设置。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#HasLineInfo">
      <summary>请参阅 <see cref="P:System.Xaml.IXamlLineInfo.HasLineInfo" />。</summary>
      <returns>true 如果行信息可用，则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LineNumber">
      <summary>请参阅 <see cref="P:System.Xaml.IXamlLineInfo.LineNumber" />。</summary>
      <returns>报告的行号。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LinePosition">
      <summary>请参阅 <see cref="P:System.Xaml.IXamlLineInfo.LinePosition" />。</summary>
      <returns>报告的行位置。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Type">
      <summary>获取 <see cref="T:System.Xaml.XamlType" /> 当前节点。</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> 当前节点或 null 如果位置不在对象上。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Value">
      <summary>获取当前节点的值。</summary>
      <returns>当前节点的值或 null 如果位置不在 <see cref="F:System.Xaml.XamlNodeType.Value" /> 节点类型。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.Assembly">
      <summary>获取指示哪个程序集的字典，以查找与此项关联的值的程序集对象。</summary>
      <returns>检索的程序集，作为反射类。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.ResourceId">
      <summary>获取或设置要将此键与此类型的其他关联的唯一标识符。</summary>
      <returns>一个唯一标识符。 通常这是一个字符串。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
      <summary>获取或设置 <see cref="T:System.Type" /> 定义资源键。</summary>
      <returns>定义资源键的类型。</returns>
    </member>
    <member name="P:System.Windows.Condition.Binding">
      <summary>获取或设置指定条件属性的绑定。 这只适用于 <see cref="T:System.Windows.MultiDataTrigger" /> 对象。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Condition.Property">
      <summary>获取或设置条件的属性。 此特性仅适用于 <see cref="T:System.Windows.MultiTrigger" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyProperty" /> ，它指定条件的属性。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Condition.SourceName">
      <summary>获取或设置与导致关联的 setter 要应用的属性对象的名称。 此特性仅适用于 <see cref="T:System.Windows.MultiTrigger" /> 对象。</summary>
      <returns>默认属性是 null。 如果此属性为 null, ，则样式对象的属性导致相关联的 setter，使其应用。</returns>
      <exception cref="T:System.InvalidOperationException">之后 <see cref="T:System.Windows.Condition" /> 是在使用中，不能修改。</exception>
    </member>
    <member name="P:System.Windows.Condition.Value">
      <summary>获取或设置条件的值。</summary>
      <returns>
        <see cref="P:System.Windows.Condition.Value" /> 属性不能为 null 的给定 <see cref="T:System.Windows.Condition" />。另请参见异常部分。 默认值为 null。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Markup.MarkupExtension" />不支持 s。</exception>
      <exception cref="T:System.ArgumentException">不支持表达式。</exception>
    </member>
    <member name="P:System.Windows.ConditionCollection.IsSealed">
      <summary>获取一个值，该值指示此触发器是否是只读的并且不能更改。</summary>
      <returns>true 如果触发器是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.AccessKey">
      <summary>提供对第一个下划线字符后面的字符的只读访问。</summary>
      <returns>要返回的字符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 填充内容区域。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> 填充内容区域。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.BaselineOffset">
      <summary>获取或设置一个值，调整基线偏移位置中的文本 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>要调整基线的量偏移位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontFamily">
      <summary>获取或设置要用于字体系列 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>若要使用的字体系列。 默认值是由字体 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 跃点数。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontSize">
      <summary>获取或设置要使用的字体大小 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>要使用的字体大小。 默认值是由的字体大小 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 跃点数。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStretch">
      <summary>获取或设置 <see cref="T:System.Windows.FontStretch" /> 属性选择一个正常、 压缩或扩展从字体 <see cref="T:System.Windows.Media.FontFamily" />。</summary>
      <returns>字体比拉伸的相对程度。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStyle">
      <summary>获取或设置要使用的字体样式 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>要使用; 的字体样式例如，普通、 斜体或倾斜。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 跃点数。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontWeight">
      <summary>获取或设置要使用的字体粗细 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>要使用的字体粗细。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 跃点数。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Foreground">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 绘制元素的文本内容。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> 绘制的文本。 默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineHeight">
      <summary>获取或设置每个行框的高度。</summary>
      <returns>一个 double 值，指定每个行框的高度。 此值必须等于或大于 0.0034 和等于或小于然后 160000。 值为 <see cref="F:System.Double.NaN" /> (等效于属性值的 Auto) 使行高为自动确定由当前的字体特征。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineStackingStrategy">
      <summary>获取或设置如何 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 属性强制执行。</summary>
      <returns>一个 <see cref="T:System.Windows.LineStackingStrategy" /> 值，该值确定的行为 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 属性。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LogicalChildren">
      <summary>获取循环的逻辑的子元素的枚举器 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>一个枚举器循环访问此元素的逻辑子元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Text">
      <summary>获取或设置所显示的文本 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>不带第一个下划线字符文本。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextAlignment">
      <summary>获取或设置内容的水平对齐方式。</summary>
      <returns>文本的水平对齐方式。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextDecorations">
      <summary>获取或设置添加到的文本的修饰 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>
        <see cref="T:System.Windows.TextDecorations" /> 应用于文本的 <see cref="T:System.Windows.Controls.AccessText" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextEffects">
      <summary>获取或设置添加到的文本的效果 <see cref="T:System.Windows.Controls.AccessText" /> 元素。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffectCollection" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextTrimming">
      <summary>获取或设置如何的文本内容的 <see cref="T:System.Windows.Controls.AccessText" /> 元素进行了剪裁如果溢出行框。</summary>
      <returns>要使用的修整行为。 默认值为 <see cref="F:System.Windows.TextTrimming.None" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextWrapping">
      <summary>获取或设置是否的文本内容的 <see cref="T:System.Windows.Controls.AccessText" /> 元素包装如果溢出行框。</summary>
      <returns>若要使用换行行为。 默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.VisualChildrenCount">
      <summary>获取 visual 的子元素的数目。</summary>
      <returns>返回一个整数，表示是可见的子元素的数量。</returns>
    </member>
    <member name="P:System.Windows.Controls.AddingNewItemEventArgs.NewItem">
      <summary>获取或设置将添加的项。</summary>
      <returns>将添加的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.AdornedElement">
      <summary>获取 <see cref="T:System.Windows.UIElement" /> 此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象为其保留空间。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象为其保留空间。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.Child">
      <summary>获取或设置此单个子对象 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。</summary>
      <returns>此单一子对象 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.LogicalChildren">
      <summary>获取的枚举器的逻辑子元素的这 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。</summary>
      <returns>此逻辑子元素的枚举数 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.VisualChildrenCount">
      <summary>获取可视子对象的数目。</summary>
      <returns>0 或 1。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.AlternationConverter.Values">
      <summary>获取对象的列表 <see cref="T:System.Windows.Controls.AlternationConverter" /> 返回一个整数传递给时 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 方法。</summary>
      <returns>对象的列表， <see cref="T:System.Windows.Controls.AlternationConverter" /> 返回一个整数传递给时 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 方法。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" />，它填充 <see cref="T:System.Windows.Controls.Border" /> 边界之间的区域。</summary>
      <returns>绘制背景的 <see cref="T:System.Windows.Media.Brush" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>获取或设置用于绘制外部边框颜色的 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>用于绘制外部边框颜色的 <see cref="T:System.Windows.Media.Brush" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Border" /> 的相对 <see cref="T:System.Windows.Thickness" />。</summary>
      <returns>描述 <see cref="T:System.Windows.Controls.Border" /> 的边界的宽度的 <see cref="T:System.Windows.Thickness" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>获取或设置一个值，向其表示度的角变 <see cref="T:System.Windows.Controls.Border" /> 舍入。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> 描述圆角的程度。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>获取或设置 <see cref="T:System.Windows.Thickness" /> 值，该值描述之间的空间量 <see cref="T:System.Windows.Controls.Border" /> 与其子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> 描述之间的空间量 <see cref="T:System.Windows.Controls.Border" /> 与单个子元素。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsCancel">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Button" /> 是一个取消按钮。 用户可以通过按 ESC 键来激活取消按钮。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Button" /> 是一个取消按钮; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefault">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Button" /> 是默认按钮。 用户通过按 ENTER 键时调用的默认按钮。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Button" /> 是默认按钮; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefaulted">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.Button" /> 是当用户按下 enter 键时激活的按钮。</summary>
      <returns>true 如果当用户按 enter 键; 激活该按钮否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>获取标记为不可选择的日期的集合。</summary>
      <returns>不能选择的日期的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 关联控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 对象。</summary>
      <returns>当前样式的 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 关联控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 对象。</summary>
      <returns>当前样式的 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 关联控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 对象。</summary>
      <returns>当前样式的 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>获取或设置要显示的日期。</summary>
      <returns>要显示的日期。 默认值为 <see cref="P:System.DateTime.Today" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>获取或设置可在日历中的日期范围内的最后日期。</summary>
      <returns>可在日历中的最后日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>获取或设置可在日历中的第一个日期。</summary>
      <returns>可在日历中的第一个日期。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>获取或设置一个值，该值指示是否日历显示月、 年或十年。</summary>
      <returns>一个值，指示的时间长度的 <see cref="T:System.Windows.Controls.Calendar" /> 应显示。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>获取或设置在一天中被视为周的开始。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 表示周的开始。 默认值是 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> 由当前区域性。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>获取或设置一个值，该值指示是否突出显示当前日期。</summary>
      <returns>true 如果突出显示当前日期;，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>获取或设置当前选定的日期。</summary>
      <returns>当前选定的日期。 默认值为 null。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的日期是在指定的范围外 <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 和 <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />- 或 -指定的日期是 <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> 集合。</exception>
      <exception cref="T:System.InvalidOperationException">如果设置为任何非 null 时 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 设置为 <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>获取选定日期的集合。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> 对象，其中包含当前选定的日期。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>获取或设置一个值，指示允许包含什么样的选择。</summary>
      <returns>一个值，该值指示当前的选择模式。 默认值为 <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>获取或设置新显示的日期。</summary>
      <returns>新显示的日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>获取或设置以前显示的日期。</summary>
      <returns>以前显示的日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>获取表示的范围中的最后日期。</summary>
      <returns>表示范围中的最后日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>获取表示的范围中的第一个日期。</summary>
      <returns>表示范围中的第一个日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>获取的新模式 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.CalendarMode" /> ，它表示新的模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>获取以前的模式的 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.CalendarMode" /> 表示旧模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Bottom">
      <summary>获取或设置一个值，该值表示元素底部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 底部之间的距离。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示相对于父 <see cref="T:System.Windows.Controls.Canvas" /> 底部的偏移位置。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>获取或设置一个值，该值表示元素左侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 左侧之间的距离。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示相对于父 <see cref="T:System.Windows.Controls.Canvas" /> 左侧的偏移位置。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Right">
      <summary>获取或设置一个值，该值表示元素右侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 右侧之间的距离。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示相对于父 <see cref="T:System.Windows.Controls.Canvas" /> 右侧的偏移位置。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>获取或设置一个值，该值表示元素顶部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 顶部之间的距离。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示相对于父 <see cref="T:System.Windows.Controls.Canvas" /> 顶部的偏移位置。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否此项不应重新虚拟化。</summary>
      <returns>true 如果您想要阻止重新虚拟化此项;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>获取表示数据值的可视元素的实例。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 表示数据值。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>获取 <see cref="T:System.Object" /> 表示原始的数据值。</summary>
      <returns>
        <see cref="T:System.Object" /> 表示原始的数据值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>获取一个值，该值表示实际计算所得的 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 宽度。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示实际计算所得的宽度（以与设备无关的像素为单位）。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 的最大宽度。</summary>
      <returns>表示最大宽度 <see cref="T:System.Double" />。 默认值为 <see cref="F:System.Double.PositiveInfinity" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 的最小宽度。</summary>
      <returns>表示最小宽度的 <see cref="T:System.Double" />。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Offset">
      <summary>获取一个值，该值表示此 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 的偏移量值。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示列的偏移量。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>获取计算所得的宽度 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 元素或设置 <see cref="T:System.Windows.GridLength" /> 由定义的列的值 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</summary>
      <returns>表示列宽的 <see cref="T:System.Windows.GridLength" />。 默认值为 1.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Count">
      <summary>获取此实例中的项的总数 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <returns>集合中项的总数。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsReadOnly">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 是只读的。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsSynchronized">
      <summary>获取一个值，该值指示是否对此访问 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 是同步 （线程安全）。</summary>
      <returns>true 如果对此集合的访问同步的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Item(System.Int32)">
      <summary>获取一个值，该值指示当前项内的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <param name="index">集合中的当前项。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是集合中的有效的索引位置。</exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是在列表中的有效的索引位置。</exception>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HandlesScrolling">
      <summary>获取一个值，该值指示组合框是否支持滚动。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ComboBox" /> 支持滚动; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦点。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦点; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>获取或设置一个值，该值指示是否当前打开组合框下拉列表。</summary>
      <returns>true 如果已打开，则下拉列表否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>获取或设置一个值，启用或禁用编辑文本框中文本的 <see cref="T:System.Windows.Controls.ComboBox" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ComboBox" /> 可编辑; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsReadOnly">
      <summary>获取或设置一个值，使所选内容只读模式下，在该组合框的内容是可选择，但不可编辑。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 是只读的，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>获取是否 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 突出显示。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 突出显示; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>获取或设置一个组合框下拉列表的最大高度。</summary>
      <returns>一个 double 值，该值表示检索到的高度或要设置的高度。 为属性系统定义的默认值是基于采用系统最大屏幕高度参数，一个第三部分的计算的值，但可能由各种控件模板中重写此默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>获取在选择框中显示的项。</summary>
      <returns>选定的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat">
      <summary>获取一个复合字符串，指定如何设置选择框中的选定的项的格式，它显示为一个字符串。</summary>
      <returns>一个复合字符串，指定如何设置选择框中的选定的项的格式，它显示为一个字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>获取选择框内容的项模板。</summary>
      <returns>项模板。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ComboBox" /> 保留用户的输入，或者输入替换匹配项。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ComboBox" /> 保留用户的输入; false 如果 <see cref="T:System.Windows.Controls.ComboBox" /> 用匹配项注册的默认值是替换输入 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.ComboBox" /> 即打开并显示一个下拉列表控件将保持打开当用户单击 <see cref="T:System.Windows.Controls.TextBox" />。</summary>
      <returns>true 若要保持下拉控件时打开在用户单击文本区域以开始; 用户可以编辑否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.Text">
      <summary>获取或设置当前选定项的文本。</summary>
      <returns>当前选定项的字符串。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBoxItem.IsHighlighted">
      <summary>获取一个值，该值指示是否突出显示该项。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ComboBoxItem" /> 突出显示; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary> 获取或设置的内容 <see cref="T:System.Windows.Controls.ContentControl" />。</summary>
      <returns>包含控件的内容的对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentStringFormat">
      <summary>获取或设置一个指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性，它显示为一个字符串。</summary>
      <returns>指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性，它显示为一个字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary> 获取或设置用来显示的内容的数据模板 <see cref="T:System.Windows.Controls.ContentControl" />。</summary>
      <returns>数据模板。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
      <summary> 获取或设置一个模板选择器，使应用程序编写器，以提供自定义模板选择逻辑。</summary>
      <returns>数据模板选择器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.HasContent">
      <summary> 获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContentControl" /> 包含的内容。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ContentControl" /> 具有内容; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.LogicalChildren">
      <summary> 获取可枚举内容控件的逻辑子元素。</summary>
      <returns>枚举器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>获取或设置用来生成的子元素的数据 <see cref="T:System.Windows.Controls.ContentPresenter" />。</summary>
      <returns>用于生成的子元素的数据。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentSource">
      <summary>获取或设置要在自动命名别名过程中使用的基名称。</summary>
      <returns>要在自动命名别名过程中使用的基名称。 默认值为"内容"。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentStringFormat">
      <summary>获取或设置一个指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性，它显示为一个字符串。</summary>
      <returns>指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性，它显示为一个字符串。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>获取或设置用来显示该控件的内容的模板。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" /> ，它定义的内容的可视化效果。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" />, ，这样，应用程序编写器，以提供用于选择用于显示控件的内容的模板自定义逻辑。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象，用于提供逻辑来返回 <see cref="T:System.Windows.DataTemplate" /> 应用。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContentPresenter" /> 应使用 <see cref="T:System.Windows.Controls.AccessText" /> 中其样式。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ContentPresenter" /> 应使用 <see cref="T:System.Windows.Controls.AccessText" /> 中其样式; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
      <summary> 获取或设置一个指示的位置的回调 <see cref="T:System.Windows.Controls.ContextMenu" /> 应该放置在屏幕上。</summary>
      <returns>指定的位置的回调 <see cref="T:System.Windows.Controls.ContextMenu" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
      <summary>获取一个值，该值指示控件是否支持滚动。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HasDropShadow">
      <summary>获取或设置一个值，该值指示是否有投影出现的上下文菜单。</summary>
      <returns>true 如果投影，则为一同显示的上下文菜单否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
      <summary>获取或设置目标原点和弹出项对齐之间的水平距离点。</summary>
      <returns>目标原点和 popup 对齐点之间的水平距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.IsOpen">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否可见。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 可见，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.Placement">
      <summary> 获取或设置 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 属性 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
      <returns>其中一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举。 默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
      <summary>获取或设置相对于其上下文菜单位于在打开时的区域。</summary>
      <returns>定义用于定位上下文菜单的矩形区域。 默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementTarget">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 相对于其 <see cref="T:System.Windows.Controls.ContextMenu" /> 时它会打开所在位置。</summary>
      <returns>相对于其元素 <see cref="T:System.Windows.Controls.ContextMenu" /> 时它会打开所在位置。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.StaysOpen">
      <summary> 获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 应自动关闭。</summary>
      <returns>true 如果菜单上将保持打开状态，直到 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 属性更改为 false; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.VerticalOffset">
      <summary>获取或设置目标原点和弹出项对齐之间的垂直距离点。</summary>
      <returns>目标原点和 popup 对齐点之间的垂直距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorLeft">
      <summary> 获取鼠标的水平位置。</summary>
      <returns>鼠标的水平位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorTop">
      <summary>获取鼠标的垂直位置。</summary>
      <returns>鼠标的垂直位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ContextMenu">
      <summary>获取或设置的内容 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
      <returns>返回 <see cref="T:System.Windows.Controls.ContextMenu" /> 内容; 如果没有任何内容属性返回 null。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HasDropShadow">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 已启用投影效果。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 具有影响启用; 否则为投影 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HorizontalOffset">
      <summary>获取或设置一个值，该值指示沿 x 方向将放置在 <see cref="T:System.Windows.Controls.ContextMenu" /> 相对于父控件。</summary>
      <returns>
        <see cref="T:System.Double" /> 指定的水平位置 <see cref="T:System.Windows.Controls.ContextMenu" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.IsEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 可以显示。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 显示; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.Placement">
      <summary>获取或设置一个值，指定的位置 <see cref="T:System.Windows.Controls.ContextMenu" /> 相对于 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 或 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" />。</summary>
      <returns>返回在何处 <see cref="T:System.Windows.Controls.ContextMenu" /> 应放相对于其父级。 属性集 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementRectangle">
      <summary>获取或设置相对于其上下文菜单位于在打开时的区域。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 结构，它定义用于定位上下文菜单控件的矩形。 默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementTarget">
      <summary>获取或设置父控件的 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 的父级 <see cref="T:System.Windows.Controls.ContextMenu" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ContextMenu" /> 应与其父变为灰色时显示。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ContextMenu" /> ; 否则为其父级则将灰显时应显示 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.VerticalOffset">
      <summary>获取或设置一个值，该值指示沿 y 方向将放置在 <see cref="T:System.Windows.Controls.ContextMenu" /> 相对于父控件。</summary>
      <returns>
        <see cref="T:System.Double" /> 指定的垂直位置的 <see cref="T:System.Windows.Controls.ContextMenu" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>获取或设置一个用于描述控件的背景画笔。</summary>
      <returns>用来填充控件的背景画笔。 默认值为 <see cref="P:System.Windows.Media.Brushes.Transparent" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>获取或设置一个用于描述一个控件的边框背景画笔。</summary>
      <returns>用来填充控件的边框的画笔默认值是 <see cref="P:System.Windows.Media.Brushes.Transparent" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>获取或设置控件的边框宽度。</summary>
      <returns>一个宽度值;默认值为 0 对所有四个边的宽度值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>获取或设置控件的字体系列。</summary>
      <returns>字体系列。 默认值为系统对话框字体。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>获取或设置字体大小。</summary>
      <returns>中的文本的大小 <see cref="T:System.Windows.Controls.Control" />。 默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。 字体大小必须是正数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>获取或设置紧缩或在屏幕上展开一种字体的程度。</summary>
      <returns>一个 <see cref="T:System.Windows.FontStretch" /> 值。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>获取或设置字体样式。</summary>
      <returns>一个 <see cref="T:System.Windows.FontStyle" /> 值。 默认值为 <see cref="P:System.Windows.FontStyles.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>获取或设置指定的字体粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.FontWeight" /> 值。 默认值为 <see cref="P:System.Windows.FontWeights.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>获取或设置一个画笔，它描述的前景色。</summary>
      <returns>绘制控件的前景的画笔。 默认值为系统对话框字体颜色。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HandlesScrolling">
      <summary>获取一个值，该值指示控件是否支持滚动。</summary>
      <returns>true 如果控件具有 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的样式中并具有自定义键盘滚动行为; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>获取或设置控件的内容的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.HorizontalAlignment" /> 值之一。 默认值为 <see cref="F:System.Windows.HorizontalAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>获取或设置一个值，该值指示控件是否包括在选项卡上的导航窗格中。</summary>
      <returns>true 如果控件包含在选项卡导航;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>获取或设置在控件中的填充量。</summary>
      <returns>内容之间的空间量 <see cref="T:System.Windows.Controls.Control" /> 并将其 <see cref="P:System.Windows.FrameworkElement.Margin" /> 或 <see cref="T:System.Windows.Controls.Border" />。  默认值为 0 对所有四个边的宽度值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>获取或设置一个值，确定当用户导航控件通过使用 TAB 键元素接收焦点的顺序。</summary>
      <returns>一个确定的逻辑设备的导航顺序的值。 默认值为 <see cref="F:System.Int32.MaxValue" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>获取或设置控件模板。</summary>
      <returns>定义 <see cref="T:System.Windows.Controls.Control" /> 外观的模板。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>获取或设置控件的内容的垂直对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.VerticalAlignment" /> 值之一。 默认值为 <see cref="F:System.Windows.VerticalAlignment.Top" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>获取或设置此类型 <see cref="T:System.Windows.Controls.ControlTemplate" /> 旨在。</summary>
      <returns>默认值为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 属性不得为 null 模板的定义是否 <see cref="T:System.Windows.Controls.ContentPresenter" />。</exception>
      <exception cref="T:System.ArgumentException">指定的类型是无效的。<see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 必须是或继承自 <see cref="T:System.Windows.Controls.Control" />, 、 <see cref="T:System.Windows.Controls.Page" />, ，或 <see cref="T:System.Windows.Navigation.PageFunctionBase" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.Triggers">
      <summary>获取一套 <see cref="T:System.Windows.TriggerBase" /> 应用属性更改或根据执行操作的对象指定了条件。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> 对象的集合。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
      <summary>获取或设置交替行上使用的背景画笔。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> 绘制 n 不由每个第 n 个行的背景 <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 属性。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
      <summary>获取或设置一个值，该值指示是否可水平滚动行详细信息。</summary>
      <returns>true 如果不能滚动行详细信息;，否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
      <summary>获取或设置一个值，该值指示是否自动创建列。</summary>
      <returns>true 如果列创建的自动保存功能。否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserAddRows">
      <summary>获取或设置一个值，该值指示用户是否可以添加新行定向到 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>true 如果用户可以添加新行;否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserDeleteRows">
      <summary>获取或设置一个值，该值指示用户是否可以删除行从 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>如果用户可以删除行，为 true；否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
      <summary>获取或设置一个值，该值指示用户是否可以通过使用鼠标拖动列标题更改列的显示顺序。</summary>
      <returns>true 如果用户可以重新排列列;否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
      <summary>获取或设置一个值，该值指示用户是否可以通过使用鼠标调整列的宽度。</summary>
      <returns>true 如果用户可以调整列宽，则为否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeRows">
      <summary>获取或设置一个值，该值指示用户是否可以通过使用鼠标调整行的高度。</summary>
      <returns>true 如果用户可以更改的行; 高度否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
      <summary>获取或设置一个值，该值指示用户是否可以单击列标题来对列排序。</summary>
      <returns>true 如果用户可以对列排序;，否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset">
      <summary>获取的水平偏移量 <see cref="T:System.Windows.Controls.DataGridCellsPanel" />。</summary>
      <returns>单元格面板水平偏移量。 注册的默认值为 0.0。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellStyle">
      <summary>获取或设置应用于中的所有单元格的样式 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>应用于中的单元格的样式 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ClipboardCopyMode">
      <summary>获取或设置一个值，指示如何将内容复制到剪贴板。</summary>
      <returns>一个枚举值，该值指示如何将内容复制到剪贴板。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
      <summary>获取或设置列标题行的高度。</summary>
      <returns>列标题的高度行，在 device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="F:System.Double.NaN" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
      <summary>获取或设置应用于中的所有列标题的样式 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>应用于中的所有列标题的样式 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.Columns">
      <summary>获取一个集合中的所有列包含 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>中的列集合 <see cref="T:System.Windows.Controls.DataGrid" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
      <summary>获取或设置标准宽度和列和中的标头的大小调整模式 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>宽度和在中调整大小模式的列和标头， device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="P:System.Windows.Controls.DataGridLength.SizeToHeader" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentCell">
      <summary>获取或设置具有焦点的单元格。</summary>
      <returns>有关具有焦点的单元格的信息。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
      <summary>获取或设置包含当前单元格的列。</summary>
      <returns>包含当前单元格的列。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
      <summary>获取包含当前单元格的行绑定的数据项。</summary>
      <returns>数据项绑定到包含当前单元格的行。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DeleteCommand">
      <summary>表示指示想要删除当前行的命令。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ApplicationCommands.Delete" /> 指示想要删除当前行的命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
      <summary>获取或设置呈现拖动指示器显示同时拖动列标题时使用的样式。</summary>
      <returns>在拖动时应用于列标题的样式。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
      <summary>获取或设置用于指示何时拖动列标题的放置位置的样式。</summary>
      <returns>应用于列标题的样式。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization">
      <summary>获取或设置一个值，该值指示是否启用列虚拟化。</summary>
      <returns>true 如果启用列虚拟化;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableRowVirtualization">
      <summary>获取或设置一个值，该值指示是否启用行虚拟化。</summary>
      <returns>true 如果启用行虚拟化;否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FocusBorderBrushKey">
      <summary>获取引用焦点的单元格的默认边框画笔的键。</summary>
      <returns>引用具有焦点的单元格的默认画笔键。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
      <summary>获取或设置非滚动列的数量。</summary>
      <returns>非滚动列的数量。 注册的默认值为 0。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
      <summary>获取或设置一个值，该值指示显示哪些网格线。</summary>
      <returns>指定在显示的网格线的枚举值之一 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HandlesScrolling">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DataGrid" /> 支持自定义键盘滚动。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
      <summary>获取或设置用于指定行和列标题的可见性的值。</summary>
      <returns>一个枚举值，该值指示行和列标题的可见性。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.All" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibilityConverter">
      <summary>获取将转换的转换器 <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> 到 <see cref="T:System.Windows.Visibility" />。</summary>
      <returns>将转换的转换器 <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> 到 <see cref="T:System.Windows.Visibility" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
      <summary>获取或设置用于绘制水平网格线的画笔。</summary>
      <returns>在行用于绘制水平网格的画笔 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值为黑色 <see cref="T:System.Windows.Media.SolidColorBrush" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值，指示如何水平滚动条显示在 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>指定在水平滚动条的可见的枚举值之一 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
      <summary>获取或设置一个值，该值指示用户是否可以编辑中的值 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>true 如果行和单元格是只读的;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
      <summary>获取或设置列和标头中的最大宽度约束 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>列和标头中的最大宽度 <see cref="T:System.Windows.Controls.DataGrid" />, ，请在 device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="F:System.Double.PositiveInfinity" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
      <summary>获取或设置列和标头中的最小宽度约束 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>最小宽度的列和标头，在 device-independent units (1/96th inch per unit)。 注册的默认值为 20。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinRowHeight">
      <summary>获取或设置行和中的标头的最小高度约束 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>最小高度约束的行，请在 device-independent units (1/96th inch per unit)。 注册的默认值为 0.0。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NewItemMargin">
      <summary>获取或设置新的项目行的边距。</summary>
      <returns>新的项目行的边距。注册的默认值为 0。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset">
      <summary>获取在视区的可滚动列的水平偏移量。</summary>
      <returns>可滚动列的水平偏移量。 注册的默认值为 0.0。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowBackground">
      <summary>获取或设置用于行背景的默认画笔。</summary>
      <returns>绘制一个行的背景画笔。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsScrollingConverter">
      <summary>获取将转换为一个布尔值转换器 <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />。</summary>
      <returns>将转换为一个布尔值转换器 <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
      <summary>获取或设置用于显示行详细信息的模板。</summary>
      <returns>该模板，用于显示行详细信息。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector">
      <summary>获取或设置用于行详细信息的模板选择器。</summary>
      <returns>用于行详细信息模板选择器。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
      <summary>获取或设置一个值，该值指示何时显示某行的详细信息部分。</summary>
      <returns>指定的可见性行详细信息的枚举值之一。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth">
      <summary>获取呈现的行标题列的宽度。</summary>
      <returns>在中呈现的行标题宽度 device-independent units (1/96th inch per unit)。 注册的默认值为 0.0。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
      <summary>获取或设置应用于所有行标题的样式。</summary>
      <returns>应用于中的所有行标题的样式 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplate">
      <summary>获取或设置行标题的模板。</summary>
      <returns>用于行标题的模板。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector">
      <summary>获取或设置行标题的模板选择器。</summary>
      <returns>行标题的的模板选择器。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
      <summary>获取或设置行标题列的宽度。</summary>
      <returns>行标题列的宽度，请在 device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="F:System.Double.NaN" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeight">
      <summary>获取或设置的所有行的建议的高度。</summary>
      <returns>行的高度，请在 device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="F:System.Double.NaN" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyle">
      <summary>获取或设置应用到的所有行的样式。</summary>
      <returns>应用于中的所有行的样式 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyleSelector">
      <summary>获取或设置行的样式选择器。</summary>
      <returns>行样式选择器。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate">
      <summary>获取或设置用于以可视方式指示行验证中的错误的模板。</summary>
      <returns>用于以可视方式指示行验证中的错误模板。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationRules">
      <summary>获取用于验证每个行中的数据的规则。</summary>
      <returns>用于验证每个行中的数据的规则。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectAllCommand">
      <summary>表示指示想要选择的所有单元格的命令 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ApplicationCommands.SelectAll" /> 指示想要选择的所有单元格的命令 <see cref="T:System.Windows.Controls.DataGrid" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedCells">
      <summary>获取当前选定的单元格的列表。</summary>
      <returns>当前选定的单元格的列表。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
      <summary>获取或设置一个值，该值指示行和单元格在选择 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>指定行和单元格中选定的枚举值之一 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionUnit">
      <summary>获取或设置一个值，该值指示是否可以在选择的行、 单元格，或这两者 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>指定是否可以在选择的行、 单元格，或这两者的枚举值之一 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 <see cref="F:System.Windows.Controls.DataGridSelectionUnit.FullRow" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
      <summary>获取或设置用于绘制垂直网格线的画笔。</summary>
      <returns>在行用于绘制垂直网格的画笔 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值为黑色 <see cref="T:System.Windows.Media.SolidColorBrush" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
      <summary>获取或设置一个值，指示如何垂直滚动条显示在 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>指定在垂直滚动条的可见的枚举值之一 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值是 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否应取消该事件。</summary>
      <returns>true 如果应取消事件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>获取或设置所生成的列。</summary>
      <returns>所生成的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyDescriptor">
      <summary>获取绑定到所生成的列的属性的描述符。</summary>
      <returns>一个包含属性的元数据的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
      <summary>获取绑定到所生成的列的属性的名称。</summary>
      <returns>绑定到所生成的列的属性的名称。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
      <summary>获取绑定到所生成的列的属性的类型。</summary>
      <returns>绑定到所生成的列的属性的类型。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否应取消该事件。</summary>
      <returns>true 如果应取消事件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
      <summary>获取包含要编辑该单元格的列。</summary>
      <returns>包含要编辑的单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
      <summary>获取有关导致单元格进入编辑模式的用户笔势的信息。</summary>
      <returns>有关导致单元格输入的用户笔势的信息编辑模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
      <summary>获取包含要编辑该单元格的行。</summary>
      <returns>包含要编辑的单元格的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
      <summary>获取或设置将列与数据源中的属性相关联的绑定。</summary>
      <returns>表示列的数据绑定的对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ClipboardContentBinding">
      <summary>获取或设置要获取或设置单元格适合于剪贴板的内容时使用的绑定对象。</summary>
      <returns>一个表示绑定的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
      <summary>获取或设置在呈现的列将显示处于编辑模式下的单元格的元素时使用的样式。</summary>
      <returns>所编辑的元素在呈现时使用的样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
      <summary>获取或设置呈现列未处于编辑模式的单元格显示的元素时使用的样式。</summary>
      <returns>在呈现仅显示元素时使用的样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.Column">
      <summary>获取或设置该单元所在的列。</summary>
      <returns>该单元所在的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsEditing">
      <summary>获取或设置一个值，指示该单元格是否处于编辑模式。</summary>
      <returns>true 如果该单元格处于，编辑模式，则为否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsReadOnly">
      <summary>获取一个值，该值指示是否可以该单元格置于编辑模式。</summary>
      <returns>true 如果单元格不能置于，编辑模式，则为否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsSelected">
      <summary>获取或设置一个值，该值指示是否选择该单元格。</summary>
      <returns>true 如果该单元格处于选中状态，，否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Column">
      <summary>获取包含该事件发生的单元格的列。</summary>
      <returns>包含发生该事件的单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Content">
      <summary>获取或设置发生该事件的单元格的文本值。</summary>
      <returns>发生此事件的单元格的文本值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Item">
      <summary>获取包含该事件发生的单元格的行的数据项目。</summary>
      <returns>包含发生该事件的单元格的行的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否应取消该事件。</summary>
      <returns>true 如果应取消事件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
      <summary>获取包含该事件发生的单元格的列。</summary>
      <returns>包含发生该事件的单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
      <summary>获取一个值，该值指示是否取消还是提交编辑。</summary>
      <returns>一个值，该值指示是否取消还是提交编辑。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
      <summary>获取该单元格处于编辑模式显示的元素。</summary>
      <returns>该单元格处于编辑模式显示元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
      <summary>获取包含该事件发生的单元格的行。</summary>
      <returns>包含发生该事件的单元格的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Column">
      <summary>获取包含该单元格的列。</summary>
      <returns>包含该单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.IsValid">
      <summary>获取一个值，该值指示结构是否包含有效信息。</summary>
      <returns>true 如果结构包含有效信息;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Item">
      <summary>获取包含该单元格的行的数据项目。</summary>
      <returns>包含该单元格的行的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultEditingElementStyle">
      <summary>获取默认值为 <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultElementStyle">
      <summary>获取默认值为 <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
      <summary>获取或设置一个值，该值指示是否对承载 <see cref="T:System.Windows.Controls.CheckBox" /> 控件启用以下三种状态或两个。</summary>
      <returns>true 如果承载的控件支持三种状态;， false 确定他们是否支持两种状态。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Column">
      <summary>获取包含要复制的单元格的列。</summary>
      <returns>包含要复制的单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Content">
      <summary>获取要复制的单元格的文本值。</summary>
      <returns>要复制的单元格的文本值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Item">
      <summary>获取包含要复制的单元格的行的数据项目。</summary>
      <returns>包含要复制的单元格的行的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
      <summary>在获取列的当前宽度 device-independent units (1/96th inch per unit)。</summary>
      <returns>中的列的宽度 device-independent units (1/96th inch per unit)。 注册的默认值为 0。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
      <summary>获取或设置一个值，该值指示用户是否可以通过拖动列标题来更改的列的显示位置。</summary>
      <returns>true 如果用户可以将列标头拖动到新位置;否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
      <summary>获取或设置一个值，该值指示用户是否可以通过使用鼠标调整列的宽度。</summary>
      <returns>true 如果用户可以调整列;否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
      <summary>获取或设置一个值，该值指示用户是否可以单击列标题来对列排序。</summary>
      <returns>true 如果用户可以对该列进行排序，否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
      <summary>获取或设置用于呈现的列中的单元格的样式。</summary>
      <returns>用于呈现的列中的单元格样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding">
      <summary>获取或设置要获取或设置单元格适合于剪贴板的内容时使用的绑定对象。</summary>
      <returns>一个表示绑定的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DataGridOwner">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGrid" /> 包含此列的控件。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> 包含此列的控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
      <summary>获取或设置相对于中的其他列的列的显示位置 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>从零开始的列中，因为它的位置显示在关联 <see cref="T:System.Windows.Controls.DataGrid" />。 注册的默认值为-1。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle">
      <summary>获取或设置要在拖动操作期间应用于列标题的样式对象。</summary>
      <returns>要在拖动操作期间将应用于列标题的样式对象。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Header">
      <summary>获取或设置列标题的内容。</summary>
      <returns>列的标头内容。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat">
      <summary>获取或设置要应用于列标题的内容的格式模式。</summary>
      <returns>一个字符串值，该值表示格式设置模式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStyle">
      <summary>获取或设置呈现列标题时所使用的样式。</summary>
      <returns>用于呈现列标题，则该样式或 null, ，则应使用 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 设置。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplate">
      <summary>获取或设置定义的可视表示形式的列标题的模板。</summary>
      <returns>一个对象，它定义的可视表示形式的列标题。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector">
      <summary>获取或设置要使用的列标题的模板中选择的对象。</summary>
      <returns>选择的模板对象。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated">
      <summary>获取一个值，该值指示该列是否自动生成。</summary>
      <returns>true 如果列是自动生成的;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsFrozen">
      <summary>获取一个值，该值指示是否已阻止列水平滚动。</summary>
      <returns>true 如果列不能滚动水平空间。否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsReadOnly">
      <summary>获取或设置一个值，该值指示是否可以编辑列的单元格中。</summary>
      <returns>true 如果不能编辑列的单元格中，则否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MaxWidth">
      <summary>获取或设置列的最大宽度约束。</summary>
      <returns>最大列宽度，请在 device-independent units (1/96th inch per unit)。 注册的默认值是 <see cref="F:System.Double.PositiveInfinity" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MinWidth">
      <summary>获取或设置列的最小宽度约束。</summary>
      <returns>最小列宽度，请在 device-independent units (1/96th inch per unit)。 注册的默认值为 20。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortDirection">
      <summary>获取或设置列的排序方向 （升序或降序）。</summary>
      <returns>一个表示排序方向的值。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
      <summary>获取或设置一个属性名称或句点分隔层次结构的属性名称，该值指示要作为排序依据的成员。</summary>
      <returns>要作为排序依据的数据项目成员的路径。 注册的默认值为空字符串 ("")。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Visibility">
      <summary>获取或设置列的可见性。</summary>
      <returns>枚举值，该值指定列可见性。 注册的默认值是 <see cref="F:System.Windows.Visibility.Visible" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Width">
      <summary>获取或设置列的宽度或自动调整大小模式。</summary>
      <returns>一个结构，表示列的宽度或自动调整大小模式。 注册的默认值是 <see cref="P:System.Windows.Controls.DataGridLength.Auto" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
      <summary>获取与事件相关的列。</summary>
      <returns>一个对象，表示与事件相关的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否在完成之前停止重新排序操作。</summary>
      <returns>true 如果在完成; 之前停止重新排序操作否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
      <summary>获取或设置用于显示可视的指示器的列所拖动的标题的控件。</summary>
      <returns>用于显示拖动的列标题的控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
      <summary>获取或设置用于在列拖动操作期间显示可视的指示器的当前放置位置的控件。</summary>
      <returns>用于在某一列显示放置位置指示器的控件拖动操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ClipboardContentBinding">
      <summary>获取或设置要获取或设置单元格适合于剪贴板的内容时使用的绑定对象。</summary>
      <returns>一个表示绑定的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultEditingElementStyle">
      <summary>获取默认值为 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 属性。</summary>
      <returns>默认值为 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultElementStyle">
      <summary>获取默认值为 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />。</summary>
      <returns>默认值为 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath">
      <summary>获取或设置要提供的可视表示形式的对象的源对象上的值的路径。</summary>
      <returns>源对象上的值的路径。 注册的默认值为空字符串 ("")。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle">
      <summary>获取或设置在呈现的列将显示处于编辑模式下的单元格的元素时使用的样式。</summary>
      <returns>所编辑的元素在呈现时使用的样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle">
      <summary>获取或设置呈现列未处于编辑模式的单元格显示的元素时使用的样式。</summary>
      <returns>在呈现仅显示元素时使用的样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource">
      <summary>获取或设置一个集合，其中用于生成内容的组合框控件。</summary>
      <returns>一个集合，用于生成该组合框控件的内容。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding">
      <summary>获取或设置当前选定项的绑定。</summary>
      <returns>所选的项的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding">
      <summary>获取或设置选定的项，通过使用获得的值 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" />。</summary>
      <returns>所选的值的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath">
      <summary>获取或设置用于获取路径 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 从 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />。</summary>
      <returns>要获取所选的值的路径。 注册的默认值为空字符串 ("")。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding">
      <summary>获取或设置文本的绑定中的文本框部分的 <see cref="T:System.Windows.Controls.ComboBox" /> 控件。</summary>
      <returns>当前选定项的文本的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBlockComboBoxStyleKey">
      <summary>获取要应用到一个只读的组合框的样式的资源键。</summary>
      <returns>样式的键。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding">
      <summary>获取或设置超链接文本的绑定。</summary>
      <returns>绑定到超链接文本。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName">
      <summary>获取或设置超链接的目标窗口或框架的名称。</summary>
      <returns>目标窗口或框架的名称。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Auto">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示标准的自动调整大小模式。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示标准的自动调整大小模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DesiredValue">
      <summary>获取元素所需的计算的像素值。</summary>
      <returns>为该元素的大小计算的像素数。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DisplayValue">
      <summary>获取分配给元素的大小的像素值。</summary>
      <returns>为元素分配的像素数。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
      <summary>获取一个值，该值指示此实例调整元素大小基于固定的像素值。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
      <summary>获取一个值，该值指示是否此实例会自动调整大小基于单元格的内容和列标题元素。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
      <summary>获取一个值，该值指示是否此实例会自动调整大小基于单元格的内容的元素。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
      <summary>获取一个值，该值指示是否此实例会自动调整大小基于的标头的元素。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsStar">
      <summary>获取一个值，该值指示是否此实例会自动调整大小基于加权比例的可用空间元素。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示基于单元格的自动调整大小模式。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示基于单元格的自动调整大小模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示基于标头的自动调整大小模式。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构，它表示基于标头的自动调整大小模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.UnitType">
      <summary>获取用于确定如何计算元素的大小的类型。</summary>
      <returns>表示如何确定大小的类型。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Value">
      <summary>获取数值的绝对值 <see cref="T:System.Windows.Controls.DataGridLength" /> 以像素为单位。</summary>
      <returns>数值的绝对值 <see cref="T:System.Windows.Controls.DataGridLength" /> 像素为单位，或者，如果 1.0 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
      <summary>获取包含要编辑该单元格的列。</summary>
      <returns>包含要编辑的单元格的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
      <summary>获取单元格处于编辑模式的列将显示的元素。</summary>
      <returns>处于编辑模式下的单元格的列将显示元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
      <summary>获取有关导致单元格进入编辑模式的用户笔势的信息。</summary>
      <returns>有关导致单元格输入的用户笔势的信息编辑模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
      <summary>获取包含要编辑该单元格的行。</summary>
      <returns>包含要编辑的单元格的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.AlternationIndex">
      <summary>获取一套交替行中的行的索引。</summary>
      <returns>交替行集中的行的索引。 注册的默认值为 0。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
      <summary>获取或设置用于显示详细信息部分中的行的模板。</summary>
      <returns>使用以显示的行的模板的详细信息部分或 null 使用 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 设置。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector">
      <summary>获取或设置提供了自定义逻辑来选择行详细信息模板的模板选择器。</summary>
      <returns>用于选择行详细信息模板的模板选择器。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
      <summary>获取或设置一个值，该值指示何时显示详细信息部分中的行。</summary>
      <returns>一个值，指定的可见性行详细信息。 注册的默认值是 <see cref="F:System.Windows.Visibility.Collapsed" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Header">
      <summary>获取或设置一个对象，表示行标题内容。</summary>
      <returns>行标题内容。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
      <summary>获取或设置行标题在呈现时使用的样式。</summary>
      <returns>所呈现的行标题时所使用的样式。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplate">
      <summary>获取或设置用于显示行标题的模板。</summary>
      <returns>用于显示行标题的模板或 null 使用 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 设置。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector">
      <summary>获取或设置用于选择行标题模板提供自定义逻辑的模板选择器。</summary>
      <returns>用于选择行标题模板的模板选择器。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsEditing">
      <summary>获取一个值，该值指示行是否处于编辑模式。</summary>
      <returns>true 如果在行处于编辑模式，则为否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsNewItem">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.DataGridRow" /> 是为新项或尚未提交的项的占位符。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.DataGridRow" /> 是为新项或项尚未提交; 否则为一个占位符 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsSelected">
      <summary>获取或设置一个值，指示行是否被选定。</summary>
      <returns>如果该行被选定，则为 true；否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Item">
      <summary>获取或设置行是表示的数据项。</summary>
      <returns>行表示的数据项。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ItemsPanel">
      <summary>获取或设置定义行中单元格的布局进行控制的面板的模板。</summary>
      <returns>一个模板，它定义用于在行中的单元格的布局面板。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate">
      <summary>获取或设置用于以可视方式指示行验证中的错误的模板。</summary>
      <returns>用于以可视方式指示行验证中的错误的模板或 null 使用 <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 设置。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
      <summary>获取一份 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 表示要复制的单元格的文本值的值。</summary>
      <returns>一份 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 表示要复制的单元格的文本值的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.EndColumnDisplayIndex">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含最后一个行中的选定单元格的列的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含最后一个行中的选定单元格的列的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
      <summary>获取一个值，该值指示是否发生此事件的一行表示列标题。</summary>
      <returns>true 如果行表示列标题;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item">
      <summary>获取发生事件的行的数据项目。</summary>
      <returns>发生事件的行的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.StartColumnDisplayIndex">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含行中第一个选定的单元格的列的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 包含行中第一个选定的单元格的列的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>作为框架元素中获取行详细信息部分。</summary>
      <returns>作为框架元素行详细信息部分。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
      <summary>获取发生事件的行。</summary>
      <returns>发生此事件的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否应取消该事件。</summary>
      <returns>true 如果应取消事件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
      <summary>获取一个值，该值指示是否取消还是提交编辑。</summary>
      <returns>一个值，该值指示是否取消还是提交编辑。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
      <summary>获取发生事件的行。</summary>
      <returns>发生此事件的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
      <summary>获取发生事件的行。</summary>
      <returns>发生此事件的行。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridSortingEventArgs.Handled">
      <summary>获取或设置一个值，指定是否处理路由的事件。</summary>
      <returns>true 如果已处理该事件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
      <summary>获取或设置要用于显示的单元格在处于编辑模式的内容的模板。</summary>
      <returns>用于显示的内容的单元格处于编辑模式模板。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector">
      <summary>获取或设置确定要用于显示的单元格处于编辑模式的内容的模板的对象。</summary>
      <returns>确定要用于显示的单元格处于编辑模式的内容的模板的对象。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
      <summary>获取或设置要用于显示未处于编辑模式的单元格的内容的模板。</summary>
      <returns>要用于显示未处于编辑模式下的单元格的内容的模板。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelector">
      <summary>获取或设置确定要用于显示未处于编辑模式下的单元格的内容的模板的对象。</summary>
      <returns>确定要使用的模板的对象。 注册的默认值是 null。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
      <summary>获取或设置列中的单元格的内容的字体系列。</summary>
      <returns>字体系列的列中的单元格的内容。 注册的默认值是 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
      <summary>获取或设置列中的单元格的内容的字体大小。</summary>
      <returns>列中的单元格的内容的字体大小。 注册的默认值是 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
      <summary>获取或设置列中的单元格的内容的字体样式。</summary>
      <returns>列中的单元格的内容的字体样式。 注册的默认值是 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
      <summary>获取或设置列中的单元格的内容的字体粗细。</summary>
      <returns>列中的单元格的内容字体粗细。 注册的默认值是 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用于绘制单元格的列中的文本内容。</summary>
      <returns>用于绘制单元格的列中的内容的画笔。 注册的默认值是 <see cref="P:System.Windows.SystemColors.ControlTextBrush" />。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>获取或设置为不可选择的日期的标记集合。</summary>
      <returns>不能选择的日期的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>获取或设置呈现日历时所使用的样式。</summary>
      <returns>在呈现日历时使用的样式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>获取或设置要显示的日期。</summary>
      <returns>要显示的日期。 默认值为 <see cref="P:System.DateTime.Today" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的日期不在定义的范围 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />。 和<see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>获取或设置要显示的最后日期。</summary>
      <returns>要显示的最后一个日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>获取或设置要显示的第一个日期。</summary>
      <returns>要显示的第一个日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>获取或设置在一天中被视为周的开始。</summary>
      <returns>一个 <see cref="T:System.DayOfWeek" /> 表示周的开始。 默认值是 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> 由当前区域性。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DatePicker" /> 具有焦点。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.DatePicker" /> 具有焦点; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>获取或设置一个值，该值指示是否下拉列表 <see cref="T:System.Windows.Controls.Calendar" /> 是打开还是关闭。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Calendar" /> 打开; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>获取或设置一个值，该值指示是否将突出显示当前日期。</summary>
      <returns>true 如果突出显示当前日期;，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>获取或设置当前选定的日期。</summary>
      <returns>当前选定的日期。 默认值为 null。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的日期不在定义的范围 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 和 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />, ，或指定的日期是 <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> 集合。</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>获取或设置用于显示所选的日期的格式。</summary>
      <returns>用于显示所选的日期格式。 默认值为 <see cref="F:System.Windows.Controls.DatePickerFormat.Long" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的格式不正确。</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>获取由显示的文本 <see cref="T:System.Windows.Controls.DatePicker" />, ，或设置选定的日期。</summary>
      <returns>显示的文本 <see cref="T:System.Windows.Controls.DatePicker" />。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>获取与关联的初始异常 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
      <returns>与验证失败关联的异常。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>获取或设置导致的文本 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
      <returns>导致验证失败的文本。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>获取或设置一个值，该值指示是否 <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> 应引发。</summary>
      <returns>true 如果应引发异常;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Decorator.Child">
      <summary>获取或设置的单个子元素 <see cref="T:System.Windows.Controls.Decorator" />。</summary>
      <returns>单个子元素 <see cref="T:System.Windows.Controls.Decorator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Decorator.LogicalChildren">
      <summary>获取可用于循环的逻辑的子元素的枚举器 <see cref="T:System.Windows.Controls.Decorator" />。</summary>
      <returns>一个枚举器可用于循环逻辑子元素的 <see cref="T:System.Windows.Controls.Decorator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Decorator.VisualChildrenCount">
      <summary>获取一个值，它等于此实例的可视子元素的数目 <see cref="T:System.Windows.Controls.Decorator" />。</summary>
      <returns>可视子元素数。</returns>
    </member>
    <member name="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup">
      <summary>获取或设置一个值，该值将 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 或 <see cref="T:System.Windows.Controls.RowDefinition" /> 标识为已定义的共享调整大小属性的组的成员。</summary>
      <returns>标识共享大小组的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.Dock">
      <summary>获取或设置一个值，该值指示一个子元素在父级 <see cref="T:System.Windows.Controls.DockPanel" /> 中的位置。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.DockPanel" /> 中子元素的位置。 默认值为 <see cref="F:System.Windows.Controls.Dock.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.DockPanel" /> 中的最后一个子元素是否拉伸以填充剩余的可用空间。</summary>
      <returns>如果最后一个子元素拉伸以填充剩余的空间，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以进一步缩小。</summary>
      <returns>true 如果控件可以缩小的详细信息;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以进一步放大。</summary>
      <returns>true 如果控件可以放大的详细信息;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveDown">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以在文档中进一步向下移动。</summary>
      <returns>true 如果控件可以进一步在文档中; 向下移动，否则为 false 如果文档是在底部。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveLeft">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以在文档中进一步向左移动。</summary>
      <returns>true 如果控件可以将多个向左移动在文档中;否则为 false 如果文档是在最左侧边缘。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveRight">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以在文档中进一步向右移动。</summary>
      <returns>true 如果控件可以移动到右侧的详细信息，在文档中;否则为 false 如果文档是在最右侧边缘。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveUp">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DocumentViewer" /> 可以进一步在文档中向上移动。</summary>
      <returns>true 如果控件可以在文档; 中进一步向上移动，否则为 false 如果文档是在最顶端的边缘。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentHeight">
      <summary>获取分页文档的整体垂直高度。</summary>
      <returns>以与设备无关的像素指定的分页内容的整体垂直高度。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentWidth">
      <summary>获取分页文档的整体水平宽度。</summary>
      <returns>内容布局区域的当前水平宽度，以与设备无关的像素为单位。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToHeightCommand">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedUICommand" /> 执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作。</summary>
      <returns>执行的路由的命令 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcrossCommand">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedUICommand" /> 执行 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作。</summary>
      <returns>执行的路由的命令 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToWidthCommand">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedUICommand" /> 执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作。</summary>
      <returns>执行的路由的命令 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalOffset">
      <summary>获取或设置水平滚动条位置。</summary>
      <returns>采用与设备无关的像素指定的当前水平滚动位置。  初始默认值是 0.0。</returns>
      <exception cref="T:System.ArgumentException">指定要设置的值为负。</exception>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing">
      <summary>获取或设置页面之间的水平间距。</summary>
      <returns>所显示页面之间的水平间距，以与设备无关的像素为单位。  默认值为 10.0。</returns>
      <exception cref="T:System.ArgumentException">指定要设置的值为负。</exception>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross">
      <summary>获取或设置一个值，该值定义要显示的页列最大数量。</summary>
      <returns>最大页面要显示的列数。  默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ShowPageBorders">
      <summary>获取或设置一个值，该值指示是否显示阴影页边框。</summary>
      <returns>true 如果显示阴影边框;否则为 false。  默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalOffset">
      <summary>获取或设置垂直滚动条的位置。</summary>
      <returns>当前垂直滚动条的位置偏移量，以与设备无关的像素为单位。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing">
      <summary>获取或设置显示页面之间的垂直间距。</summary>
      <returns>显示页面之间的垂直间距，以与设备无关的像素为单位。  默认值为 10.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportHeight">
      <summary>获取可滚动的内容区域的垂直大小。</summary>
      <returns>可滚动的内容区域的垂直大小（以与设备无关的像素为单位）。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportWidth">
      <summary>获取可滚动的内容区域的水平大小。</summary>
      <returns>可滚动内容区域的水平大小（以与设备无关的像素为单位）。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewThumbnailsCommand">
      <summary>获取执行 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作的 <see cref="T:System.Windows.Input.RoutedUICommand" />。</summary>
      <returns>执行 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作的路由命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.Zoom">
      <summary>获取或设置文档缩放百分比。</summary>
      <returns>表示为一个值的形式缩放百分比。  默认值为 100.0，对应于 100.0%。</returns>
    </member>
    <member name="P:System.Windows.Controls.Expander.ExpandDirection">
      <summary>获取或设置在其中的方向 <see cref="T:System.Windows.Controls.Expander" /> 内容窗口随即打开。</summary>
      <returns>其中一个 <see cref="T:System.Windows.Controls.ExpandDirection" /> 定义哪个方向的值内容窗口中打开。 默认值为 <see cref="F:System.Windows.Controls.ExpandDirection.Down" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Expander.IsExpanded">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Expander" /> 内容窗口是否可见。</summary>
      <returns>true 如果展开内容窗口中;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 可以降低。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别可减少; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 可以增加。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别可提高; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 当控件没有焦点时，显示所选的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 显示所选的文本时 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 不具有焦点; 否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 具有焦点和选择的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 当文本框没有焦点，则将显示所选的文本否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom">
      <summary>获取或设置最大允许 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</summary>
      <returns>允许的最大缩放级别 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />, ，以百分比表示。 默认值为 200.0 （最大缩放比例为 200%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom">
      <summary>获取或设置最小允许 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</summary>
      <returns>允许的最小缩放级别 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />, ，以百分比表示。 默认值为 80.0 （最小缩放比例为 80%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Selection">
      <summary>获取所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</summary>
      <returns>所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush">
      <summary>获取或设置用于突出显示所选的文本的画笔。</summary>
      <returns>突出显示选定的文本的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity">
      <summary>获取或设置的不透明度 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />。</summary>
      <returns>不透明度 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />。 默认值为 0.4。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom">
      <summary>获取或设置当前缩放级别 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</summary>
      <returns>当前缩放级别，以百分比表示。 默认值为 100.0 （100%缩放级别）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement">
      <summary>获取或设置缩放增量。</summary>
      <returns>当前的缩放增量，解释为一个百分比。 默认值为 10.0 （缩放增量为 10%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 可以降低。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别可减少; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 才能执行 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令以跳转到下一步的页面内容。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 可以跳转到下一步的页面内容; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 才能执行 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令以跳转到前一页的内容。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 可以跳转到前一页的内容; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 可以增加。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别可提高; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Document">
      <summary>获取或设置一个 <see cref="T:System.Windows.Documents.FlowDocument" />，它可托管 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 显示的内容。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.FlowDocument" />，用于托管 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 显示的内容。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 启用路由的命令。</summary>
      <returns>true 若要启用 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 当控件没有焦点时，显示所选的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 显示所选的文本时 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 不具有焦点; 否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" /> 可用作查看模式。</summary>
      <returns>true 若要指示该单页查看模式可用，否则为 false。 默认值为 true。</returns>
      <exception cref="T:System.ArgumentException">此属性设置为 false 时 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 还有 false。</exception>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 启用路由的命令。</summary>
      <returns>true 若要启用 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> 可用作查看模式。</summary>
      <returns>true 若要指示 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> 可用以查看模式; 否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.ArgumentException">此属性设置为 false 时 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 还有 false。</exception>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 具有焦点和选择的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 当文本框没有焦点，则将显示所选的文本否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> 可用作查看模式。</summary>
      <returns>true 若要指示 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> 可用以查看模式; 否则为 false。 默认值为 true。</returns>
      <exception cref="T:System.ArgumentException">此属性设置为 false 时 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 还有 false。</exception>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MaxZoom">
      <summary>获取或设置最大允许 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>允许的最大 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentReader" />, ，以百分比表示。 默认值为 200.0 （最大缩放比例为 200%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MinZoom">
      <summary>获取或设置最小允许 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>允许的最小 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentReader" />, ，以百分比表示。 默认值为 80.0 （最小缩放比例为 80%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageCount">
      <summary>获取所承载的内容的当前显示页面数 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>当前显示页的数目由承载的内容 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageNumber">
      <summary>获取当前显示页的页码。</summary>
      <returns>当前显示页的页码。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Selection">
      <summary>获取所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush">
      <summary>获取或设置用于突出显示所选的文本的画笔。</summary>
      <returns>突出显示选定的文本的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity">
      <summary>获取或设置的不透明度 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />。</summary>
      <returns>不透明度 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />。 默认值为 0.4。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ViewingMode">
      <summary>获取或设置的查看模式 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>其中一个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值，该值指定的查看模式。 默认值为 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Zoom">
      <summary>获取或设置当前缩放级别。</summary>
      <returns>当前缩放级别，以百分比表示。 默认值为 100.0 （100%的缩放级别） 中。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement">
      <summary>获取或设置缩放增量。</summary>
      <returns>当前的缩放增量，解释为一个百分比。 默认值为 10.0 （缩放增量为 10%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 可以降低。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别可减少; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 可以增加。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别可提高; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Document">
      <summary>获取或设置一个 <see cref="T:System.Windows.Documents.FlowDocument" />，它可托管 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 显示的内容。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.FlowDocument" />，用于托管 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 显示的内容。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否显示水平滚动条。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值之一。 默认值是 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 当控件没有焦点时，显示所选的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 显示所选的文本时 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 不具有焦点; 否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 具有焦点和选择的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 当文本框没有焦点，则将显示所选的文本否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled">
      <summary>获取或设置一个值，该值指示是否选定内容中的内容 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 已启用。</summary>
      <returns>true 若要表明启用了所选内容;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 工具栏是否可见。</summary>
      <returns>true 若要指示工具栏可见。否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom">
      <summary>获取或设置最大允许 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>允许的最大 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />, ，以百分比表示。 默认值为 200.0 （最大缩放比例为 200%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom">
      <summary>获取或设置最小允许 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>允许的最小 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />, ，以百分比表示。 默认值为 80.0 （最小缩放比例为 80%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Selection">
      <summary>获取所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>所选的内容的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush">
      <summary>获取或设置用于突出显示所选的文本的画笔。</summary>
      <returns>突出显示选定的文本的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity">
      <summary>获取或设置的不透明度 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />。</summary>
      <returns>不透明度 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />。 默认值为 0.4。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否显示垂直滚动条。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom">
      <summary>获取或设置当前缩放级别。</summary>
      <returns>当前缩放级别，以百分比表示。 默认值为 100.0 （100%缩放级别）。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement">
      <summary>获取或设置缩放增量。</summary>
      <returns>当前的缩放增量，解释为一个百分比。 默认值为 10.0 （缩放增量为 10%）。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.BackStack">
      <summary>返回 <see cref="T:System.Collections.IEnumerable" /> 用于枚举后退导航历史记录中的条目 <see cref="T:System.Windows.Controls.Frame" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 如果至少一个条目已添加后退导航历史记录。 如果没有条目，或 <see cref="T:System.Windows.Controls.Frame" /> 不拥有其自己的导航历史记录， <see cref="P:System.Windows.Controls.Frame.BackStack" /> 是 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.BaseUri">
      <summary>获取或设置基 uniform resource identifier (URI) 为 <see cref="T:System.Windows.Controls.Frame" />。</summary>
      <returns>基 uniform resource identifier (URI) 的 <see cref="T:System.Windows.Controls.Frame" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoBack">
      <summary>获取一个值，该值指示导航历史记录中是否有至少一个条目。</summary>
      <returns>true 如果在后退导航历史记录; 中没有至少一个条目 false 如果后退导航历史记录中没有任何条目或 <see cref="T:System.Windows.Controls.Frame" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoForward">
      <summary>获取一个值，该值指示在前进导航历史记录中是否具有至少一个条目。</summary>
      <returns>true 如果在前进导航历史记录; 中没有至少一个条目 false 如果前进导航历史记录中没有任何条目或 <see cref="T:System.Windows.Controls.Frame" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CurrentSource">
      <summary>获取 uniform resource identifier (URI) 上次导航到的内容。</summary>
      <returns>一个 <see cref="T:System.Uri" /> 的内容，如果使用导航到上一次中, 导航 URI; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.ForwardStack">
      <summary>获取 <see cref="T:System.Collections.IEnumerable" /> 用于枚举中的正向导航历史记录条目 <see cref="T:System.Windows.Controls.Frame" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 对象如果至少一个条目已添加到前进导航历史记录或 null 如果没有任何条目或 <see cref="T:System.Windows.Controls.Frame" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.JournalOwnership">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Frame" /> 负责管理其自己的导航历史记录，或者可以导航历史记录管理生成为父导航器 (<see cref="T:System.Windows.Navigation.NavigationWindow" />, ，<see cref="T:System.Windows.Controls.Frame" />)。</summary>
      <returns>一个 <see cref="T:System.Windows.Navigation.JournalOwnership" /> 值，该值指定是否 <see cref="T:System.Windows.Controls.Frame" /> 管理它自己的日志。 默认值为 <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationService">
      <summary>获取 <see cref="T:System.Windows.Navigation.NavigationService" /> ，它由这 <see cref="T:System.Windows.Controls.Frame" /> 来提供导航服务。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Frame" /> 对象，表示 <see cref="T:System.Windows.Navigation.NavigationService" /> 由此 <see cref="T:System.Windows.Controls.Frame" />, ，如果有的话。 否则为 null 返回。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationUIVisibility">
      <summary>获取或设置当 <see cref="T:System.Windows.Controls.Frame" /> 可以显示其导航 UI。</summary>
      <returns>一个 <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> 值，该值指定当 <see cref="T:System.Windows.Controls.Frame" /> 可以显示其导航 UI。 默认值为 <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.SandboxExternalContent">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Frame" /> 隔离外部 可扩展应用程序标记语言 (XAML) 内容在部分信任安全沙盒中 (使用默认 Internet 权限集)。</summary>
      <returns>true 如果内容中被隔离的部分信任安全沙盒;否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 当在部分信任环境中执行应用程序设置。</exception>
    </member>
    <member name="P:System.Windows.Controls.Frame.Source">
      <summary>获取或设置 uniform resource identifier (URI) 的当前内容，或 URI 当前导航到的新内容。</summary>
      <returns>一个 <see cref="T:System.Uri" /> ，其中包含 URI 当前内容，或当前导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>基 URI 的当前上下文。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>获取或设置一个值，该值表示应显示 <see cref="T:System.Windows.Controls.Grid" /> 中的子内容的列。</summary>
      <returns>
        <see cref="T:System.Int32" />，表示应显示子内容的列。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>获取在 <see cref="T:System.Windows.Controls.Grid" /> 的实例上定义的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.Grid" /> 的这一实例上定义的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Grid" /> 中的子内容所跨越的总列数。</summary>
      <returns>表示子内容应跨越的列数的 <see cref="T:System.Int32" />。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.IsSharedSizeScope">
      <summary>获取或设置一个值，该值指示多个 <see cref="T:System.Windows.Controls.Grid" /> 元素共享大小信息。</summary>
      <returns>如果此 <see cref="T:System.Windows.Controls.Grid" /> 实例与另一个 <see cref="T:System.Windows.Controls.Grid" /> 共享大小属性，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.LogicalChildren">
      <summary>获取一个枚举器可循环访问此逻辑子级 <see cref="T:System.Windows.Controls.Grid" />。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>获取或设置一个值，该值指示应显示 <see cref="T:System.Windows.Controls.Grid" /> 中的哪个子内容行。</summary>
      <returns>
        <see cref="T:System.Int32" />，表示应在其中显示子内容的行。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>获取在 <see cref="T:System.Windows.Controls.Grid" /> 的实例上定义的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <returns>在此 <see cref="T:System.Windows.Controls.Grid" /> 实例上定义的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>获取或设置一个值，该值表示在一个 <see cref="T:System.Windows.Controls.Grid" /> 中子内容所跨越的总行数。</summary>
      <returns>表示子内容应跨越的行数的 <see cref="T:System.Int32" />。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>获取或设置一个值，该值指示网格线在此 <see cref="T:System.Windows.Controls.Grid" /> 中是否可见。</summary>
      <returns>如果网格线可见，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.VisualChildrenCount">
      <summary>获取一个值，表示的总次数 <see cref="T:System.Windows.Media.Visual" /> 的此实例内子 <see cref="T:System.Windows.Controls.Grid" />。</summary>
      <returns>
        <see cref="T:System.Int32" /> 它表示总数量的子 <see cref="T:System.Windows.Media.Visual" /> 对象。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.DragIncrement">
      <summary>获取或设置用户，必须将拖动鼠标来调整行或列的最小距离 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。</summary>
      <returns>一个值，表示用户必须使用鼠标拖动的最小距离 <see cref="T:System.Windows.Controls.GridSplitter" /> 来调整行或列。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.KeyboardIncrement">
      <summary>获取或设置每个按箭头键移动的距离 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。</summary>
      <returns>之间的距离， <see cref="T:System.Windows.Controls.GridSplitter" /> 将为每个按箭头键移动。 默认值为 10。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>获取或设置自定义外观、 效果或其他样式属性的样式 <see cref="T:System.Windows.Controls.GridSplitter" /> 是控件预览指示器时，所显示 <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 属性设置为 true。</summary>
      <returns>返回 <see cref="T:System.Windows.Style" /> 预览指示器，以显示可能会更改在 <see cref="T:System.Windows.Controls.Grid" /> 维度移动时 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。 默认值为当前的主题提供的样式。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeBehavior">
      <summary>获取或设置哪些列或行要相对于 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件针对其进行定义的列或行调整其大小。</summary>
      <returns>一个枚举值，该值指示哪些列或行由 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件调整大小。 默认值为 <see cref="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeDirection">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件是否重设行或列的大小。</summary>
      <returns>用于指定是否重设行或列大小的枚举值之一。 默认值为 <see cref="F:System.Windows.Controls.GridResizeDirection.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件更新的列或行的大小，当用户拖动控件。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.GridSplitter" /> 预览版是一个显示; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.AllowsColumnReorder">
      <summary>获取或设置是否列在 <see cref="T:System.Windows.Controls.GridView" /> 可通过拖放操作互换顺序。</summary>
      <returns>true 如果可以对列重新排序;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnCollection">
      <summary>获取或设置包含 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 的附加属性。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />，用于显示此属性附加到的对象的内容。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle">
      <summary>获取或设置要应用于列标题的样式。</summary>
      <returns>用于定义列标题的显示属性的 <see cref="T:System.Windows.Style" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" /> 为 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> 列中的标头 <see cref="T:System.Windows.Controls.GridView" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat">
      <summary>获取或设置一个复合字符串，指定如何设置列标题的格式 <see cref="T:System.Windows.Controls.GridView" /> 如果显示为字符串。</summary>
      <returns>指定如何设置列标题的格式的复合字符串 <see cref="T:System.Windows.Controls.GridView" /> 如果显示为字符串。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplate">
      <summary>获取或设置要用于显示列标题的模板。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> 要用于显示列标题的一部分 <see cref="T:System.Windows.Controls.GridView" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector">
      <summary>获取或设置提供了逻辑来选择要使用每个列标题的模板选择器对象。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象，用于确定要使用每个列标题的数据模板。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderToolTip">
      <summary>获取或设置当鼠标指针悬停在某个列标题时显示的工具提示的内容。</summary>
      <returns>表示当鼠标指针暂停在某个列标题显示为工具提示的内容的对象。 未定义的默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.Columns">
      <summary>获取的集合 <see cref="T:System.Windows.Controls.GridViewColumn" /> 此定义的对象的 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>中的列集合 <see cref="T:System.Windows.Controls.GridView" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.DefaultStyleKey">
      <summary>获取引用的默认样式为 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" />。 默认值是 <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" /> 当前主题中。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey">
      <summary>获取引用的每个定义的样式的键 <see cref="T:System.Windows.Controls.ListViewItem" /> 中 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>一个 <see cref="T:System.Windows.ResourceKey" /> ，每个引用的样式 <see cref="T:System.Windows.Controls.ListViewItem" />。 默认值引用的默认样式为 <see cref="T:System.Windows.Controls.ListViewItem" /> 当前主题中的控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewScrollViewerStyleKey">
      <summary>获取引用为定义的样式的键 <see cref="T:System.Windows.Controls.ScrollViewer" /> 包含所显示的内容控件 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>一个 <see cref="T:System.Windows.ResourceKey" /> 引用 <see cref="T:System.Windows.Style" /> 应用于 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控制 <see cref="T:System.Windows.Controls.GridView" />。 默认值是为样式 <see cref="T:System.Windows.Controls.ScrollViewer" /> 对象 <see cref="T:System.Windows.Controls.ListView" /> 当前主题中。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewStyleKey">
      <summary>获取引用为定义的样式的键 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>一个 <see cref="T:System.Windows.ResourceKey" /> 引用 <see cref="T:System.Windows.Style" /> 应用于 <see cref="T:System.Windows.Controls.GridView" />。 默认值是为样式 <see cref="T:System.Windows.Controls.ListView" /> 当前主题中。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ItemContainerDefaultStyleKey">
      <summary>获取容器中的数据项目的默认样式引用 <see cref="T:System.Windows.Controls.GridView" />。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" />。 默认值是 <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" /> 当前主题中。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.ActualWidth">
      <summary>获取 <see cref="T:System.Windows.Controls.GridViewColumn" /> 的实际宽度。</summary>
      <returns>列的当前宽度。 默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplate">
      <summary>获取或设置要用于显示列单元格的内容的模板。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" /> 用于设置列单元格的格式。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> ，它确定要使用的列中显示单元格的模板。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> ，它提供 <see cref="T:System.Windows.DataTemplate" /> 列单元格的选择。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding">
      <summary>获取或设置要绑定到此列的数据项。</summary>
      <returns>显示列中指定的数据项目类型。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Header">
      <summary>获取或设置的标头的内容 <see cref="T:System.Windows.Controls.GridViewColumn" />。</summary>
      <returns>要使用的列标题的对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle">
      <summary>获取或设置要用于 <see cref="T:System.Windows.Controls.GridViewColumn" /> 标头的样式。</summary>
      <returns>用于定义列标题的显示属性的 <see cref="T:System.Windows.Style" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat">
      <summary>获取或设置一个指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性，它显示为一个字符串。</summary>
      <returns>指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性，它显示为一个字符串。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplate">
      <summary>获取或设置要用于显示列标题内容的模板。</summary>
      <returns>要用于显示列标题的 <see cref="T:System.Windows.DataTemplate" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 提供逻辑来选择要用于显示列标题的模板。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象，它提供每个数据模板选择 <see cref="T:System.Windows.Controls.GridViewColumn" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Width">
      <summary>获取或设置列的宽度。</summary>
      <returns>列的宽度。 默认值是 <see cref="F:System.Double.NaN" />, ，而后者自动的最大列大小，它是项没有列标题。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Column">
      <summary>获取与 <see cref="T:System.Windows.Controls.GridViewColumn" /> 关联的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> 这与该键相关联 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Role">
      <summary>获取 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的角色。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.GridViewColumnHeaderRole" /> 枚举值，用于指定列的当前角色。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder">
      <summary>获取或设置一个值，该值指示列是否可以更改位置。</summary>
      <returns>true 如果可以通过拖放操作的列标题，则移动列否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 要用于列标题。</summary>
      <returns>
        <see cref="T:System.Windows.Style" /> 要用于列标题容器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" /> 列标题。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> 为列标题行。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat">
      <summary>获取或设置一个复合字符串，指定如何设置列标题的格式，如果显示为字符串。</summary>
      <returns>一个复合字符串，指定如何设置列标题的格式，如果显示为字符串。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate">
      <summary>获取或设置要用于显示列标题的模板。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> ，用来显示列标题内容。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 提供逻辑来选择要用于显示列标题的数据模板。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 来选择将 <see cref="T:System.Windows.DataTemplate" /> 要用于显示每个列标题。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip">
      <summary>获取或设置列标题行的工具提示的内容。</summary>
      <returns>一个表示列标题的工具提示的内容的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewRowPresenter.Content">
      <summary>获取或设置要显示在一行中的数据内容。</summary>
      <returns>表示行的内容的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>获取或设置一个对象，表示控件的视区和缓存的大小。</summary>
      <returns>一个对象，表示控件的视区和缓存的大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>获取一个对象，表示控件的标头的所需的大小。</summary>
      <returns>一个表示控件的标头的所需的大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>获取一个值，该值指示控件的布局处理过程是否出现在较低的优先级。</summary>
      <returns>true 如果该控件的布局将传递，发生在较低的优先级。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>获取或设置一个对象，表示控件的项所需的大小。</summary>
      <returns>一个表示控件的项所需的大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>获取 <see cref="T:System.Windows.Controls.Panel" /> 显示在控件的项。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> 显示在控件的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>获取或设置一个值，该值指示是否拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应该对其项进行虚拟化。</summary>
      <returns>true 如果拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应虚拟化其项; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.AlternationCount">
      <summary>获取或设置交替的数量 <see cref="T:System.Windows.Controls.GroupItem" /> 对象。</summary>
      <returns>交替的数量 <see cref="T:System.Windows.Controls.GroupItem" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyle">
      <summary>获取或设置应用于为每个项生成的 <see cref="T:System.Windows.Controls.GroupItem" /> 的样式。</summary>
      <returns>应用于为每个项生成的 <see cref="T:System.Windows.Controls.GroupItem" /> 的样式。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector">
      <summary>使应用程序编写器能够提供一种样式应用到每个生成的自定义选择逻辑 <see cref="T:System.Windows.Controls.GroupItem" />。</summary>
      <returns>一个对象，派生自 <see cref="T:System.Windows.Controls.StyleSelector" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Default">
      <summary>获取组的默认样式。</summary>
      <returns>组的默认样式。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderStringFormat">
      <summary>获取或设置一个复合字符串，指定如何设置标头的格式，它显示为一个字符串。</summary>
      <returns>一个复合字符串，指定如何设置标头的格式，它显示为一个字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplate">
      <summary>获取或设置用于显示组头的模板。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" /> 对象，用于显示组头。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector">
      <summary>启用应用程序编写器，以提供自定义选择逻辑的模板，用于显示组头。</summary>
      <returns>一个对象，派生自 <see cref="T:System.Windows.Controls.DataTemplateSelector" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HidesIfEmpty">
      <summary>获取或设置一个值，该值指示是否应显示对应于空组项。</summary>
      <returns>true 若要显示空的组;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Panel">
      <summary>获取或设置用于创建面板中的模板用于控制项布局。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 创建面板对象用于控制布局项。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HasHeader">
      <summary>获取一个值，该值指示此标头是否 null。</summary>
      <returns>如果 true 属性不是 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />，则为 null；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
      <summary>获取或设置用于每个控件的标头的数据。</summary>
      <returns>标头对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat">
      <summary>获取或设置一个指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性，它显示为一个字符串。</summary>
      <returns>指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性，它显示为一个字符串。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
      <summary>获取或设置用于显示控件的标头的内容的模板。</summary>
      <returns>数据模板。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
      <summary>获取或设置一个数据模板选择器，它提供用于选择用来显示标题的模板的自定义逻辑。</summary>
      <returns>使用数据模板选择器对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.LogicalChildren">
      <summary>获取一个枚举器的逻辑子元素 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
      <returns>枚举器。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HasHeader">
      <summary>获取一个值，该值指示是否此 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 具有标头。</summary>
      <returns>true 如果控件有一个标头;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>获取或设置该控件进行标记的项。</summary>
      <returns>一个对象，标签 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />。 默认值为 null。 标头可以是字符串或 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat">
      <summary>获取或设置一个指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性，它显示为一个字符串。</summary>
      <returns>指定如何设置格式的复合字符串 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性，它显示为一个字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>获取或设置用于显示控件的标头的内容的模板。</summary>
      <returns>数据模板，用于显示控件的标题。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
      <summary>获取或设置提供自定义选择逻辑，用于显示每个项目的标头所用的模板的对象。</summary>
      <returns>数据模板选择器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren">
      <summary>获取一个枚举器的逻辑子元素 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />。</summary>
      <returns>枚举器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength">
      <summary>获取缓存的大小之前和之后视区。</summary>
      <returns>缓存之前和之后视区的大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLengthUnit">
      <summary>获取使用的单元的类型 <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性。</summary>
      <returns>使用的单元的类型 <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.Viewport">
      <summary>获取显示在控件的项的区域。</summary>
      <returns>显示在控件的项的区域。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.LogicalSize">
      <summary>使用逻辑单位获取的标头的大小。</summary>
      <returns>逻辑单元中的标头的大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.PixelSize">
      <summary>在获取的标头大小 device-independent units (1/96th inch per unit)。</summary>
      <returns>标头的大小，请在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSize">
      <summary>获取大小的控件的子项目，使用逻辑单位。</summary>
      <returns>控件的子项目，请在逻辑单元的大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeAfterViewport">
      <summary>获取控件的子级的大小在视区内，使用逻辑单位后可以在缓存中的项。</summary>
      <returns>在视区内，使用逻辑单位后可以在缓存中的控件的子项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeBeforeViewport">
      <summary>获取在视区内，使用逻辑单位之前缓存中的控件的子项目。</summary>
      <returns>在视区内，使用逻辑单位之前缓存中的控件的子项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeInViewport">
      <summary>获取控件的项的子项在视区内，使用逻辑单位。</summary>
      <returns>在视区内，使用逻辑单位的控件的子项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSize">
      <summary>获取控件的子级的大小项，在 device-independent units (1/96th inch per unit)。</summary>
      <returns>控件的子级的大小的项目，因此在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeAfterViewport">
      <summary>获取在缓存中在视区内之后, 在项的控件的子级的大小 device-independent units (1/96th inch per unit)。</summary>
      <returns>处于缓存中之后视区中的控件的子项目的大小 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeBeforeViewport">
      <summary>获取控件的子级的大小都在视区内之前, 缓存中的项 device-independent units (1/96th inch per unit)。</summary>
      <returns>位于在视区内之前, 缓存中的控件的子项目的大小 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeInViewport">
      <summary>获取在视区中的项的控件的子级的大小 device-independent units (1/96th inch per unit)。</summary>
      <returns>在视区内，是在中的控件的子项目的大小 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.BaseUri">
      <summary>获取或设置基 uniform resource identifier (URI) 为 <see cref="T:System.Windows.Controls.Image" />。</summary>
      <returns>基 URI 为 <see cref="T:System.Windows.Controls.Image" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>获取或设置图像的 <see cref="T:System.Windows.Media.ImageSource" />。</summary>
      <returns>所绘制图像的源。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>获取或设置一个值，该值描述应如何拉伸 <see cref="T:System.Windows.Controls.Image" /> 以填充目标矩形。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 值之一。 默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.StretchDirection">
      <summary>获取或设置一个值，指示如何将图像进行缩放。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StretchDirection" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Controls.InitializingNewItemEventArgs.NewItem">
      <summary>获取新项添加到 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>新项添加到网格中。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
      <summary>获取当前的编辑模式的 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>在当前的编辑模式的 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" />。 画笔用于填充周围的边框区域 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" /> 用来填充周围的边框区域 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Bottom">
      <summary>获取或设置一个元素的底部和其父级的底部之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>底部的元素和其父级的底部之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />, ，请在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Children">
      <summary>检索元素的子元素 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>子元素的集合位于 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
      <summary>获取或设置应用于对新的手写笔画的绘制特性 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>默认值的绘制特性 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
      <summary>获取或设置的笔针点描述 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>笔针点描述 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
      <summary>获取或设置呈现器，可动态绘制墨迹上 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>呈现器动态绘制墨迹上 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingMode">
      <summary>获取或设置用户编辑活动的指点设备使用的模式。</summary>
      <returns>使用指针设备 （如 tablet 笔或鼠标） 处于活动状态时的编辑模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
      <summary>获取或设置用户编辑模式时，如果触笔反转它与交互 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>反转的编辑模式的 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EraserShape">
      <summary>获取或设置 <see cref="T:System.Windows.Ink.StylusShape" /> 用于点擦除的墨迹 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>与相关联的橡皮擦形状 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.InkPresenter">
      <summary>获取显示墨迹的墨迹显示器 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>显示墨迹的墨迹显示器 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
      <summary>获取手势识别组件是否可以在用户的系统上 （确定）。</summary>
      <returns>true 如果识别组件可用;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Left">
      <summary>获取或设置一个元素的左侧和其父级的左侧之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>左侧的元素内容和其父级的左侧之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />, ，请在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.LogicalChildren">
      <summary>返回到逻辑子级的枚举器。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.MoveEnabled">
      <summary>获取或设置一个布尔值，该值指示是否启用用户上移动选定的墨迹笔画和/或元素 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>true 如果用户可以移动的笔画和/或元素 <see cref="T:System.Windows.Controls.InkCanvas" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
      <summary>获取或设置可粘贴到格式 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>枚举值的集合。 默认值为 <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
      <summary>获取或设置一个布尔值，该值指示是否用户可以调整所选的墨迹笔画和/或元素上 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>true 如果用户可以调整笔画和/或元素大小上 <see cref="T:System.Windows.Controls.InkCanvas" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Right">
      <summary>获取或设置右端的元素和其父级的右侧之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>右侧的元素内容和其父级的右侧之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />, ，请在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Strokes">
      <summary>获取或设置墨迹的集合 <see cref="T:System.Windows.Ink.Stroke" /> 对象收集 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>集合 <see cref="T:System.Windows.Ink.Stroke" /> 对象中包含 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Top">
      <summary>获取或设置元素边缘与其父之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>元素的顶端和其父级的顶部之间的距离 <see cref="T:System.Windows.Controls.InkCanvas" />, ，请在 device-independent units (1/96th inch per unit)。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
      <summary>获取或设置一个布尔值，该值指示是否要重写标准 <see cref="T:System.Windows.Controls.InkCanvas" /> 游标功能来支持自定义光标。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.InkCanvas" /> 正在使用自定义光标; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.VisualChildrenCount">
      <summary>获取此元素内可视子元素的数目。</summary>
      <returns>此元素内可视子元素的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Cancel">
      <summary>获取或设置一个布尔值，该值指示是否应将笔画视为一个手势。</summary>
      <returns>true 如果这些笔画墨迹; false 如果笔划是手势。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes">
      <summary>获取表示可能的手势的笔画。</summary>
      <returns>表示可能的手势的笔画。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle">
      <summary>获取或设置选定区域的边界之后移动或调整。</summary>
      <returns>所选内容，它是移动或调整大小后的边界。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle">
      <summary>用户移动或调整其大小之前，请获取所选内容的界限。</summary>
      <returns>用户移动或调整其大小之前所选内容的边界。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.Stroke">
      <summary>获取已添加到的笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>已添加到的笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
      <summary>获取将要擦除的笔画。</summary>
      <returns>是将要擦除笔画。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.NewStrokes">
      <summary>获取的新笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>新笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.PreviousStrokes">
      <summary>获取以前的笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>以前的笔画 <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>获取和设置这些笔画 <see cref="T:System.Windows.Controls.InkPresenter" /> 显示。</summary>
      <returns>这些笔画， <see cref="T:System.Windows.Controls.InkPresenter" /> 显示。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.VisualChildrenCount">
      <summary>获取一个值，该值等于 <see cref="T:System.Windows.Controls.Decorator" /> 的此实例的可视子元素数。</summary>
      <returns>可视子元素数。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveFiltering">
      <summary>获取一个值，该值指示集合视图是否支持打开或关闭实时筛选数据。</summary>
      <returns>如果集合视图支持打开或关闭实时筛选，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveGrouping">
      <summary>获取一个值，该值指示集合视图是否支持启用实时对数据进行分组，打开或关闭。</summary>
      <returns>true 如果集合视图支持启用实时分组，打开或关闭;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveSorting">
      <summary>获取一个值，该值指示集合视图是否支持启用或禁用实时的数据进行排序。</summary>
      <returns>true 如果集合视图支持启用实时排序打开或关闭;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanFilter">
      <summary>获取一个值，该值指示此集合视图是否支持筛选。</summary>
      <returns>true 如果此视图支持筛选，则，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanGroup">
      <summary>获取一个值，该值指示此集合视图是否支持分组。</summary>
      <returns>true 如果集合支持分组，则否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanSort">
      <summary>获取一个值，该值指示此集合视图是否支持排序。</summary>
      <returns>true 如果此视图支持排序，则，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Count">
      <summary>获取集合中的记录数。</summary>
      <returns>集合中的项的数目或者，如果集合未初始化或如果没有在集合 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentItem">
      <summary>获取视图中的当前项。</summary>
      <returns>视图中的当前对象或 null 集合未初始化或没有集合处于是否 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。默认情况下，该集合的第一项作为当前项启动。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentPosition">
      <summary>获取视图中当前项的序号位置。</summary>
      <returns>则为-1 或视图中当前项的序号位置集合未初始化或如果没有在集合 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Filter">
      <summary>获取或设置用于确定某个项是否适合包含在视图中的回调。</summary>
      <returns>用于确定某个项是否适合包含在视图中的方法。</returns>
      <exception cref="T:System.NotSupportedException">不支持筛选。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.GroupDescriptions">
      <summary>获取一套 <see cref="T:System.ComponentModel.GroupDescription" /> 定义如何对项进行分组的对象。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。 集合索引按分组级别。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Groups">
      <summary>获取顶级组，根据构造 <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />。</summary>
      <returns>根据构造的顶级组 <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast">
      <summary>获取一个值，该值指示当前项的视图是否超出集合的末尾。</summary>
      <returns>true 如果当前项的视图未超出末尾的集合;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst">
      <summary>获取一个值，该值指示当前项的视图是否超出集合的开头。</summary>
      <returns>true 该视图的当前项是否超出集合的开头否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsEmpty">
      <summary>获取一个值，该值指示是否生成 （已筛选） 视图是否为空。</summary>
      <returns>如果获得的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveFiltering">
      <summary>获取或设置一个值，该值指示是否启用实时中筛选数据。</summary>
      <returns>true 如果启用筛选的实时数据; false 如果未启用实时筛选; null 如果无法确定集合视图是否实现，实时筛选。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveGrouping">
      <summary>获取或设置一个值，该值指示是否启用对实时数据进行分组。</summary>
      <returns>true 如果启用对实时数据进行分组，则 false 如果未启用实时的分组; null 如果无法确定集合视图是否实现，实时分组。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveSorting">
      <summary>获取或设置一个值，该值指示是否启用实时进行排序。</summary>
      <returns>true 如果启用对实时数据进行排序，则 false 如果未启用实时排序; null 如果无法确定集合视图是否实现，实时排序。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Item(System.Int32)">
      <summary>获取或设置给定从零开始的索引处的项。</summary>
      <param name="index">项的从零开始的索引。</param>
      <returns>要检索的对象或对象的对象设置为指定的索引。</returns>
      <exception cref="T:System.InvalidOperationException">集合未初始化，或已设置的项具有不同的逻辑父级，该集合采用 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出了范围。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveFilteringProperties">
      <summary>获取指定中筛选数据实时参与的属性的字符串的集合。</summary>
      <returns>指定参与的属性中的筛选操作的实时数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveGroupingProperties">
      <summary>获取指定实时数据分组中加入的属性的字符串的集合。</summary>
      <returns>指定对实时数据进行分组中加入的属性的字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveSortingProperties">
      <summary>获取指定的属性的参与中对实时数据进行排序的字符串的集合。</summary>
      <returns>指定在对实时数据进行排序的属性的参与字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.NeedsRefresh">
      <summary>获取一个值，该值指示集合是否需要刷新。</summary>
      <returns>true 如果集合需要刷新，则，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SourceCollection">
      <summary>获取位于此集合视图的排序和未筛选集合。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 对象，它是基础集合或用户提供 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果对 true 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果 true 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsReadOnly">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanAddNew">
      <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
      <returns>如果可以将新项添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
      <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
      <returns>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanRemove">
      <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
      <returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
      <summary>获取当前添加事务过程中正在添加的项。</summary>
      <returns>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> 为 true，则为要添加的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
      <summary>获取集合中正在编辑的项。</summary>
      <returns>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> 是 true，则为集合中正在编辑的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsAddingNew">
      <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
      <returns>如果正在执行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsEditingItem">
      <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
      <returns>如果正在执行编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
      <summary>获取或设置集合视图中新项占位符的位置。</summary>
      <returns>用于指定集合视图中新项占位符位置的枚举值之一。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem">
      <summary>获取一个值，该值指示是否可以将指定的对象添加到集合。</summary>
      <returns>true 如果指定的对象可以添加到集合。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IItemProperties#ItemProperties">
      <summary>获取一个集合包含位于集合中项的属性有关的信息。</summary>
      <returns>包含有关可用集合中的项的属性的信息集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Items">
      <summary>获取属于此项的集合 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
      <returns>属于此项的集合 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Status">
      <summary>生成状态的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> 值，该值表示的生成状态的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerTemplate.ItemContainerTemplateKey">
      <summary>获取默认键的 <see cref="T:System.Windows.Controls.ItemContainerTemplate" />。</summary>
      <returns>默认键 <see cref="T:System.Windows.Controls.ItemContainerTemplate" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationCount">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ItemsControl" /> 中的交替项容器的数目，该控件可使交替容器具有唯一外观。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 中交替项容器的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationIndex">
      <summary>当使用交替项目容器时，获取项目容器的分配值。</summary>
      <returns>当使用交替项目容器时，项目容器的分配值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>获取或设置源对象上的值的路径，以用作对象的可视表示形式。</summary>
      <returns>源对象上的值的路径。 这可以是任何路径，或者 XPath，如“@Name”。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyle">
      <summary>获取定义每个级别的组的外观的 <see cref="T:System.Windows.Controls.GroupStyle" /> 对象集合。</summary>
      <returns>定义每个级别的组的外观的 <see cref="T:System.Windows.Controls.GroupStyle" /> 对象集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyleSelector">
      <summary>获取或设置一个方法，通过此方法您可以为 <see cref="T:System.Windows.Controls.GroupStyle" /> 提供自定义选择逻辑，以便将此样式应用到集合中的每个组。</summary>
      <returns>一个方法，通过此方法您可以为 <see cref="T:System.Windows.Controls.GroupStyle" /> 提供自定义选择逻辑，以便将此样式应用到集合中的每个组。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.HasItems">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ItemsControl" /> 是否包含项。</summary>
      <returns>如果项的计数大于 0，则为 true；否则为 false。默认值是 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsGrouping">
      <summary>获取一个值，该值指示控件是否正在使用分组。</summary>
      <returns>如果控件正在使用分组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive">
      <summary>获取或设置一个值，该值指示搜索项时大小写是否为条件。</summary>
      <returns>如果文本搜索区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled">
      <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Windows.Controls.ItemsControl" /> 实例上启用 <see cref="T:System.Windows.Controls.TextSearch" />。</summary>
      <returns>如果启用 true，则为 <see cref="T:System.Windows.Controls.TextSearch" />；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemBindingGroup">
      <summary>获取或设置复制到 <see cref="T:System.Windows.Controls.ItemsControl" /> 中每个项的 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>复制到 <see cref="T:System.Windows.Controls.ItemsControl" /> 中每个项的 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>获取与控件关联的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
      <returns>与控件关联的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">
      <summary>获取或设置应用于为每个项生成的容器元素的 <see cref="T:System.Windows.Style" />。</summary>
      <returns>应用于为每个项生成的容器元素的 <see cref="T:System.Windows.Style" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
      <summary>获取或设置可应用于每个所生成容器元素的样式的自定义样式选择逻辑。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.StyleSelector" /> 对象，其中包含选择要用作 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 的样式的逻辑。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>获取用于生成 <see cref="T:System.Windows.Controls.ItemsControl" /> 的内容的集合。</summary>
      <returns>用于生成 <see cref="T:System.Windows.Controls.ItemsControl" /> 的内容的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>获取或设置模板，该模板定义对项的布局进行控制的面板。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />，它定义要用于项的布局的面板。<see cref="T:System.Windows.Controls.ItemsControl" /> 的默认值是一个指定 <see cref="T:System.Windows.Controls.StackPanel" /> 的 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>获取或设置用于生成 <see cref="T:System.Windows.Controls.ItemsControl" /> 的内容的集合。</summary>
      <returns>用于生成 <see cref="T:System.Windows.Controls.ItemsControl" /> 的内容的集合。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemStringFormat">
      <summary>获取或设置一个复合字符串，如果 <see cref="T:System.Windows.Controls.ItemsControl" /> 中的项显示为字符串，则用于指定如何格式化这些项。</summary>
      <returns>一个复合字符串，如果 <see cref="T:System.Windows.Controls.ItemsControl" /> 中的项显示为字符串，则用于指定如何格式化这些项。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>获取或设置用来显示每个项的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <returns>指定数据对象的可视化的 <see cref="T:System.Windows.DataTemplate" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">
      <summary>获取或设置用于选择用来显示每个项的模板的自定义逻辑。</summary>
      <returns>自定义 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象，它提供逻辑并返回 <see cref="T:System.Windows.DataTemplate" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.LogicalChildren">
      <summary>获取 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的逻辑子对象的枚举器。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的逻辑子对象的枚举器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Label.Target">
      <summary>获取或设置当用户按下标签的访问键时获得焦点的元素。</summary>
      <returns>当用户按下访问键时获得焦点的 <see cref="T:System.Windows.UIElement" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.AnchorItem">
      <summary>获取或设置最初是项时选择 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 是 <see cref="F:System.Windows.Controls.SelectionMode.Extended" />。</summary>
      <returns>最初的项时选择 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 是 <see cref="F:System.Windows.Controls.SelectionMode.Extended" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.HandlesScrolling">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.ListBox" /> 支持滚动。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ListBox" /> 支持滚动; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>获取当前选定的项。</summary>
      <returns>返回当前选定项的集合。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 属性设置为 <see cref="F:System.Windows.Controls.SelectionMode.Single" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>获取或设置的选择行为 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.SelectionMode" /> 值之一。 默认值是 <see cref="F:System.Windows.Controls.SelectionMode.Single" /> 所选内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ListBoxItem" /> 处于选中状态。</summary>
      <returns>如果选定了项，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListView.View">
      <summary>获取或设置一个对象，用于定义如何在 <see cref="T:System.Windows.Controls.ListView" /> 控件中设置数据样式和组织数据。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ViewBase" /> 对象，它指定如何在 <see cref="T:System.Windows.Controls.ListView" /> 中显示信息。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>获取或设置扬声器的音量比。</summary>
      <returns>-1 和 1 之间的范围中的扬声器的音量比率。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>获取一个值，该值指示缓冲进度的百分比。</summary>
      <returns>完成用于流式传输内容的缓冲百分比。 值范围从 0 到 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>获取一个值，该值指示是否可以暂停媒体。</summary>
      <returns>true 如果可以暂停媒体;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Clock">
      <summary>获取或设置与相关联的时钟 <see cref="T:System.Windows.Media.MediaTimeline" /> 控制媒体的播放。</summary>
      <returns>与相关联的时钟 <see cref="T:System.Windows.Media.MediaTimeline" /> 控制媒体的播放。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>获取一个百分比值，该值为位于远程服务器上的内容完成的下载量。</summary>
      <returns>指示完成为位于远程服务器上的内容的下载量的百分比值。 值范围从 0 到 1。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasAudio">
      <summary>获取一个值，该值指示媒体是否具有音频。</summary>
      <returns>true 如果媒体具有音频;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasVideo">
      <summary>获取一个值，该值指示媒体是否具有视频。</summary>
      <returns>true 如果媒体具有视频，则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsBuffering">
      <summary>获取一个值，该值指示是否缓冲媒体。</summary>
      <returns>true 如果媒体缓冲;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>获取或设置一个值，该值指示是否已静音。</summary>
      <returns>true 如果音频处于静音状态;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LoadedBehavior">
      <summary>获取或设置加载行为 <see cref="T:System.Windows.Controls.MediaState" /> 提供的媒体。</summary>
      <returns>加载行为 <see cref="T:System.Windows.Controls.MediaState" /> 为媒体设置。 默认值为 <see cref="F:System.Windows.Controls.MediaState.Play" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>获取介质的自然持续时间。</summary>
      <returns>媒体的固有持续时间。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>获取与媒体关联的视频的高度。</summary>
      <returns>与媒体关联的视频的高度。 音频文件将返回零。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>获取与媒体关联的视频的宽度。</summary>
      <returns>与媒体关联的视频的宽度。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>通过媒体的播放时间获取或设置进度的当前位置。</summary>
      <returns>自媒体开始以来的时间量。 默认值为“00:00:00”。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.ScrubbingEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.MediaElement" /> 将更新帧的查找操作在暂停状态。</summary>
      <returns>true 如果在暂停，则更新框架否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.MediaElement" /> 上的媒体源。</summary>
      <returns>用于指定元素源的 URI。 默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.SpeedRatio">
      <summary>获取或设置媒体的速率。</summary>
      <returns>媒体的速率。 有效范围介于 0（零）和无穷大之间。 小于 1 的值产生比正常播放慢的速率，而大于 1 的值产生比正常播放快的速率。 负值将视为 0。 默认值为 1。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Stretch" /> 值，该值描述如何 <see cref="T:System.Windows.Controls.MediaElement" /> 填充目标矩形。</summary>
      <returns>所呈现媒体的拉伸的值。 默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.StretchDirection">
      <summary>获取或设置一个值，确定扩展的限制应用于映像。</summary>
      <returns>拉伸值，该值指定该元素的方向。 默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.UnloadedBehavior">
      <summary>获取或设置卸载行为 <see cref="T:System.Windows.Controls.MediaState" /> 提供的媒体。</summary>
      <returns>卸载行为 <see cref="T:System.Windows.Controls.MediaState" /> 提供的媒体。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>获取或设置媒体的音量。</summary>
      <returns>在 0 与 1 之间的线性标尺上所表示的媒体音量。 默认值为 0.5。</returns>
    </member>
    <member name="P:System.Windows.Controls.Menu.IsMainMenu">
      <summary> 获取或设置一个值，该值指示是否此 <see cref="T:System.Windows.Controls.Menu" /> 接收主菜单激活通知。</summary>
      <returns>true 如果菜单接收主菜单激活通知;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Command">
      <summary>获取或设置与菜单项关联的命令。</summary>
      <returns>与关联的命令 <see cref="T:System.Windows.Controls.MenuItem" />。  默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandParameter">
      <summary>获取或设置要传递给参数 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 属性 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <returns>要传递给参数 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 属性 <see cref="T:System.Windows.Controls.MenuItem" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandTarget">
      <summary>获取或设置要对其引发指定的命令的目标元素。</summary>
      <returns>要引发指定的命令对其元素。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.HandlesScrolling">
      <summary>获取指示该控件支持滚动。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Icon">
      <summary>获取或设置在显示的图标 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <returns>在显示的图标 <see cref="T:System.Windows.Controls.MenuItem" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.InputGestureText">
      <summary> 设置描述输入的笔势，将会调用绑定到指定的项的命令的文本。</summary>
      <returns>描述输入的笔势，如文本 Ctrl + C 为 副本 命令。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsCheckable">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.MenuItem" /> 可签入。</summary>
      <returns>true 如果可以选中该菜单项;否则为 false。  默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsChecked">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.MenuItem" /> 已选中。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.MenuItem" /> 检查; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsEnabledCore">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性是 true 当前的菜单项。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.MenuItem" /> 可选定; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsHighlighted">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.MenuItem" /> 突出显示。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.MenuItem" /> 突出显示; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsPressed">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.MenuItem" /> 情况下按下。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.MenuItem" /> 按下; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSubmenuOpen">
      <summary>获取或设置一个值，该值指示是否的子菜单 <see cref="T:System.Windows.Controls.MenuItem" /> 处于打开状态。</summary>
      <returns>true 如果的子菜单 <see cref="T:System.Windows.Controls.MenuItem" /> 打开; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation">
      <summary>获取菜单是否动画在其 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
      <returns>true 如果菜单应该在其弹出; 上挂起动画否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector">
      <summary>获取或设置用于选择用来显示每个项的模板的自定义逻辑。</summary>
      <returns>提供逻辑并返回一个项容器，一个自定义对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Role">
      <summary>获取一个值，指示的角色 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItemRole" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SeparatorStyleKey">
      <summary>获取应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是 <see cref="T:System.Windows.Controls.Separator" />。</summary>
      <returns>应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是 <see cref="T:System.Windows.Controls.Separator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.StaysOpenOnClick">
      <summary>获取或设置一个值，该值指示子菜单中此 <see cref="T:System.Windows.Controls.MenuItem" /> 所在单击此项时不应关闭。</summary>
      <returns>true 如果子菜单中此 <see cref="T:System.Windows.Controls.MenuItem" /> 所在这个项目时单击; 否则为不应关闭 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey">
      <summary>获取应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是一个子菜单的标头。</summary>
      <returns>应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是一个子菜单的标头。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey">
      <summary>获取应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单。</summary>
      <returns>应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey">
      <summary>获取应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是顶级菜单的标头。</summary>
      <returns>应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时 <see cref="T:System.Windows.Controls.MenuItem" /> 是顶级菜单的标头。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey">
      <summary>获取应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时将其顶级 <see cref="T:System.Windows.Controls.MenuItem" /> 可调用命令。</summary>
      <returns>应用了样式的资源键 <see cref="T:System.Windows.Controls.MenuItem" /> 时将其顶级 <see cref="T:System.Windows.Controls.MenuItem" /> 可调用命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate">
      <summary>获取或设置一个值，该值指示是否菜单中选择不同的项的容器，具体取决于基础集合或其他某种试探法中的项的类型。</summary>
      <returns>true 菜单中选择不同的项的容器;否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Background">
      <summary>获取或设置的背景 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> ， <see cref="T:System.Windows.Controls.Page" /> 用来绘制其背景。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Content">
      <summary>获取或设置的内容 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>一个对象，包含的内容 <see cref="T:System.Windows.Controls.Page" />。 默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.FontFamily">
      <summary>获取或设置指定的字体系列的名称。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 即的内容的字体系列 <see cref="T:System.Windows.Controls.Page" />。 默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.FontSize">
      <summary>获取或设置字体大小。</summary>
      <returns>内容的字体大小 <see cref="T:System.Windows.Controls.Page" />。 默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Foreground">
      <summary>获取或设置为前景 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> ， <see cref="T:System.Windows.Controls.Page" /> 用来绘制其前景色。 默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.KeepAlive">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Page" /> 导航历史记录中保留实例。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Page" /> 实例是导航历史记录中保留; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.LogicalChildren">
      <summary>返回的枚举器的逻辑子元素的 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的逻辑的子元素的 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationService">
      <summary>获取页的宿主使用来管理导航的导航服务。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.NavigationService" /> 对象页的宿主用来管理导航栏中，或 null 如果主机不支持导航。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.ShowsNavigationUI">
      <summary>获取或设置一个值，该值指示是否对导航 UI 的 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 上 Microsoft Internet Explorer 6 是否可见。</summary>
      <returns>true 如果导航 UI 主机的 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 可见; 否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> 上检查属性 <see cref="T:System.Windows.Controls.Page" /> 实例不由托管 <see cref="T:System.Windows.Window" />, ，<see cref="T:System.Windows.Navigation.NavigationWindow" />, ，或浏览器。</exception>
    </member>
    <member name="P:System.Windows.Controls.Page.Template">
      <summary>获取或设置控件模板 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> 为 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Title">
      <summary>获取或设置的标题 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>标题 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowHeight">
      <summary>获取或设置主机的高度 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>直接承载的窗口的高度 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowTitle">
      <summary>获取或设置主机的标题 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>直接承载的窗口的标题 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowWidth">
      <summary>获取或设置主机的宽度 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的 <see cref="T:System.Windows.Controls.Page" />。</summary>
      <returns>直接承载窗口的宽度 <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageFrom">
      <summary>获取或设置在范围内的第一页的页码。</summary>
      <returns>在范围内的第一页从 1 开始的页码。</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageTo">
      <summary>获取或设置在范围内的最后一页的页码。</summary>
      <returns>在范围内的最后一页从 1 开始的页码。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用于填充之间的边框区域 <see cref="T:System.Windows.Controls.Panel" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" />。 此默认值是 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>获取 <see cref="T:System.Windows.Controls.UIElementCollection" /> 的子元素的这 <see cref="T:System.Windows.Controls.Panel" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.UIElementCollection" />。 默认值为空 <see cref="T:System.Windows.Controls.UIElementCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientation">
      <summary>获取一个值，该值指示是否此 <see cref="T:System.Windows.Controls.Panel" /> 排列在一个维度及其后代。</summary>
      <returns>true 如果的方向 <see cref="T:System.Windows.Controls.Panel" /> 是在一个维度; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic">
      <summary>获取一个值，该值指示是否此 <see cref="T:System.Windows.Controls.Panel" /> 排列在一个维度及其后代。</summary>
      <returns>true 如果的方向 <see cref="T:System.Windows.Controls.Panel" /> 是在一个维度; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.InternalChildren">
      <summary>获取子元素的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 对象的有序集合。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.Panel" /> 是容器 用户界面 (UI) 由生成的项 <see cref="T:System.Windows.Controls.ItemsControl" />。  </summary>
      <returns>true 如果此实例的 <see cref="T:System.Windows.Controls.Panel" /> 是项宿主; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalChildren">
      <summary>获取可循环访问此逻辑子元素的枚举器 <see cref="T:System.Windows.Controls.Panel" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientation">
      <summary>
        <see cref="T:System.Windows.Controls.Orientation" /> 的面板中，如果面板支持在单个维度中的布局。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 的面板。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientationPublic">
      <summary>
        <see cref="T:System.Windows.Controls.Orientation" /> 的面板中，如果面板支持在单个维度中的布局。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 的面板。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.VisualChildrenCount">
      <summary>获取数量的子 <see cref="T:System.Windows.Media.Visual" /> 的此实例中的对象 <see cref="T:System.Windows.Controls.Panel" />。</summary>
      <returns>数量的子 <see cref="T:System.Windows.Media.Visual" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.ZIndex">
      <summary>获取或设置一个值，该值表示元素在 Z 平面中的显示顺序。</summary>
      <returns>此元素在 z 平面上出现的顺序。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>获取或设置指定密码框插入符号的颜色的画笔。</summary>
      <returns>一个用于描述密码中的插入符号的颜色的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.PasswordBox" /> 显示所选的文本时 <see cref="T:System.Windows.Controls.PasswordBox" /> 不具有焦点。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.PasswordBox" /> 显示所选的文本时 <see cref="T:System.Windows.Controls.PasswordBox" /> 不具有焦点; 否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsSelectionActive">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.PasswordBox" /> 具有焦点和选择的文本。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.PasswordBox" /> 具有焦点和所选的文本; 否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>获取或设置密码，此处理的最大长度 <see cref="T:System.Windows.Controls.PasswordBox" />。</summary>
      <returns>一个整数，指定最大长度，以字符为单位的密码以处理由此 <see cref="T:System.Windows.Controls.PasswordBox" />。如果值为零 (0) 表示没有限制。默认值是 0 （没有长度限制）。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>获取或设置当前保留的密码 <see cref="T:System.Windows.Controls.PasswordBox" />。</summary>
      <returns>表示当前保留的密码的字符串 <see cref="T:System.Windows.Controls.PasswordBox" />。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>获取或设置的掩码字符 <see cref="T:System.Windows.Controls.PasswordBox" />。</summary>
      <returns>回显在用户输入到文本时的掩码字符 <see cref="T:System.Windows.Controls.PasswordBox" />。默认值是项目符号字符 (●)。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SecurePassword">
      <summary>获取由当前控制的密码 <see cref="T:System.Windows.Controls.PasswordBox" /> 作为 <see cref="T:System.Security.SecureString" />。</summary>
      <returns>表示当前保留的密码的安全字符串 <see cref="T:System.Windows.Controls.PasswordBox" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBrush">
      <summary>获取或设置用于突出显示所选的文本的画笔。</summary>
      <returns>突出显示选定的文本的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionOpacity">
      <summary>获取或设置的不透明度 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />。</summary>
      <returns>不透明度 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />。 默认值为 0.4。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
      <summary>获取或设置的背景色 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <returns>背景色 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> 和 <see cref="P:System.Windows.Controls.Decorator.Child" /> 的 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
      <summary>获取或设置要用作项目符号中的对象 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 要用作项目符号。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
      <summary>获取一个枚举器逻辑的子元素 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <returns>提供对逻辑子元素的访问的枚举器 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
      <summary>获取的可视化子元素的数目 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件。</summary>
      <returns>为定义的可视元素的数目 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>获取或设置当 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件发生。</summary>
      <returns>当 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件发生。 默认值为 <see cref="F:System.Windows.Controls.ClickMode.Release" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>获取或设置要在按此按钮时调用的命令。</summary>
      <returns>按此按钮时要调用命令。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>获取或设置要传递给参数 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性。</summary>
      <returns>要传递给参数 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
      <summary>获取或设置要对其引发指定的命令的元素。</summary>
      <returns>在其上引发一个命令的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
      <summary>获取的值 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性。</summary>
      <returns>true 如果启用了控制;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 目前处于激活状态。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 激活; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
      <summary>获取一个值，该值指示此按钮表示的年份或包含选定的日期的月份。</summary>
      <returns>true 如果此按钮表示的年份或月份，其中包含所选的日期;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
      <summary>获取一个值，该值指示是否此按钮表示的年份，则不在当前显示十年中。</summary>
      <returns>true 如果此按钮表示当前显示的月份或在当前显示十年中; 不是一年未处于某一天否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
      <summary>获取一个值，该值指示是否不可用的日期。</summary>
      <returns>true 如果不可用; 日期否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
      <summary>获取一个值，该值指示是否突出显示此按钮。</summary>
      <returns>true 如果该按钮将突出显示;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
      <summary>获取一个值，该值指示此按钮是否表示在当前显示的月份中不是一天。</summary>
      <returns>true 如果此按钮表示在当前显示的月份中; 不是一天否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
      <summary>获取一个值，该值指示是否选中此按钮所表示日期。</summary>
      <returns>true 如果所选日期;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
      <summary>获取一个值，该值指示此按钮所表示日期是否为当前日期。</summary>
      <returns>true 如果日期为当前日期;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarItem.DayTitleTemplateResourceKey">
      <summary>获取或设置的资源键 <see cref="T:System.Windows.DataTemplate" /> 显示日期是星期几。</summary>
      <returns>资源键 <see cref="T:System.Windows.DataTemplate" /> 显示日期是星期几。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
      <summary>获取或设置相对于目标对象的点位置的左上角 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Windows.Point" /> 用于定位 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 默认值为 (0,0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis">
      <summary>获取或设置要移动的方向 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控制何时 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 屏幕边界遮盖。</summary>
      <returns>若要移动的方向 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控制何时 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 屏幕边界遮盖。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item">
      <summary>获取行是表示的数据项。</summary>
      <returns>行表示的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort">
      <summary>获取一个值，该值指示用户是否可以单击此列标题进行排序 <see cref="T:System.Windows.Controls.DataGrid" /> 由相关联的列。</summary>
      <returns>true 如果用户可以单击此列标题进行排序 <see cref="T:System.Windows.Controls.DataGrid" /> 按关联的列; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.Column">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridColumn" /> 与此列标题相关联。</summary>
      <returns>与此列标题相关联的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnFloatingHeaderStyleKey">
      <summary>获取引用在标头拖动操作过程中显示列标题的样式的键。</summary>
      <returns>浮动列标题样式键。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey">
      <summary>获取标头在拖动操作期间引用放置位置指示器的样式的键。</summary>
      <returns>放置位置指示器样式键。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex">
      <summary>获取与此相对于中的其他列的列标题相关联的列的显示位置 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>相对于中的其他列相关联的列的显示位置 <see cref="T:System.Windows.Controls.DataGrid" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen">
      <summary>获取一个值，该值指示是否已阻止此列标题与关联的列在水平滚动。</summary>
      <returns>true 如果相关联的列阻止滚动水平空间。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用来绘制列分隔符的标题行。</summary>
      <returns>用于绘制分隔线的列标题的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>获取或设置标头分隔符行的列的用户界面 (UI) 可见。</summary>
      <returns>列标题的分隔符线 UI 可见。 默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.DataGrid" /> 按关联的列以及列的值是否按升序或降序排序。</summary>
      <returns>列的排序方向或 null 如果不排序。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.VisualChildrenCount">
      <summary>获取的数 <see cref="T:System.Windows.Media.Visual" /> 这位演示者中的子级。</summary>
      <returns>可视子对象的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected">
      <summary>获取一个值，该值指示行是否被选定。</summary>
      <returns>如果该行被选定，则为 true；否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的信息，请参阅 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用于绘制标头分隔符行的行。</summary>
      <returns>用于绘制分隔线的行标题的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>获取或设置标头分隔符行的行的用户界面 (UI) 可见。</summary>
      <returns>行标题的分隔符线 UI 可见。 默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
      <summary>获取 <see cref="T:System.Windows.Documents.DocumentPage" /> 与此视图关联。</summary>
      <returns>此视图与关联的文档页。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 用来检索此视图内容页。</summary>
      <returns>检索此视图内容页分页程序。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> 已为此实例调用。</summary>
      <returns>true 如果 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> 已为此调用 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
      <summary>获取或设置当前所显示页面的页码。</summary>
      <returns>显示当前页的从零开始的页面数。  默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Stretch" /> 枚举，用于指定应如何拉伸内容以填充显示页。</summary>
      <returns>用于指定应如何拉伸内容以填充显示页的枚举值。  默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StretchDirection" /> 枚举，用于指定在哪个缩放方向 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 应该应用。</summary>
      <returns>枚举值，该值指定在哪个缩放方向 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 应该应用。  默认值为 <see cref="F:System.Windows.Controls.StretchDirection.DownOnly" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
      <summary>获取此视图中包含的可视子对象的数目。</summary>
      <returns>此视图中包含的可视子对象的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
      <summary>获取一个值，该值指示是否在查看器可以跳到下一步页在当前 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />。</summary>
      <returns>true 如果查看器可跳转至下一页面; 否则为 false。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
      <summary>获取一个值，该值指示是否在查看器可以跳转到前一页中当前 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />。</summary>
      <returns>true 如果查看器可跳转到上一页; 否则为 false。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
      <summary>获取或设置要分页或由查看器显示的 <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" />。</summary>
      <returns>要分页或由查看器显示的 <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" />。默认属性为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
      <summary>获取一个值，该值指示应为母板页使用查看器中的子元素。</summary>
      <returns>true 关联的元素应用作母板页; 否则为如果 false。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
      <summary>获取可枚举的子级中的查看器的逻辑树。</summary>
      <returns>可以用于枚举查看器逻辑子级的 <see cref="T:System.Collections.IEnumerator" /> 对象。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
      <summary>获取当前的主页面的页码。</summary>
      <returns>当前的主页上，页的页码或 0 如果当前未不加载任何文档。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
      <summary>获取在当前总页数 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" />。</summary>
      <returns>当前文档中的页数或 0 如果当前未不加载任何文档。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
      <summary>获取查看器所包含的活动 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。</summary>
      <returns>查看器所包含的活动 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>获取是否为拖放操作 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 已取消通过调用 <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> 方法。</summary>
      <returns>true 如果在拖动操作已取消;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>获取水平更改中的位置 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 用户拖动鼠标与该控件后。</summary>
      <returns>用户按下鼠标左键的点和从该处用户释放该按钮的拖动操作期间的点之间的水平差异 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>获取垂直更改中的位置 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 用户拖动鼠标与该控件后。</summary>
      <returns>用户按下鼠标左键的点和从该处用户释放该按钮的拖动操作期间的点之间的垂直差异 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>获取以来的上一个移动鼠标的水平距离 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件，当用户拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用鼠标。</summary>
      <returns>在拖动操作过程中的鼠标位置水平变化。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>获取以来的上一个移动鼠标的垂直距离 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件，当用户拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用鼠标。</summary>
      <returns>在拖动操作过程中的鼠标位置垂直变化。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>获取鼠标的水平偏移量相对于屏幕坐标的单击 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
      <returns>鼠标的水平偏移量方面的边框的左上角单击 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>获取鼠标的垂直偏移量相对于屏幕坐标的单击 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
      <returns>鼠标的水平偏移量方面的边框的左上角单击 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。 没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>获取或设置 <see cref="T:System.Int32" /> 是相对于生成的 （已实现） 项的索引。</summary>
      <returns>
        <see cref="T:System.Int32" /> 是相对于生成的 （已实现） 项的索引。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>获取或设置 <see cref="T:System.Int32" /> 偏移量相对于附近的索引值项未生成的 （未实现） 项。</summary>
      <returns>
        <see cref="T:System.Int32" /> 偏移量相对于附近的索引值项未生成的 （未实现） 项。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />。</summary>
      <returns>一套 <see cref="T:System.Windows.Controls.GridViewColumn" /> 显示数据的对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
      <summary>获取行的逻辑子级的枚举器。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 此行的逻辑子级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
      <summary>获取某一行的可视子级的个数。</summary>
      <returns>当前行的可视子对象的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.Constraints">
      <summary>获取或设置一个对象，表示控件的视区和缓存的大小。</summary>
      <returns>一个对象，表示控件的视区和缓存的大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.HeaderDesiredSizes">
      <summary>获取一个对象，表示在控件的标头的所需的大小 device-independent units (1/96th inch per unit) 和使用逻辑单位。</summary>
      <returns>一个对象，表示在控件的标头的所需的大小 device-independent units (1/96th inch per unit) 和使用逻辑单位。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.InBackgroundLayout">
      <summary>获取一个值，该值指示控件的布局处理过程是否出现在较低的优先级。</summary>
      <returns>true 如果该控件的布局将传递，发生在较低的优先级。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemDesiredSizes">
      <summary>获取或设置一个对象，表示在控件的项所需的大小 device-independent units (1/96th inch per unit) 和使用逻辑单位。</summary>
      <returns>一个对象，表示在控件的项所需的大小 device-independent units (1/96th inch per unit) 和使用逻辑单位。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemsHost">
      <summary>获取 <see cref="T:System.Windows.Controls.Panel" /> 显示在控件的项。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> 显示在控件的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.MustDisableVirtualization">
      <summary>获取或设置一个值，该值指示是否拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应该对其项进行虚拟化。</summary>
      <returns>true 如果拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应虚拟化其项; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示是否可以在水平轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示是否可以在垂直轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>获取范围的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示盘区的垂直大小（以与设备无关的像素为单位）。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>获取此盘区的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示盘区的水平大小（以与设备无关的像素为单位）。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>获取滚动内容的水平偏移量。</summary>
      <returns>一个表示水平偏移量的 <see cref="T:System.Double" />（以与设备无关的像素为单位）。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>获取或设置控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</summary>
      <returns>控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>获取滚动内容的垂直偏移量。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示滚动内容垂直偏移量（以与设备无关的像素为单位）。 有效值介于零与 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" /> 减 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> 之间。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>获取此内容的视区的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示此内容的视区的垂直大小（以与设备无关的像素为单位）。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>获取此内容的视区的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示此内容的视区的水平大小（以与设备无关的像素为单位）。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>获取对项集合中发生的操作。</summary>
      <returns>返回发生的操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>获取更改的过程中涉及的项的数目。</summary>
      <returns>表示更改中涉及的项目数的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>获取的数 用户界面 (UI) 中更改涉及的元素。</summary>
      <returns>表示更改中涉及的用户界面元素的数目的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>获取集合中的位置之前发生的更改。</summary>
      <returns>返回 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>获取集合中发生的更改的位置。</summary>
      <returns>返回 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector">
      <summary>获取或设置用于选择用来显示每个项的模板的自定义逻辑。</summary>
      <returns>提供逻辑并返回一个项容器，一个自定义对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate">
      <summary>获取或设置一个值，该值指示是否菜单中选择不同的项的容器，具体取决于基础集合或其他某种试探法中的项的类型。</summary>
      <returns>true 菜单中选择不同的项的容器;否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems">
      <summary>获取或设置一个值，该值指示是否多个项目中 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 可以一次选择。</summary>
      <returns>true 如果中的多项 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 可一次选定; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 当前正在执行的一大容量更新 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 集合。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 当前正在执行的一大容量更新 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 集合; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems">
      <summary>获取中的项 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中选定。</summary>
      <returns>中的项 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中选定。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件是否可以包含透明的内容。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件可以包含透明内容，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的 <see cref="T:System.Windows.UIElement" /> 内容。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
      <summary>获取或设置用于定位 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的委托处理程序方法。</summary>
      <returns>为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件提供位置信息的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 委托方法。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 显示与投影效果。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 显示带投影; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>获取或设置目标原点和弹出项对齐之间的水平距离点。</summary>
      <returns>目标原点和 popup 对齐点之间的水平距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 是否可见。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 可见，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
      <summary>获取可用于访问的逻辑的子元素的枚举器 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 可用来访问逻辑子元素的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Placement">
      <summary>获取或设置的方向 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件时，控件将打开，并指定的行为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控制时与屏幕边界重叠。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，该值确定的方向 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控制时，控件将打开，并指定该控件与屏幕边界的交互。 默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
      <summary>获取或设置相对于其矩形 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在打开时的位置。</summary>
      <returns>用于定位的矩形 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
      <summary>获取或设置相对于其元素 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 时它会打开所在位置。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 的逻辑父级，它是 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的打开和关闭动画。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> 枚举值，该值定义打开和关闭 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的动画。 默认值为 <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件时控件不再处于焦点将关闭。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件关闭时 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性设置为 false; false 如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件关闭时鼠标或键盘事件发生的外部 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>获取或设置目标原点和 popup 对齐点之间的垂直距离。</summary>
      <returns>目标原点和 popup 对齐点之间的垂直距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>获取或设置一个值以加上或减去 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 控件。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 要添加或从中减去 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 元素。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>获取或设置的最大可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 范围元素。</summary>
      <returns>最大可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 范围元素。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 范围元素。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 范围元素。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 要加上或减去 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 控件。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 要添加或从中减去 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 元素。 默认值为 0.1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>获取或设置范围控件的当前数量。</summary>
      <returns>范围控件的当前数量。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>获取或设置的时间，以毫秒为单位， <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 等待它开始重复之前按下时。 值必须为非负。</summary>
      <returns>总时间，以毫秒为单位， <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 等待它开始重复之前按下时。 默认为 <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>获取或设置的时间，以毫秒为单位，之间开始重复后重复。 值必须为非负。</summary>
      <returns>总时间，以毫秒为单位，介于开始重复后重复。 默认为 <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 已启用。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中启用 <see cref="T:System.Windows.Controls.ScrollViewer" /> 和内容的大小是大于显示区域; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 水平还是垂直显示。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 枚举值，该值定义是否 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 水平还是垂直显示。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.Track" /> 为 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 与一起使用 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>获取或设置当前可见的可滚动内容的量。</summary>
      <returns>当前可见的可滚动内容的量。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>获取一个值，表示的新位置 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>对应的新位置的值 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述在更改 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 导致该事件的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述的一种 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动导致 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation">
      <summary>获取或设置单元格可滚动的方向。</summary>
      <returns>单元格可滚动的方向。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
      <summary>获取或设置一个值，该值指示是否选定项。</summary>
      <returns>如果选定了项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
      <summary>获取一个值，该值指示键盘焦点是否处于 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 返回的值中。</summary>
      <returns>如果键盘焦点处于 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 控件中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 应该保留 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 中的当前项与同步 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 始终与中的当前项同步 <see cref="T:System.Windows.Controls.ItemCollection" />; false 如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 永远不会同步与当前项; null 如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 与当前的项仅当同步 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 使用 <see cref="T:System.Windows.Data.CollectionView" />。  默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>获取或设置当前所选内容或返回的第一项的索引为负一 (-1) 如果所选内容为空。</summary>
      <returns>在当前所选内容中的第一项的索引。 默认值为负一 (-1)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>获取或设置当前所选内容中的第一项或如果所选内容为空则返回 null  </summary>
      <returns>在当前所选内容中的第一项或 null 所选内容是否为空。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>获取或设置的值 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />, ，获得通过 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" />。</summary>
      <returns>选定的项的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>获取或设置用于获取路径 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 从 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />。</summary>
      <returns>用于获取路径 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" />。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector">
      <summary>获取或设置用于选择用来显示每个项的模板的自定义逻辑。</summary>
      <returns>提供逻辑并返回一个项容器，一个自定义对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
      <summary>表示要使用的样式的密钥 <see cref="T:System.Windows.Controls.Separator" /> 中的对象 <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.ResourceKey" /> ，它引用要使用的样式 <see cref="T:System.Windows.Controls.Separator" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate">
      <summary>获取或设置一个值，该值指示是否菜单中选择不同的项的容器，具体取决于基础集合或其他某种试探法中的项的类型。</summary>
      <returns>true 菜单中选择不同的项的容器;否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
      <summary>获取或设置一个值，该值指示在用户按 ENTER 键时文本编辑控件如何响应。</summary>
      <returns>如果按 ENTER 键可在当前光标位置处插入新行，则为 true；否则将忽略 ENTER 键。<see cref="T:System.Windows.Controls.TextBox" /> 的默认值为 false，而 <see cref="T:System.Windows.Controls.RichTextBox" /> 的默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
      <summary>获取或设置一个值，该值指示在用户按 TAB 键时文本编辑控件如何响应。</summary>
      <returns>如果按 Tab 键会在当前光标位置插入一个制表符，则为 true；如果按 Tab 键会将焦点移动到标记为制表位的下一个控件且不插入制表符，则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
      <summary>获取或设置一个值，确定是否在用户选择通过用鼠标拖动指针穿过该单词的一部分，该单词的其余部分处于选定状态。</summary>
      <returns>true 如果启用了自动选择字词;否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
      <summary>获取一个值，该值指示是否可以重做最新的撤消操作。</summary>
      <returns>true 如果可以重做最新的撤消操作;否则为 false。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
      <summary>获取一个值，该值指示是否可以撤消最后执行的操作。</summary>
      <returns>true 如果最新的操作可用于撤消;否则为 false。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush">
      <summary>获取或设置用于绘制的文本框中插入符号的画笔。</summary>
      <returns>用于绘制的文本框中插入符号画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
      <summary>获取可见的内容区域的垂直大小。</summary>
      <returns>一个浮点值，指定可见的内容区域的垂直大小 device-independent units (1/96th inch per unit)。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
      <summary>获取可见的内容区域的水平大小。</summary>
      <returns>一个浮点值，指定可见的内容区域的水平大小 device-independent units (1/96th inch per unit)。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
      <summary>获取或设置水平滚动条位置。</summary>
      <returns>一个浮点值，指定水平滚动位置以 device-independent units (1/96th inch per unit)。设置此属性将导致文本编辑控件滚动到指定的水平偏移量。 读取此属性将返回当前的水平偏移量。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否显示水平滚动条。</summary>
      <returns>由 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 枚举定义的一个值。默认值为 <see cref="F:System.Windows.Visibility.Hidden" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值，该值指示当文本框没有焦点时，文本框中是否显示选定的文本。</summary>
      <returns>true 如果当文本框没有焦点，则文本框将显示所选的文本否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
      <summary>获取或设置一个值，该值指示文本编辑控件对于与该控件交互的用户是否是只读的。</summary>
      <returns>如果文本编辑控件的内容对用户只读，则为 true；否则为用户可修改的文本编辑控件的内容。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible">
      <summary>获取或设置一个值，该值指示是否只读文本框显示插入符号。</summary>
      <returns>true 如果只读文本框显示插入符号;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive">
      <summary>获取一个值，该值指示该文本框有焦点和选择的文本。</summary>
      <returns>true 如果该文本框有焦点和所选的文本;否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
      <summary>获取或设置一个值，该值指示是否为文本编辑控件启用撤消支持。</summary>
      <returns>true 如果启用了撤消支持;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush">
      <summary>获取或设置用于突出显示所选的文本的画笔。</summary>
      <returns>突出显示选定的文本的画笔。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity">
      <summary>获取或设置的不透明度 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />。</summary>
      <returns>不透明度 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />。 默认值为 0.4。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
      <summary>获取一个 <see cref="T:System.Windows.Controls.SpellCheck" /> 对象，通过它可以访问 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" /> 文本内容中的拼写错误。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.SpellCheck" /> 对象，通过它可以访问 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" /> 文本内容中的拼写错误。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit">
      <summary>获取或设置存储在撤消队列中的操作数目。</summary>
      <returns>撤消队列中存储的操作数目。 默认值为 1，这意味着撤消队列限制为可用的内存。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 在调用之后设置 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> 和之前调用 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
      <summary>获取或设置垂直滚动条的位置。</summary>
      <returns>一个浮点值，指定在垂直滚动位置， device-independent units (1/96th inch per unit)。设置此属性将导致文本编辑控件滚动到指定的垂直偏移量。 读取此属性将返回当前的垂直偏移量。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否显示垂直滚动条。</summary>
      <returns>由 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 枚举定义的一个值。默认值为 <see cref="F:System.Windows.Visibility.Hidden" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
      <summary>获取可滚动的内容区域的垂直大小。</summary>
      <returns>一个浮点值，指定的可滚动的内容区域的垂直大小 device-independent units (1/96th inch per unit)。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
      <summary>获取可滚动的内容区域的水平大小。</summary>
      <returns>一个浮点值，指定的可滚动的内容区域的水平大小 device-independent units (1/96th inch per unit)。如果文本编辑控件未配置为支持滚动，则此属性的值为 0.0。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>获取是否 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件具有逻辑焦点和捕获鼠标并按下鼠标左键。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件具有焦点且鼠标捕获; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用来绘制刻度线。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" /> 用来绘制刻度线。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
      <summary>获取或设置增加值的刻度线的方向。</summary>
      <returns>true 如果增加值的方向是水平的左侧 <see cref="T:System.Windows.Controls.Slider" /> 键或向下对于垂直 <see cref="T:System.Windows.Controls.Slider" />; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 显示选择范围。</summary>
      <returns>如果显示选择范围，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
      <summary>获取或设置刻度线的可能的最大值。</summary>
      <returns>刻度线最大可能值。 默认值为 100.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
      <summary>获取或设置刻度线的可能的最小值。</summary>
      <returns>刻度线最小可能值。 默认值为零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
      <summary>获取或设置刻度线相对于出现的位置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement" /> 标识的位置的枚举值 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 中 <see cref="T:System.Windows.Style" /> 布局 <see cref="T:System.Windows.Controls.Slider" />。 默认值为 <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
      <summary>获取或设置包含为指定的刻度线的区域的空间缓冲区 <see cref="T:System.Windows.Controls.Primitives.TickBar" />。</summary>
      <returns>一个表示行或列的刻度线的左右两侧的总缓冲区区域的值。 默认值为零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
      <summary>获取或设置所选内容的终点。</summary>
      <returns>对于选择的值的范围中的最后一个值。 默认值为-1.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
      <summary>获取或设置所选内容的起始点。</summary>
      <returns>对于选择的值的范围中的第一个值。 默认值为-1.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
      <summary>获取或设置刻度线之间的间隔。</summary>
      <returns>刻度线之间的距离。 默认值为 1 (1.0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
      <summary>获取或设置标记的刻度线的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.DoubleCollection" /> ，它指定刻度线的位置。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 已选中。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 已选中; false <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 未经检查; 否则为 null。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>确定控件是否支持两个或三个状态。</summary>
      <returns>true 如果控件支持三种状态;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
      <summary>获取或设置溢出的建议的宽度 <see cref="T:System.Windows.Controls.ToolBar" /> 项流到下一行之前。</summary>
      <returns>一个 double 值，该值表示的建议的宽度 <see cref="T:System.Windows.Controls.ToolBar" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 用于减少 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 可减少 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 控制何时 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 情况下按下。 默认值是 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件都具有默认设置。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> ，会增加 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性 <see cref="T:System.Windows.Controls.Primitives.Track" /> 类。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> ，会增加 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 控制何时 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 情况下按下。 默认值是 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件都具有默认设置。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
      <summary>获取或设置是否增加的方向 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的默认方向相反。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton" /> 和 <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton" /> 交换的位置并且增加值的方向是反向; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Maximum">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最大可能的 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 可允许的最大 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Minimum">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最小可能 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 可允许的最小 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Orientation">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Track" /> 水平还是垂直显示。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 枚举值，该值指示是否 <see cref="T:System.Windows.Controls.Primitives.Track" /> 水平还是垂直显示。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Thumb">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件用来更改 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 与一起使用的控件 <see cref="T:System.Windows.Controls.Primitives.Track" />。 默认值是 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件都具有默认设置。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Value">
      <summary>获取或设置的当前值 <see cref="T:System.Windows.Controls.Primitives.Track" /> 具体的位置确定 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 控件。</summary>
      <returns>当前值 <see cref="T:System.Windows.Controls.Primitives.Track" />。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
      <summary>获取或设置的部分是可见的可滚动内容的大小。</summary>
      <returns>可滚动内容的可见区域的大小。 默认值是 <see cref="F:System.Double.NaN" />, ，这意味着未定义的内容大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
      <summary>获取元素的子元素的数目 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>0 和 2 指定的数中的子元素之间的整数 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
      <summary>获取或设置网格中的列数。</summary>
      <returns>网格中的列数。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
      <summary>获取或设置网格的第一行中的前导空白单元格的数目。</summary>
      <returns>网格的第一行中的空单元格的数目。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
      <summary>获取或设置网格中的行数。</summary>
      <returns>网格中的行数。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled">
      <summary>获取或设置一个值，该值指示是否启用用于打印当前页的选项。</summary>
      <returns>true 如果启用打印当前页的选项;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MaxPage">
      <summary>获取或设置允许的最大页码页范围内。</summary>
      <returns>一个 <see cref="T:System.UInt32" /> ，表示可以使用中的页范围的最大页码 打印 对话框。</returns>
      <exception cref="T:System.ArgumentException">该属性设置为小于 1。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MinPage">
      <summary>获取或设置允许的最小页码页范围内。</summary>
      <returns>一个 <see cref="T:System.UInt32" /> ，表示可以使用中的页范围的最小页码 打印 对话框。</returns>
      <exception cref="T:System.ArgumentException">该属性设置为小于 1。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRange">
      <summary>获取或设置要打印时的页面范围 <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> 设置为 <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.PageRange" /> 表示打印的页范围。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Controls.PageRange" /> 对象，该对象用于设置该属性具有范围的开始处，或者设置为小于 1 的值范围的末尾。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRangeSelection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.PageRangeSelection" /> 的此实例的 <see cref="T:System.Windows.Controls.PrintDialog" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PageRangeSelection" /> 值，该值表示要打印的页范围的类型。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight">
      <summary>获取页上的可打印区域的高度。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示可打印的页面区域的高度。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth">
      <summary>获取页上的可打印区域的宽度。</summary>
      <returns>一个 <see cref="T:System.Double" /> ，表示可打印的页面区域的宽度。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintQueue">
      <summary>获取或设置 <see cref="T:System.Printing.PrintQueue" /> ，它表示所选打印机。</summary>
      <returns>
        <see cref="T:System.Printing.PrintQueue" /> 用户选择的。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintTicket">
      <summary>获取或设置 <see cref="T:System.Printing.PrintTicket" /> ，它由 <see cref="T:System.Windows.Controls.PrintDialog" /> 当用户单击 打印 当前打印作业。</summary>
      <returns>一个 <see cref="T:System.Printing.PrintTicket" /> 下一步的时候，都可以使用 打印 单击对话框中的按钮。将此值设置 <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> 属性不会验证或修改指定 <see cref="T:System.Printing.PrintTicket" /> 特定 <see cref="T:System.Printing.PrintQueue" />。  如果需要可以使用 <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> 方法来创建 <see cref="T:System.Printing.PrintQueue" />-特定 <see cref="T:System.Printing.PrintTicket" /> 这是对给定的打印机有效。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled">
      <summary>获取或设置一个值，该值指示是否启用选项可在打印所选的页面。</summary>
      <returns>true 如果启用打印所选的页的选项;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled">
      <summary>获取或设置一个值，该值指示是否的用户 打印 的对话框具有用于指定要打印的页范围的选项。</summary>
      <returns>true 如果该选项才可用。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.ProgressBar" /> 显示实际值或一般的连续进度反馈。</summary>
      <returns>false 如果 <see cref="T:System.Windows.Controls.ProgressBar" /> 显示实际值; true 如果 <see cref="T:System.Windows.Controls.ProgressBar" /> 显示一般进度。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.Orientation">
      <summary>获取或设置的方向 <see cref="T:System.Windows.Controls.ProgressBar" />︰ 水平或垂直。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>获取或设置的名称来指定哪些 <see cref="T:System.Windows.Controls.RadioButton" /> 控件是互相排斥的。</summary>
      <returns>名称来指定哪些 <see cref="T:System.Windows.Controls.RadioButton" /> 控件是互相排斥的。  默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretPosition">
      <summary>获取或设置输入的插入符号的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，它指定输入插入符号的位置。默认情况下，插入符号位于承载的内容开头的第一个插入位置 <see cref="T:System.Windows.Controls.RichTextBox" />。 请参阅 <see cref="T:System.Windows.Documents.TextPointer" /> 有关"插入位置"之类的文本位置术语的详细信息。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 null。</exception>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为 <see cref="T:System.Windows.Documents.TextPointer" /> ，它引用当前文档之外的位置。</exception>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Document">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 表示的内容 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.FlowDocument" /> 对象，表示的内容 <see cref="T:System.Windows.Controls.RichTextBox" />。默认情况下，此属性设置为一个空 <see cref="T:System.Windows.Documents.FlowDocument" />。  具体来说，空 <see cref="T:System.Windows.Documents.FlowDocument" /> 包含单个 <see cref="T:System.Windows.Documents.Paragraph" />, ，后者包含一个 <see cref="T:System.Windows.Documents.Run" /> 不包括任何文本。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 null。</exception>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为 <see cref="T:System.Windows.Documents.FlowDocument" /> ，表示与另一内容 <see cref="T:System.Windows.Controls.RichTextBox" />。</exception>
      <exception cref="T:System.InvalidOperationException">此属性设置时更改块已被激活。</exception>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled">
      <summary>获取或设置一个值，该值指示用户是否可以与交互 <see cref="T:System.Windows.UIElement" /> 和 <see cref="T:System.Windows.ContentElement" /> 中的对象 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <returns>true 如果用户可以与交互 <see cref="T:System.Windows.UIElement" /> 和 <see cref="T:System.Windows.ContentElement" /> 中的对象 <see cref="T:System.Windows.Controls.RichTextBox" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的 RichTextBox。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>获取一个包含 <see cref="T:System.Windows.Controls.RichTextBox" /> 中当前选定内容的 <see cref="T:System.Windows.Documents.TextSelection" /> 对象。</summary>
      <returns>一个包含 <see cref="T:System.Windows.Controls.RichTextBox" /> 中当前选定内容的 <see cref="T:System.Windows.Documents.TextSelection" /> 对象。默认返回的 <see cref="T:System.Windows.Documents.TextSelection" /> 的 True 属性值为 <see cref="P:System.Windows.Documents.TextRange.IsEmpty" />。 空 <see cref="T:System.Windows.Documents.TextSelection" /> 在不包含任何选定内容的文本区域中呈现为一个插入符号。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>获取一个值，该值表示计算所得的 <see cref="T:System.Windows.Controls.RowDefinition" /> 高度。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示计算所得的高度（以与设备无关的像素为单位）。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>获取 <see cref="T:System.Windows.Controls.RowDefinition" /> 元素的计算所得的高度，或设置由 <see cref="T:System.Windows.Controls.RowDefinition" /> 定义的行的 <see cref="T:System.Windows.GridLength" /> 值。</summary>
      <returns>表示行高度的 <see cref="T:System.Windows.GridLength" />。 默认值为 1.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.RowDefinition" /> 的最大高度。</summary>
      <returns>表示最大高度的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.RowDefinition" /> 的允许的最低高度。</summary>
      <returns>表示允许的最低高度的 <see cref="T:System.Double" />。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Offset">
      <summary>获取一个值，该值表示此 <see cref="T:System.Windows.Controls.RowDefinition" /> 的偏移量值。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示行的偏移量。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Count">
      <summary>获取此实例中的项的总数 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <returns>集合中项的总数。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsReadOnly">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 是只读的。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsSynchronized">
      <summary>获取一个值，该值指示是否对此访问 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 同步 （线程安全）。</summary>
      <returns>true 如果对此集合的访问同步的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)">
      <summary>获取一个值，该值指示当前项内的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="index">集合中的当前项。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是集合中的有效的索引位置。</exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示集合是否具有固定大小。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是在列表中的有效的索引位置。</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeight">
      <summary>获取的更新后的高度 <see cref="T:System.Windows.Controls.ScrollViewer" /> 扩展盘区。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示更新后的盘区高度。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeightChange">
      <summary>获取一个值，该值指示的高度变化 <see cref="T:System.Windows.Controls.ScrollViewer" /> 扩展盘区。</summary>
      <returns>表示范围高度变化的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidth">
      <summary>获取更新后的宽度 <see cref="T:System.Windows.Controls.ScrollViewer" /> 扩展盘区。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示更新后的盘区宽度。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidthChange">
      <summary>获取一个值，该值指示的宽度的更改 <see cref="T:System.Windows.Controls.ScrollViewer" /> 扩展盘区。</summary>
      <returns>表示范围宽度更改的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalChange">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的水平偏移量的变化。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的水平偏移量的变化。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalOffset">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的水平偏移量的更新值。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的水平偏移量的更新值的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalChange">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的垂直偏移量更改。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的垂直偏移量更改。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalOffset">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的垂直偏移量的更新值。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的更新的垂直偏移量。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeight">
      <summary>获取更新后的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的视区高度值。</summary>
      <returns>表示更新后的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的视区高度的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeightChange">
      <summary>获取一个值，该值表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的视区高度值的更改。</summary>
      <returns>一个 <see cref="T:System.Double" /> ，表示垂直视区高度更改 <see cref="T:System.Windows.Controls.ScrollViewer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidth">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" /> 视区宽度更新后的值。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 视区宽度更新后的值的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidthChange">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的视区宽度的更改。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的视区宽度变化的 <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.AdornerLayer">
      <summary>获取 <see cref="T:System.Windows.Documents.AdornerLayer" /> 的装饰器上呈现。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.AdornerLayer" /> 的装饰器上呈现。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll">
      <summary>指示内容，如果它是否支持 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" />, ，应允许进行控制滚动。</summary>
      <returns>true 如果允许内容向下滚动;否则为 false。 一个 false 值指示 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 充当滚动工作区。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示是否可以在水平轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示是否可以在垂直轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>获取范围的垂直大小。</summary>
      <returns>范围的垂直大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>获取此盘区的水平大小。</summary>
      <returns>盘区的水平大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>获取滚动内容的水平偏移量。</summary>
      <returns>水平偏移量。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>获取或设置控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 控制滚动行为的元素。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>获取滚动内容的垂直偏移量。</summary>
      <returns>滚动内容的垂直偏移量。 有效值介于零与 <see cref="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight" /> 减 <see cref="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight" /> 之间。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>获取此内容的视区的垂直大小。</summary>
      <returns>此内容的视区的垂直大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>获取此内容的视区的水平大小。</summary>
      <returns>此内容的视区的水平大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
      <summary>获取或设置一个值，该值指示是否支持元素 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口允许滚动。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ScrollViewer" /> 执行滚动操作使得在逻辑单元; 方面 false 如果 <see cref="T:System.Windows.Controls.ScrollViewer" /> 执行滚动操作使得在物理单元方面。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>获取一个值，该值指示是否水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是否可见。</summary>
      <returns>一个 <see cref="T:System.Windows.Visibility" /> ，该值指示水平滚动条是否可见。 默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>获取一个值，该值指示是否垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是否可见。</summary>
      <returns>一个 <see cref="T:System.Windows.Visibility" /> ，该值指示垂直滚动条是否可见。 默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
      <summary>获取可见内容的水平偏移量。</summary>
      <returns>水平偏移量的可见内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
      <summary>获取可见内容的垂直偏移量。</summary>
      <returns>可见的内容的垂直偏移量。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>获取包含盘区垂直大小的一个值。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示此盘区的垂直大小。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>获取包含盘区水平大小的值。</summary>
      <returns>表示此盘区的水平大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
      <summary>获取一个值，该值指示控件具有 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中定义自定义键盘滚动行为其样式定义。</summary>
      <returns>true 如果控件定义了自定义键盘滚动行为;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>获取一个值，该值包含滚动内容的水平偏移量。</summary>
      <returns>表示滚动内容的水平偏移量的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 应显示。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值，该值指示是否水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 应显示。 默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
      <summary>获取或设置一个值，该值指示当用户拖动内容是否为静态 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>true 如果静态内容，则当用户拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
      <summary>获取或设置的速率 <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢 device-independent units (1/96th inch per unit) / 平方毫秒为单位在惯性运动时。</summary>
      <returns>速率 <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢 device-independent units (1/96th inch per unit) / 平方毫秒为单位。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningMode">
      <summary>获取或设置的方式 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作。</summary>
      <returns>一个值，指定如何 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作。  默认值为 <see cref="F:System.Windows.Controls.PanningMode.None" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningRatio">
      <summary>获取或设置滚动偏移量转换操作偏移的比例。</summary>
      <returns>滚动偏移量转换操作偏移的比例。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>获取一个值，该值表示可滚动的内容元素的垂直大小。</summary>
      <returns>表示可滚动的内容元素的垂直大小的 <see cref="T:System.Double" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>获取一个值，表示可滚动的内容元素的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示内容元素的可滚动的水平大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
      <summary>获取或设置实现 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口并提供此 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的滚动属性值的元素。</summary>
      <returns>控制滚动属性的元素，例如：范围、偏移量或视区大小。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>获取包含滚动内容的垂直偏移量的值。</summary>
      <returns>表示滚动内容的垂直偏移量的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 应显示。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值，该值指示是否垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 应显示。 默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>获取包含内容视区垂直大小的值。</summary>
      <returns>表示内容视区的垂直大小的 <see cref="T:System.Double" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>获取一个值，它包含内容视区的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，用于表示内容视区的水平大小。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.AddedCells">
      <summary>获取已添加到选定的单元格。</summary>
      <returns>添加的单元格。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.RemovedCells">
      <summary>获取单元格从选择中删除的列表。</summary>
      <returns>单元格的列表中删除。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>获取包含所选择的项的列表。</summary>
      <returns>自上次选择的项目 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件发生。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>获取包含未选定的项的列表。</summary>
      <returns>自最后时间以来未选定的项 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件发生。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPlacement">
      <summary>获取或设置在按下 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 时是否显示包含 <see cref="T:System.Windows.Controls.Slider" /> 的当前值的工具提示。 如果显示工具提示，此属性还指定工具提示的位置。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> 值之一，该值确定用于显示与 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 相关的工具提示的位置，或指定不显示工具提示。 默认值为 <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" />，该值指定不显示工具提示。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPrecision">
      <summary>获取或设置在工具提示中的 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的小数点右侧显示的小数位数。</summary>
      <returns>工具提示中显示的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的精度，由小数点右侧显示的小数位数指定。 默认值为零 (0)。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 设置为非负整数以外的值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseLarge">
      <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /> 的值减少与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性相同的量。</summary>
      <returns>用于减少 <see cref="T:System.Windows.Controls.Slider" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性减少的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认的 <see cref="T:System.Windows.Input.InputGesture" /> 为 <see cref="F:System.Windows.Input.Key.PageDown" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseSmall">
      <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /> 的值减少与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性相同的量。</summary>
      <returns>用于减少 <see cref="T:System.Windows.Controls.Slider" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性减少的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认的 <see cref="T:System.Windows.Input.InputGesture" /> 对象为 <see cref="F:System.Windows.Input.Key.Down" /> 和 <see cref="F:System.Windows.Input.Key.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Delay">
      <summary>获取或设置在按下 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 之后等待执行用于移动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的命令（如 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令）的时间（以毫秒为单位）。</summary>
      <returns>时间延迟（以毫秒为单位）。 默认值为系统按键延迟。 有关详细信息，请参阅<see cref="P:System.Windows.SystemParameters.KeyboardDelay" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseLarge">
      <summary>获取一个命令，该命令将滑块的值增加与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性相同的量。</summary>
      <returns>用于增加 <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性增加的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 为 <see cref="F:System.Windows.Input.Key.PageUp" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseSmall">
      <summary>获取一个命令，该命令将滑块的值增加与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性相同的量。</summary>
      <returns>返回 <see cref="T:System.Windows.Input.RoutedCommand" />，该命令将增加滑块的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性增加的数量相同）。 此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 对象为 <see cref="F:System.Windows.Input.Key.Up" /> 和 <see cref="F:System.Windows.Input.Key.Right" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Interval">
      <summary>获取或设置当用户单击 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时增加或减少命令之间的时间量（以毫秒为单位）。</summary>
      <returns>用于更改 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的命令之间的时间（以毫秒为单位）。 默认值为系统按键重复速率。 有关详细信息，请参阅 SystemParametersInfo (SPI_GETKEYBOARDSPEED)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>获取或设置增加值的方向。</summary>
      <returns>如果增加值的方向向左（对于水平滑块）或向下（对于垂直滑块），则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsMoveToPointEnabled">
      <summary>获取或设置一个值，该值指示是否立即将 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动到在鼠标指针悬停在 <see cref="T:System.Windows.Controls.Slider" /> 轨道的上方时鼠标单击的位置。</summary>
      <returns>如果 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 立即移动到鼠标单击的位置，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Slider" /> 是否沿 <see cref="T:System.Windows.Controls.Slider" /> 显示选择范围。</summary>
      <returns>如果显示选择范围，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSnapToTickEnabled">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Slider" /> 是否自动将 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动到最近的刻度线。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Slider" /> 要求 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的位置为刻度线，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.MaximizeValue">
      <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 设置为 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值。</summary>
      <returns>要使用的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认值为 <see cref="F:System.Windows.Input.Key.End" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.MinimizeValue">
      <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 设置为 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值。</summary>
      <returns>要使用的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认值为 <see cref="F:System.Windows.Input.Key.Home" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的方向。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.Orientation" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionEnd">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的指定选择内容的最大值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> 的值的选择范围的最大值。 默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionStart">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的指定选择内容的最大值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> 的值的选择范围的最大值。 默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickFrequency">
      <summary>获取或设置刻度线之间的间隔。</summary>
      <returns>刻度线之间的距离。 默认值为 (1.0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickPlacement">
      <summary>获取或设置与 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" /> 相关的刻度线的位置。</summary>
      <returns>一个 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 值，该值定义如何在与滑块条相关的 <see cref="T:System.Windows.Controls.Slider" /> 中放置刻度线。 默认值为 <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Ticks">
      <summary>获取或设置为 <see cref="T:System.Windows.Controls.Slider" /> 显示的刻度线的位置。</summary>
      <returns>为 <see cref="T:System.Windows.Controls.Slider" /> 显示的一组刻度线。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.SoundPlayerAction.Source">
      <summary>获取或设置音频源位置。</summary>
      <returns>音频源位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.CustomDictionaries">
      <summary>获取字典的集合用于自定义拼写检查的文件位置。</summary>
      <returns>词典文件位置的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.IsEnabled">
      <summary>获取或设置一个值，该值确定是否对此文本编辑控件（如 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />）启用拼写检查器。</summary>
      <returns>如果对控件启用拼写检查器，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.SpellingReform">
      <summary>获取或设置由拼写检查器使用的拼写修订规则。</summary>
      <returns>由拼写检查器使用的拼写修订规则。 默认值对于法语是 <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" />，对于德语是 <see cref="F:System.Windows.Controls.SpellingReform.Postreform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.SpellingError.Suggestions">
      <summary>获取拼错的字的建议拼写替换列表。</summary>
      <returns>拼错的字的拼写建议集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.StackPanel" /> 可以滚动的水平维度。</summary>
      <returns>true 如果内容可以水平滚动，;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示是否可垂直滚动内容。</summary>
      <returns>true 如果内容可以垂直滚动，;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentHeight">
      <summary>获取包含盘区垂直大小的一个值。</summary>
      <returns>表示盘区垂直大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentWidth">
      <summary>获取包含盘区水平大小的值。</summary>
      <returns>表示此盘区的水平大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HasLogicalOrientation">
      <summary>获取一个值，该值指示如果此 <see cref="T:System.Windows.Controls.StackPanel" /> 具有垂直或水平方向。</summary>
      <returns>此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HorizontalOffset">
      <summary>获取一个值，该值包含滚动内容的水平偏移量。</summary>
      <returns>表示滚动内容的水平偏移量的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.LogicalOrientation">
      <summary>获取一个值，表示 <see cref="T:System.Windows.Controls.Orientation" /> 的 <see cref="T:System.Windows.Controls.StackPanel" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Orientation" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>获取或设置一个值，该值指示子元素的堆叠维度。</summary>
      <returns>子内容的 <see cref="T:System.Windows.Controls.Orientation" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ScrollOwner">
      <summary>获取或设置一个值，标识控制在此的滚动行为的容器 <see cref="T:System.Windows.Controls.StackPanel" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 拥有滚动行为的 <see cref="T:System.Windows.Controls.StackPanel" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.VerticalOffset">
      <summary>获取包含滚动内容的垂直偏移量的值。</summary>
      <returns>表示滚动内容的垂直偏移量的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportHeight">
      <summary>获取包含内容视区垂直大小的值。</summary>
      <returns>表示内容视区的垂直大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportWidth">
      <summary>获取一个值，它包含内容视区的水平大小。</summary>
      <returns>表示内容视区的垂直大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.AnchorInfo">
      <summary>获取一个提供有关批注对象的信息的对象。</summary>
      <returns>一个提供有关批注对象的信息的 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.Author">
      <summary>获取手写便笺创建者的姓名。</summary>
      <returns>手写便笺创建者的姓名。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题的字体系列。</summary>
      <returns>控件标题的 <see cref="T:System.Drawing.FontFamily" />。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的字号。</summary>
      <returns>表示字号的 <see cref="T:System.Double" />。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的拉伸程度。</summary>
      <returns>一个 <see cref="T:System.Windows.FontStretch" /> 结构，它表示与字体的正常纵横比相比拉伸的程度。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的样式。</summary>
      <returns>一个 <see cref="T:System.Windows.FontStyle" /> 结构，它表示标题的样式，如正常体、斜体或倾斜。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.FontWeight" /> 结构，它表示字体的粗细，如粗、超粗或超细。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsActive">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 是否处于活动状态。</summary>
      <returns>如果该控件处于活动状态，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsExpanded">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 是否已展开。</summary>
      <returns>如果该控件已展开，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor">
      <summary>获取一个值，该值指示鼠标光标是否位于 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 的定位标记上。</summary>
      <returns>如果鼠标光标位于定位标记上，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.PenWidth">
      <summary>获取或设置墨迹 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 的笔宽。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示笔宽。 默认为 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> 的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.StickyNoteType">
      <summary>获取一个值，该值指示手写便笺是文本还是墨迹。</summary>
      <returns>指示批注类型的 <see cref="T:System.Windows.Controls.StickyNoteType" /> 值。 默认值为 <see cref="F:System.Windows.Controls.StickyNoteType.Text" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentStringFormat">
      <summary>获取一个复合字符串，指定如何设置格式的内容 <see cref="T:System.Windows.Controls.TabItem" /> 对象它们显示为字符串。</summary>
      <returns>指定如何设置格式的内容的复合字符串 <see cref="T:System.Windows.Controls.TabItem" /> 对象它们显示为字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" /> 以应用于所有 <see cref="T:System.Windows.Controls.TabItem" /> 不具有 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 或 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 定义属性。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> 以应用于所有 <see cref="T:System.Windows.Controls.TabItem" /> 不具有 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 或 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 定义属性。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> ，提供了自定义逻辑来选择用于显示控件的内容的模板。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>获取当前所选的内容 <see cref="T:System.Windows.Controls.TabItem" />。</summary>
      <returns>当前所选内容 <see cref="T:System.Windows.Controls.TabItem" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentStringFormat">
      <summary>获取一个复合字符串，指定如何设置当前所选内容格式 <see cref="T:System.Windows.Controls.TabItem" /> 如果显示为一个字符串。</summary>
      <returns>指定如何设置格式的当前所选内容的复合字符串 <see cref="T:System.Windows.Controls.TabItem" /> 如果显示为一个字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplate">
      <summary>获取 <see cref="T:System.Windows.DataTemplate" /> 的当前选定的项。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> 的选定项。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector">
      <summary>获取 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 的当前选定的项。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 的当前选定的项。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>获取或设置选项卡标题相对于选项卡上内容的对齐方式。</summary>
      <returns>相对于选项卡上的内容的选项卡标题对齐方式。 默认值为 <see cref="F:System.Windows.Controls.Dock.Top" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.TabItem" /> 处于选中状态。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.TabItem" /> 选定; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>获取选项卡条定位。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Dock" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.Dock.Top" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用来填充内容区域的背景。</summary>
      <returns>用于填充内容区域的背景的画笔或 null 不使用背景画笔。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>获取或设置文本的每个行相对于基线的偏移量。</summary>
      <returns>文本的每个行相对于基线的偏移量，以与设备无关的像素为单位。<see cref="F:System.Double.NaN" /> 表示将根据当前的字体特征自动计算最佳基线偏移量。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakAfter">
      <summary>获取 <see cref="T:System.Windows.LineBreakCondition" /> ，该值指示当前元素的后面应换内容的方式。</summary>
      <returns>在当前元素之后的换行内容的条件。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakBefore">
      <summary>获取 <see cref="T:System.Windows.LineBreakCondition" /> ，该值指示内容应当如何分行当前元素的前面。</summary>
      <returns>在当前元素之后的换行内容的条件。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentEnd">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 到中的内容的末尾 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到中的内容的末尾 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentStart">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 到中的内容的开头 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 到中的内容的开头 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 的首选最常用字体系列。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 对象，该对象指定首选的字体系列，或者具有一个或多个备用字体系列的主要首选字体系列。 默认值为由 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值确定的字体。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 的顶级字号。</summary>
      <returns>希望使用的字号，以与设备无关的像素为单位。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 的常用字体拉伸特征。</summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 类的成员，指定要使用的字体拉伸特征。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 的顶级字体样式。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> 类的一个成员，用于指定所需的字体样式。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 的顶级字体粗细。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> 类的一个成员，指定所需的字体粗细。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>获取或设置要应用到 <see cref="T:System.Windows.Controls.TextBlock" /> 的文本内容的 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>要应用于文本内容的画笔。 默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.HostedElementsCore">
      <summary>获取一个枚举器可循环访问此承载的元素 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>可以遍历承载此元素的枚举器 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>获取包含顶级 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Controls.TextBlock" /> 的内容。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Controls.TextBlock" /> 的内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled">
      <summary>获取或设置一个值，该值指示是否启用或禁用自动断字的词。</summary>
      <returns>true 指示自动换行启用断字和的单词;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>行的高度范围为 0.0034 到 160000，以与设备无关的像素为单位。 值 <see cref="F:System.Double.NaN" />（等效于“Auto”的属性值）表示行高度由当前的字体特征自动确定。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非正值。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>获取或设置用于为 <see cref="T:System.Windows.Controls.TextBlock" /> 中的每行文本确定行框的机制。</summary>
      <returns>用于为 <see cref="T:System.Windows.Controls.TextBlock" /> 中的每行文本确定行框的机制。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>获取或设置一个值，该值指示内容区域的边界之间填充空间的宽度，以及由 <see cref="T:System.Windows.Controls.TextBlock" /> 显示的内容。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边距量（以与设备无关的像素为单位）。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。  使用类型安全 <see cref="P:System.Windows.Controls.TextBlock.HostedElementsCore" /> 属性相反。</summary>
      <returns>该内容主机承载的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>获取或设置的文本内容 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>文本内容 <see cref="T:System.Windows.Controls.TextBlock" />。 请注意，所有非文本内容将被剥除，从而导致的纯文本表示形式 <see cref="T:System.Windows.Controls.TextBlock" /> 内容。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需的对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>获取或设置 <see cref="T:System.Windows.TextDecorationCollection" /> ，包含要应用于的文本的效果 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 包含要应用于此元素的文本修饰的集合。 默认值是 null （应用任何文本修饰）。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextEffects">
      <summary>获取或设置要应用于此元素中的文本内容的效果。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.TextEffectCollection" /> 包含一个或多个 <see cref="T:System.Windows.Media.TextEffect" /> 对象以定义要应用于文本的效果 <see cref="T:System.Windows.Controls.TextBlock" />。 默认值是 null （不应用任何效果）。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>获取或设置在内容超出内容区域时要采用的文本剪裁行为。</summary>
      <returns>
        <see cref="T:System.Windows.TextTrimming" /> 值中的一个，指定要采用的文本裁剪行为。 默认值为 <see cref="F:System.Windows.TextTrimming.None" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>获取或设置如何 <see cref="T:System.Windows.Controls.TextBlock" /> 文本进行换行。</summary>
      <returns>
        <see cref="T:System.Windows.TextWrapping" /> 值之一。 默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Typography">
      <summary>获取此元素的内容当前有效的版式变体。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。 默认版式值的列表，请参阅 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.VisualChildrenCount">
      <summary>获取的数 <see cref="T:System.Windows.Media.Visual" /> 子级由 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>由托管的可视子对象的数量 <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretIndex">
      <summary>获取或设置插入点移动的插入位置索引。</summary>
      <returns>从零开始插入的插入位置的脱字号。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CharacterCasing">
      <summary>获取或设置如何字符大小写格式手动输入到文本框中时。</summary>
      <returns>其中一个 <see cref="T:System.Windows.Controls.CharacterCasing" /> 值，该值指定如何手动输入的字符的大小写。 默认值为 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineCount">
      <summary>获取文本框中的总行数。</summary>
      <returns>文本框中的总行数；如果布局信息不可用，则为 –1。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LogicalChildren">
      <summary>获取一个枚举器逻辑的子元素 <see cref="T:System.Windows.Controls.TextBox" />。</summary>
      <returns>逻辑的子元素的枚举数 <see cref="T:System.Windows.Controls.TextBox" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>获取或设置最大可以在文本框中手动输入的字符数。</summary>
      <returns>最大可以在文本框中手动输入的字符数。 默认值为 0，表示没有限制。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLines">
      <summary>获取或设置可见行的最大数目。</summary>
      <returns>最大可见的行数。 默认值为 <see cref="F:System.Int32.MaxValue" />。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 小于 <see cref="P:System.Windows.Controls.TextBox.MinLines" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MinLines">
      <summary>获取或设置最小可见的行数。</summary>
      <returns>最小可见行数。 默认值为 1。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 大于 <see cref="P:System.Windows.Controls.TextBox.MaxLines" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>获取或设置文本框中当前选择的内容。</summary>
      <returns>文本框中当前选定的文本。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>获取或设置一个值，该值在文本框中当前所选内容中的字符数。</summary>
      <returns>在文本框中当前所选内容中的字符数。 默认值为 0。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> 设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>获取或设置当前所选内容的起始位置的字符索引。</summary>
      <returns>当前所选内容的开头的字符索引。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> 设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>获取或设置文本框的文本内容。</summary>
      <returns>包含此文本框的文本内容的字符串。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>获取或设置文本框的内容的水平对齐方式。</summary>
      <returns>其中一个 <see cref="T:System.Windows.TextAlignment" /> 值，该值指定文本框的内容的水平对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextDecorations">
      <summary>获取要应用于文本框中的文本修饰。</summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 包含要应用于文本框中的文本修饰的集合。 默认值是 null （应用任何文本修饰）。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>获取或设置文本框中文本的换行方式。</summary>
      <returns>指定文本框中文本换行方式的其中一个 <see cref="T:System.Windows.TextWrapping" /> 值。 默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Typography">
      <summary>获取文本框中的文本内容的当前有效的版式变体。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。 默认版式值的列表，请参阅 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.AddedLength">
      <summary>获取或设置已添加到该控件的符号数。</summary>
      <returns>已添加到该控件的符号数。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.Offset">
      <summary>获取或设置发生更改的位置。</summary>
      <returns>位置发生更改。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.RemovedLength">
      <summary>获取或设置已从控件中移除的符号数。</summary>
      <returns>已从控件中移除的符号数。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.Changes">
      <summary>获取对象的集合，其中包含有关所发生的更改信息。</summary>
      <returns>包含有关所发生的更改的信息的对象集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
      <summary>获取如何撤消堆栈是引起的或受此文本更改 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.UndoAction" /> 适用于此文本更改。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.Text">
      <summary>获取或设置用于标识控件的集合中的项的字符串。</summary>
      <returns>向用户标识该项的文本。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
      <summary>获取或设置标识控件的集合中每个项的项目的属性的名称。</summary>
      <returns>包含向用户标识该项的文本的属性的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Band">
      <summary>获取或设置一个值，该值指示工具栏应放置在何处 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <returns>带区 <see cref="T:System.Windows.Controls.ToolBarTray" /> 中定位工具栏。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.BandIndex">
      <summary>获取或设置指示工具栏上的带区上的位置的带索引号。</summary>
      <returns>工具栏上的带区的位置 <see cref="T:System.Windows.Controls.ToolBarTray" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 应用于上一个工具栏按钮。</summary>
      <returns>一个表示工具栏上的按钮的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 应用于上的复选框 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>在所表示的复选框的默认样式的资源键 <see cref="T:System.Windows.Controls.ToolBar" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 上应用于组合框 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>一个表示在工具栏上的组合框的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
      <summary>获取一个值，该值指示工具栏是否具有不可见的项。</summary>
      <returns>true 如果有不可见，则在工具栏上的项否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
      <summary>获取指示 <see cref="T:System.Windows.Controls.ToolBar" /> 项是否为溢出项的值。</summary>
      <returns>如果该项是溢出项，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ToolBar" /> 溢出区域当前是否可见。</summary>
      <returns>true 如果溢出区域可见，则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 上应用于菜单 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>一个表示菜单的工具栏上的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Orientation">
      <summary> 获取 <see cref="T:System.Windows.Controls.ToolBar" /> 的方向。</summary>
      <returns>工具栏的方向。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.OverflowMode">
      <summary> 获取或设置一个值，指示应将溢出面板而不是在主面板中放置项。</summary>
      <returns>溢出模式;默认值是 <see cref="F:System.Windows.Controls.OverflowMode.AsNeeded" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 应用于一个工具栏上的单选按钮。</summary>
      <returns>一个表示单选按钮在工具栏上的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 上应用于分隔符 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>一个表示在工具栏上的分隔符的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 上应用于文本框 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>表示文本框在工具栏上的默认样式的资源键</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 应用于 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 上的控件 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>一个表示在工具栏上的切换按钮的默认样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Background">
      <summary>获取或设置要用于的背景色的画笔 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <returns>若要使用的背景色的画笔 <see cref="T:System.Windows.Controls.ToolBarTray" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
      <summary>获取或设置一个值，该值指示是否可在 <see cref="T:System.Windows.Controls.ToolBarTray" /> 内移动 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
      <returns>如果无法在工具栏区内移动工具栏，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
      <summary>获取一个枚举器的逻辑子元素 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <returns>一个枚举数的子级 <see cref="T:System.Windows.Controls.ToolBarTray" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Orientation">
      <summary>指定的方向 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
      <summary>获取的集合 <see cref="T:System.Windows.Controls.ToolBar" /> 中的元素 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
      <summary>获取的当前可见的子级的个数。</summary>
      <returns>可见数 <see cref="T:System.Windows.Controls.ToolBar" /> 中的对象 <see cref="T:System.Windows.Controls.ToolBarTray" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
      <summary>获取或设置用于放置此 <see cref="T:System.Windows.Controls.ToolTip" /> 的委托处理程序方法。</summary>
      <returns>提供 <see cref="T:System.Windows.Controls.ToolTip" /> 的放置信息的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 委托方法。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
      <summary>获取或设置一个值，该值指示控件是否有阴影。</summary>
      <returns>true 如果控件具有投影，则否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>获取或设置目标原点和弹出项对齐之间的水平距离点。</summary>
      <returns>目标原点和 popup 对齐点之间的水平距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.ToolTip" /> 是否可见。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ToolTip" /> 可见，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>获取或设置的方向 <see cref="T:System.Windows.Controls.ToolTip" /> 控制它时，将打开，并指定如何 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的行为时与屏幕边界重叠。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，该值确定的方向 <see cref="T:System.Windows.Controls.ToolTip" /> 控制时打开，并指定该控件与屏幕边界的交互。 默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
      <summary>获取或设置相对于其的矩形区域 <see cref="T:System.Windows.Controls.ToolTip" /> 控件在打开时的位置。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 结构，它定义用于定位的矩形 <see cref="T:System.Windows.Controls.ToolTip" /> 控件。 默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 相对于其 <see cref="T:System.Windows.Controls.ToolTip" /> 时它会打开所在位置。</summary>
      <returns>作为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的逻辑父级的 <see cref="T:System.Windows.UIElement" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.StaysOpen">
      <summary>获取或设置一个值，该值指示是否已打开 <see cref="T:System.Windows.Controls.ToolTip" /> 保持打开状态直到用户单击鼠标时鼠标并非针对 <see cref="T:System.Windows.Controls.ToolTip" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.ToolTip" /> 始终处于打开状态，直到单击鼠标按钮之外的用户将其关闭 <see cref="T:System.Windows.Controls.ToolTip" />; 否则为 false。 默认值为 true。</returns>
      <exception cref="T:System.NotSupportedException">发生时 <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 设置为 false 工具提示未打开。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>获取或设置目标原点和弹出项对齐之间的垂直距离点。</summary>
      <returns>目标原点和 popup 对齐点之间的垂直距离。 有关目标原点和 popup 对齐点的信息，请参阅 Popup 放置行为。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
      <summary>获取或设置当第二个工具提示在没有延迟的情况下显示时，两个工具提示的显示之间的最大时间。</summary>
      <returns>以毫秒为单位表示延迟时间的整数值。 默认值为 100 毫秒。</returns>
      <exception cref="T:System.ArgumentException">属性 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 的值小于零 (0)。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
      <summary>获取或设置是否为工具提示显示投影效果。</summary>
      <returns>true 如果投影效果会出现工具提示。否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
      <summary>获取或设置由 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 和 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性为工具提示指定的区域的左侧偏移量。</summary>
      <returns>指定水平距离的值。 默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
      <summary>获取或设置工具提示打开之前的时间长度。</summary>
      <returns>一个整数值，以毫秒为单位表示显示延迟时间。 默认值为 <see cref="P:System.Windows.SystemParameters.MouseHoverTime" />（以毫秒为单位）。</returns>
      <exception cref="T:System.ArgumentException">属性 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 的值小于零 (0)。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
      <summary>获取或设置是否显示工具提示。</summary>
      <returns>true 如果用户将鼠标指针悬停在定义此工具提示; 该对象上时显示工具提示否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsOpen">
      <summary>获取工具提示当前是否可见。</summary>
      <returns>如果工具提示可见，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>获取或设置工具提示在打开时的方向，并指定工具提示在与屏幕边界重叠时的行为方式。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，它确定工具提示在打开时的方向，并指定工具提示如何与屏幕边界交互。 默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
      <summary>获取或设置相对于其来放置工具提示的矩形区域。</summary>
      <returns>一个 <see cref="T:System.Windows.Rect" /> 结构，定义用于放置 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的矩形。 默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>获取或设置相对于其来放置工具提示的对象。</summary>
      <returns>作为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的逻辑父级的 <see cref="T:System.Windows.UIElement" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
      <summary>获取或设置工具提示保持可见的时间。</summary>
      <returns>一个整数值，表示以毫秒为单位的显示时间。 默认值为 5000 毫秒。</returns>
      <exception cref="T:System.ArgumentException">属性 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 的值小于零 (0)。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
      <summary>获取或设置是否为未启用的对象显示工具提示。</summary>
      <returns>如果在对象未启用时显示工具提示，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>获取或设置工具提示的内容。</summary>
      <returns>定义工具提示的内容的 <see cref="T:System.Windows.DependencyObject" /> 元素。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
      <summary>获取或设置由 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 和 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性为工具提示指定的区域的顶部距离。</summary>
      <returns>指定垂直距离的值。 默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
      <summary>获取是否 <see cref="T:System.Windows.Controls.TreeView" /> 可以滚动。</summary>
      <returns>始终返回 true 因为控件有 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中其样式。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>获取 <see cref="T:System.Windows.Controls.TreeView" /> 中的选定项。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeView" /> 中的选定对象；如果没有选定任何项，则为 null。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>获取由指定的属性的值 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 为 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />。</summary>
      <returns>通过指定属性的值 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 为 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />, ，或 null 如果未不选定任何项。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>获取或设置用于获取路径 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 的 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 中 <see cref="T:System.Windows.Controls.TreeView" />。</summary>
      <returns>一个字符串，包含用于获取路径 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />。 默认值为 String.Empty。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>获取或设置是否中的嵌套的项 <see cref="T:System.Windows.Controls.TreeViewItem" /> 是展开还是折叠。</summary>
      <returns>true 如果嵌套的项， <see cref="T:System.Windows.Controls.TreeViewItem" /> 可见; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>获取或设置是否 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件被选定。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.TreeViewItem" /> 选定; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.TreeViewItem" /> 具有键盘焦点。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.TreeViewItem" /> 具有键盘焦点; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>获取或设置一个对象，表示的视区和缓存大小 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <returns>一个对象，表示的视区和缓存大小 <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>获取一个对象，表示所需的大小 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />, 使用逻辑单位，以像素为单位。</summary>
      <returns>一个对象，表示所需的大小 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />, 使用逻辑单位，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>获取一个值，该值指示控件的布局处理过程是否出现在较低的优先级。</summary>
      <returns>true 如果该控件的布局将传递，发生在较低的优先级。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>获取或设置一个对象，表示控件的项，以像素为单位使用逻辑单位的所需的大小。</summary>
      <returns>一个表示控件的项，以像素为单位使用逻辑单位的所需的大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>获取 <see cref="T:System.Windows.Controls.Panel" /> 显示 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 的 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> 显示 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 的 <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>获取或设置一个值，该值指示是否拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应该对其项进行虚拟化。</summary>
      <returns>true 如果拥有 <see cref="T:System.Windows.Controls.ItemsControl" /> 应虚拟化其项; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Capacity">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.UIElementCollection" /> 可包含的元素数。</summary>
      <returns>集合可以包含的元素的总数。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Count">
      <summary>获取集合中的实际元素数。</summary>
      <returns>集合中的元素的实际数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
      <summary>获取一个值，该值指示是否访问 <see cref="T:System.Collections.ICollection" /> 接口同步 （线程安全）。</summary>
      <returns>true 如果同步对集合的访问;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 的从零开始的索引位置存储 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <param name="index">索引位置 <see cref="T:System.Windows.UIElement" />。</param>
      <returns>一个 <see cref="T:System.Windows.UIElement" /> 指定 <paramref name="index" /> 位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
      <summary>获取一个对象，可用于同步对 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
      <returns>
        <see cref="T:System.Object" /> 可用于同步对 <see cref="T:System.Collections.ICollection" /> 接口。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果列表的大小固定，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果列表为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。 有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>获取绑定元素上所有活动 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合。</summary>
      <returns>绑定元素上所有活动 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的只读集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ErrorTemplate">
      <summary>获取或设置用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
      <returns>默认模板在被修饰元素周围定义了红色边框。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>获取一个值，该值指示绑定目标元素上的任一绑定是否具有 <see cref="T:System.Windows.Controls.ValidationError" />。</summary>
      <returns>如果绑定元素上的任一绑定具有非空的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合，则设置为 true；否则设置为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSite">
      <summary>获取或设置显示来指示验证错误发生在绑定元素上设置此属性的元素。</summary>
      <returns>元素，显示来指示绑定元素上发生验证错误。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor">
      <summary>获取或设置此元素似乎指示发生了错误的元素。</summary>
      <returns>此元素似乎指示发生了错误的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.BindingInError">
      <summary>获取 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 此对象 <see cref="T:System.Windows.Controls.ValidationError" />。 对象显式将标记为的无效或已失败的验证规则。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 此对象 <see cref="T:System.Windows.Controls.ValidationError" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>获取或设置一个对象，该对象为此 <see cref="T:System.Windows.Controls.ValidationError" /> 提供其他上下文，如描述错误的字符串。</summary>
      <returns>一个对象，它提供此 <see cref="T:System.Windows.Controls.ValidationError" /> 的其他上下文。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>获取或设置 <see cref="T:System.Exception" /> 对象，它是此事件的原因 <see cref="T:System.Windows.Controls.ValidationError" />, ，如果该错误是异常的结果。</summary>
      <returns>
        <see cref="T:System.Exception" /> 对象时，如果错误是异常造成。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.RuleInError">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，它是此事件的原因 <see cref="T:System.Windows.Controls.ValidationError" />, ，如果该错误是验证规则的结果。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 对象时，如果错误是验证规则的结果。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>获取一个值，该值指示错误是否为新的错误或已清除现有错误。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> 值，该值指示错误是否是新的错误或已清除现有错误。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>获取导致此错误 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> 对象，它导致以下情况 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
      <summary>获取一个对象，提供有关无效性的其他信息。</summary>
      <returns>一个对象，提供有关无效性的其他信息。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.IsValid">
      <summary>获取一个值，该值指示是否对照检查值 <see cref="T:System.Windows.Controls.ValidationRule" /> 是否有效。</summary>
      <returns>true 如果值为有效，则为否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ValidResult">
      <summary>获取的有效实例 <see cref="T:System.Windows.Controls.ValidationResult" />。</summary>
      <returns>有效实例 <see cref="T:System.Windows.Controls.ValidationResult" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated">
      <summary>获取或设置一个值，该值指示是否验证规则运行时的目标 <see cref="T:System.Windows.Data.Binding" /> 进行更新。</summary>
      <returns>true 如果验证规则的运行时的目标 <see cref="T:System.Windows.Data.Binding" /> 更新; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidationStep">
      <summary>获取或设置验证规则运行时。</summary>
      <returns>枚举值之一。  默认值为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
      <summary>获取与视图模式的样式相关联的对象。</summary>
      <returns>要使用的视图模式的样式。 默认值是为样式 <see cref="T:System.Windows.Controls.ListBox" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
      <summary>获取要使用的视图模式中的项的样式。</summary>
      <returns>样式 <see cref="T:System.Windows.Controls.ListViewItem" />。 默认值是为样式 <see cref="T:System.Windows.Controls.ListBoxItem" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>获取或设置的单一子 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。</summary>
      <returns>单一子 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
      <summary>获取一个枚举器可循环访问此逻辑子级 <see cref="T:System.Windows.Controls.Viewbox" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Viewbox" /><see cref="T:System.Windows.Media.Stretch" /> 模式，该模式确定内容适应可用空间的方式。</summary>
      <returns>确定内容适应可用空间的方式的 <see cref="T:System.Windows.Media.Stretch" />。 默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StretchDirection" />，它确定缩放如何应用 <see cref="T:System.Windows.Controls.Viewbox" /> 的内容。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.StretchDirection" />，它确定缩放如何应用于 <see cref="T:System.Windows.Controls.Viewbox" /> 的内容。 默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
      <summary>获取数量的子 <see cref="T:System.Windows.Media.Visual" /> 的此实例中的对象 <see cref="T:System.Windows.Controls.Viewbox" />。</summary>
      <returns>数 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Camera">
      <summary>获取或设置将 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 3-D 内容投影到 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 2-D 图面的照相机对象。</summary>
      <returns>将 3-D 内容投影到 2-D 图面的照相机。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Children">
      <summary>获取 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 子集合。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 子集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
      <summary>获取一个整数，表示的数 <see cref="T:System.Windows.Media.Visual" /> 中的对象 <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children" /> 集合 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</summary>
      <returns>整数，它表示的视觉效果的 Children 集合中的数字 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
      <summary>获取缓存后再视区的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</summary>
      <returns>在视区后缓存的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
      <summary>获取缓存的大小后视区时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</summary>
      <returns>在视区后缓存的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLength">
      <summary>获取或设置缓存的大小之前和之后视区时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</summary>
      <returns>缓存之前和之后视区的大小时 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit">
      <summary>获取或设置使用的单元的类型 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性。</summary>
      <returns>使用的单元的类型 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性。 默认值为 <see cref="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 可以虚拟化进行分组或组织的层次结构中的项目。</summary>
      <returns>一个值，该值指示是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 可以虚拟化进行分组或组织的层次结构中的项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 可以虚拟化进行分组或组织的层次结构中的项目。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable">
      <summary>获取或设置一个值，该值指示是否此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应虚拟化项目。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应虚拟化项; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化其子集合。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 的实例正在虚拟化其子集合，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping">
      <summary>获取或设置一个值，该值指示是否此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 虚拟化其集合中的项，当它显示组。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 虚拟化分组后的项目在其集合; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>获取一个值，标识 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 此 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
      <returns>用于此 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit">
      <summary>获取一个值，该值指示是否滚动的测量作为集合中的项或像素。</summary>
      <returns>一个值，该值指示是否滚动的测量作为集合中的项或像素。 默认值为 <see cref="F:System.Windows.Controls.ScrollUnit.Item" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode">
      <summary>获取或设置如何中的一个面板 <see cref="T:System.Windows.Controls.ItemsControl" /> 虚拟化其子项。</summary>
      <returns>指定如何中的一个面板的枚举值之一 <see cref="T:System.Windows.Controls.ItemsControl" /> 虚拟化其子项。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>获取值，该值指示是否 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 可以虚拟化进行分组或组织的层次结构中的项目。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 可以滚动的水平维度。</summary>
      <returns>true 如果内容可以水平滚动，;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示是否可垂直滚动内容。</summary>
      <returns>true 如果内容可以垂直滚动，;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>获取包含盘区垂直大小的一个值。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示此盘区的垂直大小。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>获取包含盘区水平大小的值。</summary>
      <returns>表示此盘区的水平大小的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
      <summary>获取一个值，该值指示如果此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 具有垂直或水平方向。</summary>
      <returns>此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>获取一个值，该值包含滚动内容的水平偏移量。</summary>
      <returns>一个 <see cref="T:System.Double" />，它表示滚动内容的水平偏移量。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 虚拟化子集合。</summary>
      <returns>true 如果此实例的 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 虚拟化子集合; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
      <summary>获取一个值，表示 <see cref="T:System.Windows.Controls.Orientation" /> 的 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Orientation" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>获取或设置一个值，描述堆叠内容的水平或垂直方向。</summary>
      <returns>子内容的 <see cref="T:System.Windows.Controls.Orientation" />。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>获取或设置一个值，标识控制在此的滚动行为的容器 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 拥有滚动行为的 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>获取包含滚动内容的垂直偏移量的值。</summary>
      <returns>表示滚动内容的垂直偏移量的 <see cref="T:System.Double" />。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>获取包含内容视区垂直大小的值。</summary>
      <returns>表示内容视区的垂直大小的 <see cref="T:System.Double" />。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>获取包含内容视区的水平大小的值。</summary>
      <returns>表示内容视区的垂直大小的 <see cref="T:System.Double" />。  默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode">
      <summary>获取或设置如何中的一个面板 <see cref="T:System.Windows.Controls.ItemsControl" /> 虚拟化其子项。</summary>
      <returns>指定如何中的一个面板的枚举值之一 <see cref="T:System.Windows.Controls.ItemsControl" /> 虚拟化其子项。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoBack">
      <summary>获取指示是否存在要向后定位到的文档。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，该值指示是否要向后定位到的文档。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoForward">
      <summary>获取指示是否存在要向前定位到的文档。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，该值指示是否存在要向前定位到的文档。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Document">
      <summary>获取表示所承载的文档对象 HTML 页。 </summary>
      <returns>一个文档对象。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.ObjectForScripting">
      <summary>获取或设置公共类的一个实例，该实例由主机应用程序实现且可由寄宿文档的脚本访问。</summary>
      <returns>
        <see cref="T:System.Object" /> 的实例的 public 实现由主机应用程序，可由寄宿文档的脚本访问的类。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> 使用不是类型的实例设置 COMVisible。</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>获取或设置 <see cref="T:System.Uri" /> 当前文档中承载的 <see cref="T:System.Windows.Controls.WebBrowser" />。</summary>
      <returns>
        <see cref="T:System.Uri" /> 当前 HTML 文档。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索到对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">导航到的部分信任环境中运行的应用程序是从 <see cref="T:System.Uri" /> 并非位于在源站点。</exception>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
      <summary>获取或设置一个值，指定中包含的所有项的高度 <see cref="T:System.Windows.Controls.WrapPanel" />。</summary>
      <returns>
        <see cref="T:System.Double" /> 表示中包含的所有项的统一高度 <see cref="T:System.Windows.Controls.WrapPanel" />。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
      <summary>获取或设置一个值，指定中包含的所有项的宽度 <see cref="T:System.Windows.Controls.WrapPanel" />。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示中包含的所有项的统一宽度 <see cref="T:System.Windows.Controls.WrapPanel" />。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.Orientation">
      <summary>获取或设置一个值，指定子内容的排列的维度。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 值，该值表示中的内容的物理方向 <see cref="T:System.Windows.Controls.WrapPanel" /> 为水平或垂直。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>获取或设置的左下角的半径。</summary>
      <returns>左下角的半径。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>获取或设置的右下角的半径。</summary>
      <returns>右下角的半径。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>获取或设置的左上角的半径。</summary>
      <returns>左上角的半径。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>获取或设置的右上角的半径。</summary>
      <returns>右上角的半径。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.AsyncState">
      <summary>获取或设置传递给异步数据调度程序的不透明数据。</summary>
      <returns>数据传递给异步数据调度程序。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>获取或设置一个值，该值指示是相对于数据项还是 <see cref="T:System.Windows.Data.DataSourceProvider" /> 对象计算 <see cref="P:System.Windows.Data.Binding.Path" />。</summary>
      <returns>若要相对于数据项自身计算路径，则为 false；否则为 true。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>获取或设置要使用的转换器。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.IValueConverter" /> 类型的值。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>获取或设置计算转换器要使用的区域性。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>获取或设置要传递给参数 <see cref="P:System.Windows.Data.Binding.Converter" />。</summary>
      <returns>要传递给参数 <see cref="P:System.Windows.Data.Binding.Converter" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>获取或设置要用作绑定源对象的元素的名称。</summary>
      <returns>相关元素的 Name 属性或 x:Name Directive 的值。 只有通过 RegisterName 将元素注册到适当的 <see cref="T:System.Windows.NameScope" /> 后，才能在代码中引用这些元素。 有关详细信息，请参阅 WPF XAML Namescopes。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.IsAsync">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Data.Binding" /> 是否应异步获取和设置值。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>获取或设置一个值，该值指示绑定的数据流方向。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 值之一。 默认值为 <see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖属性的默认绑定模式值。 但是，每个依赖属性的默认值都不同。 通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件。</summary>
      <returns>如果绑定源值更新时应引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</summary>
      <returns>如果绑定目标值更新时应当引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>获取或设置一个值，该值指示是否对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>如果在源更新过程中出现验证错误时应对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>获取或设置绑定源属性的路径。</summary>
      <returns>绑定源的路径。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>通过指定绑定源相对于绑定目标位置的位置，获取或设置此绑定源。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.RelativeSource" /> 对象，它指定要使用的绑定源的相对位置。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>获取或设置要用作绑定源的对象。</summary>
      <returns>要用作绑定源的对象。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <summary>获取或设置一个处理程序，可使用该程序提供自定义逻辑，旨在在更新绑定源值期间处理绑定引擎遇到的异常。 这仅适用于你已将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与绑定相关联的情况。</summary>
      <returns>一个提供自定义逻辑以在绑定源值更新过程中处理绑定引擎遇到的异常的方法。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>获取或设置一个值，它可确定绑定源更新的计时。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。 默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，即返回目标依赖属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。 但是，大多数依赖项属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。一种确定依赖属性的默认 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的编程方法是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 属性的值。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidationRules">
      <summary>获取用于检查用户输入有效性的规则的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <summary>获取或设置 <see cref="T:System.Xml.XmlNamespaceManager" /> 用于执行识别命名空间 XPath 中的查询 XML 绑定。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamespaceManager" /> 用于执行识别命名空间 XPath 中的查询 XML 绑定。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XPath">
      <summary>获取或设置 XPath 查询，该查询返回要使用的 XML 绑定源上的值。</summary>
      <returns>XPath 查询。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.BindingGroupName">
      <summary>获取或设置的名称 <see cref="T:System.Windows.Data.BindingGroup" /> 此绑定所属。</summary>
      <returns>名称 <see cref="T:System.Windows.Data.BindingGroup" /> 此绑定所属。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.Delay">
      <summary>获取或设置以毫秒为单位，在目标更改的值后更新绑定源之前要等待的时间量。</summary>
      <returns>以毫秒为单位，对绑定源进行更新之前要等待的时间量。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>获取或设置当绑定无法返回值时要使用的值。</summary>
      <returns>默认值为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>获取或设置一个字符串，指定如何设置绑定的格式，如果绑定的值显示为字符串。</summary>
      <returns>一个字符串，指定如何设置绑定的格式，如果绑定的值显示为字符串。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>获取或设置值，用于在目标中，当源的值为 null。</summary>
      <returns>源的值时，在目标中使用的值 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>获取此 <see cref="T:System.Windows.Data.BindingExpression" /> 使用的绑定源对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.BindingExpression" /> 使用的绑定源对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>返回当前 <see cref="T:System.Windows.Data.BindingExpression" /> 的 <see cref="T:System.Windows.Data.Binding" /> 对象。</summary>
      <returns>当前绑定表达式的 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSource">
      <summary>获取此绑定源对象 <see cref="T:System.Windows.Data.BindingExpression" />。</summary>
      <returns>绑定源对象的 <see cref="T:System.Windows.Data.BindingExpression" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName">
      <summary>获取此绑定源属性的名称 <see cref="T:System.Windows.Data.BindingExpression" />。</summary>
      <returns>为此绑定源属性的名称 <see cref="T:System.Windows.Data.BindingExpression" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.BindingGroup">
      <summary>获取 <see cref="T:System.Windows.Data.BindingGroup" /> 属于此绑定表达式。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 属于此绑定表达式。 此属性返回 null 如果 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 不是属于  <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasError">
      <summary>获取一个值，该值指示绑定的父级是否失败的验证规则。</summary>
      <returns>true 如果父绑定具有失败的验证规则;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
      <summary>获取一个值，该值指示绑定的父级是否失败的验证规则。</summary>
      <returns>true 如果父绑定具有失败的验证规则;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.IsDirty">
      <summary>获取或设置一个值，该值指示绑定的目标是否具有一个值，未写入到源。</summary>
      <returns>true 如果目标具有一个值，不已写入源;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <summary>获取 <see cref="T:System.Windows.Data.BindingBase" /> 从该对象 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 创建对象。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingBase" /> 从该对象 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 创建对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Status">
      <summary>获取绑定表达式的状态。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.BindingStatus" /> 值，该值描述绑定表达式的状态。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Target">
      <summary>获取是此绑定表达式的绑定目标对象的元素。</summary>
      <returns>为此绑定表达式绑定目标对象的元素。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.TargetProperty">
      <summary>获取此绑定表达式绑定目标属性。</summary>
      <returns>此绑定表达式绑定目标属性。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <summary>获取 <see cref="T:System.Windows.Controls.ValidationError" /> 导致的此实例 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 无效。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> 导致的此实例 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 无效。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationErrors">
      <summary>获取一套 <see cref="T:System.Windows.Controls.ValidationError" /> 导致的此实例的对象 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 无效。</summary>
      <returns>一套 <see cref="T:System.Windows.Controls.ValidationError" /> 导致的此实例的对象 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 无效。  值是 null 如果没有错误。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <summary>获取一套 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，其中包含每个绑定中的信息 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>一套 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，其中包含每个绑定中的信息 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <summary>获取是否在绑定中的每个源可以放弃挂起的更改并还原原始值。</summary>
      <returns>true 如果在绑定中的每个源可以放弃挂起的更改并还原原始值。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.HasValidationError">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Data.BindingGroup" /> 具有失败的验证规则。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Data.BindingGroup" /> 具有失败的验证规则; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.IsDirty">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Data.BindingGroup" /> 包含未写入到源的建议的值。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Data.BindingGroup" /> 包含建议的值尚未写入源; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Items">
      <summary>获取使用中的绑定对象的源 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>中的绑定对象使用的源 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Name">
      <summary>获取或设置标识的名称 <see cref="T:System.Windows.Data.BindingGroup" />, ，它可用于包括和排除中的绑定对象 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>标识的名称 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <summary>获取或设置是否 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件发生时的状态 <see cref="T:System.Windows.Controls.ValidationRule" /> 更改。</summary>
      <returns>true 如果 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件发生时的状态 <see cref="T:System.Windows.Controls.ValidationRule" /> 更改; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Owner">
      <summary>获取的对象，这 <see cref="T:System.Windows.Data.BindingGroup" /> 分配给。</summary>
      <returns>该对象指示此 <see cref="T:System.Windows.Data.BindingGroup" /> 分配给。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Data.BindingGroup" /> 重新使用目标尚未提交到源的值。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Data.BindingGroup" /> 重新使用目标尚未提交到源; 否则为值 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationErrors">
      <summary>获取一套 <see cref="T:System.Windows.Controls.ValidationError" /> 引发对象 <see cref="T:System.Windows.Data.BindingGroup" /> 无效。</summary>
      <returns>一套 <see cref="T:System.Windows.Controls.ValidationError" /> 引发对象 <see cref="T:System.Windows.Data.BindingGroup" /> 无效。  值是 null 如果没有错误。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationRules">
      <summary>获取一套 <see cref="T:System.Windows.Controls.ValidationRule" /> 验证中的源对象的对象 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>一套 <see cref="T:System.Windows.Controls.ValidationRule" /> 验证中的源对象的对象 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
      <returns>如果可以将新项添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
      <returns>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering">
      <summary>获取一个值，该值指示此视图是否支持启用或禁用实时的筛选数据。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping">
      <summary>获取一个值，该值指示打开或关闭此视图是否支持启用实时对数据进行分组。</summary>
      <returns>在所有情况下均为 True。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting">
      <summary>获取一个值，该值指示此视图是否支持启用或禁用实时的数据进行排序。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <summary>获取一个值，该值指示视图是否支持自定义筛选。</summary>
      <returns>true 如果视图支持自定义筛选;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持基于回调的筛选。</summary>
      <returns>此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <summary>获取一个值，该值指示视图是否支持分组。</summary>
      <returns>对于默认实例的 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
      <returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <summary>获取一个值，该值指示集合是否支持排序。</summary>
      <returns>对于默认实例的 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Count">
      <summary>获取集合中的记录的估计的数。</summary>
      <returns>以下项之一：值含义-1无法确定该集合的计数。 这可能会返回由"虚拟化"的视图，其中视图特意不考虑基础集合中的所有项，因为它试图提高效率，最小化依赖于始终整个集合都可用。任何其他整数集合的计数。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <summary>获取当前添加事务过程中正在添加的项。</summary>
      <returns>如果要添加的项 <see cref="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" /> 是 true; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <summary>获取集合中正在编辑的项。</summary>
      <returns>如果正在编辑的集合中的项 <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> 是 true; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <summary>获取或设置自定义筛选器。</summary>
      <returns>一个字符串，指定筛选项目的方式。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <summary>获取或设置一个委托，用于 <see cref="T:System.ComponentModel.GroupDescription" /> 作为父组和它的级别的函数。</summary>
      <returns>为选定的提供的逻辑的方法 <see cref="T:System.ComponentModel.GroupDescription" /> 作为父组和它的级别的函数。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Groups">
      <summary>获取顶级组。</summary>
      <returns>只读集合的顶级组，或 null 是否存在任何组。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
      <returns>如果正在执行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <summary>获取或设置一个值，该值指示 （后面将应用的排序和筛选器，如果有的话） 的项的列表是否已按正确的顺序进行分组。</summary>
      <returns>true 如果项的列表已在正确的顺序分组，则为否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
      <returns>如果正在执行编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <summary>返回一个值，该值指示是否生成 （已筛选） 视图是否为空。</summary>
      <returns>如果获得的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering">
      <summary>获取或设置一个值，该值指示是否启用实时中筛选数据。</summary>
      <returns>true 如果启用筛选的实时数据; false 如果未启用实时筛选; null 如果无法确定集合视图是否实现，实时筛选。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" /> 无法设置。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping">
      <summary>获取或设置一个值，该值指示是否启用对实时数据进行分组。</summary>
      <returns>true 如果启用对实时数据进行分组，则 false 如果未启用实时的分组; null 如果无法确定集合视图是否实现，实时分组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting">
      <summary>获取或设置一个值，该值指示是否启用对实时数据进行排序。</summary>
      <returns>true 如果启用对实时数据进行排序，则 false 如果未启用实时排序; null 如果无法确定集合视图是否实现，实时排序。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" /> 无法设置。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <summary>获取描述集合中项的属性对象的集合。</summary>
      <returns>描述集合中项的属性的对象集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties">
      <summary>获取指定中筛选数据实时参与的属性的字符串的集合。</summary>
      <returns>指定参与的属性中的筛选操作的实时数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties">
      <summary>获取指定实时数据分组中加入的属性的字符串的集合。</summary>
      <returns>指定对实时数据进行分组中加入的属性的字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties">
      <summary>获取指定的属性的参与中对实时数据进行排序的字符串的集合。</summary>
      <returns>指定在对实时数据进行排序的属性的参与字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <summary>获取或设置中的新项占位符的位置 <see cref="T:System.Windows.Data.BindingListCollectionView" />。</summary>
      <returns>指定的位置中的新项占位符的枚举值之一 <see cref="T:System.Windows.Data.BindingListCollectionView" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingOperations.DisconnectedSource">
      <summary>获取一个对象，将替换 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 项目容器的可视化树中的删除时。</summary>
      <returns>一个对象，将替换 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 项目容器的可视化树中的删除时。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionContainer.Collection">
      <summary>获取或设置要添加的集合。</summary>
      <returns>要添加的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection">
      <summary>获取要注册的跨线程访问的集合。</summary>
      <returns>要注册的跨线程访问的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent">
      <summary>获取集合的父级，若要注册。</summary>
      <returns>若要注册到集合的父级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges">
      <summary>获取一个值，该值指示是否与不同的线程，创建 <see cref="T:System.Windows.Data.CollectionView" /> 可以更改 <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />。</summary>
      <returns>true 如果创建的一个以外的线程 <see cref="T:System.Windows.Data.CollectionView" /> 可以更改 <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持筛选。</summary>
      <returns>true 如果视图支持筛选，则，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanGroup">
      <summary>获取一个值，该值指示视图是否支持分组。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanSort">
      <summary>获取一个值，该值指示视图是否支持排序。</summary>
      <returns>在所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Comparer">
      <summary>返回可用于将视图中的项进行比较的对象。</summary>
      <returns>
        <see cref="T:System.Collections.IComparer" /> 对象可用来比较视图中的项。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Count">
      <summary>获取视图中的记录数。</summary>
      <returns>在视图中，则返回 – 1 如果是未知的记录数的记录数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Culture">
      <summary>获取或设置要在排序期间使用的区域性信息。</summary>
      <returns>要在排序过程中使用的区域性信息。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentItem">
      <summary>获取视图中的当前项。</summary>
      <returns>视图中的当前项。 默认情况下，该集合的第一项作为当前项启动。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentPosition">
      <summary>获取的序号位置 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> （根据需要排序和筛选） 视图中。</summary>
      <returns>序号位置 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> （根据需要排序和筛选） 视图中。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Filter">
      <summary>获取或设置用于确定某个项是否适合包含在视图中的方法。</summary>
      <returns>一个委托，表示用于确定某个项是否适合包含在视图中的方法。</returns>
      <exception cref="T:System.NotSupportedException">当前实现不支持筛选。</exception>
    </member>
    <member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <summary>获取一套 <see cref="T:System.ComponentModel.GroupDescription" /> 对象描述集合中的项在视图中的分组方式。</summary>
      <returns>在所有情况下均为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Groups">
      <summary>获取顶级组构造基于集合的 <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> 属性。</summary>
      <returns>在所有情况下均为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <summary>获取一个值，该值指示视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是否超出集合的末尾。</summary>
      <returns>如果视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 超出集合的末尾，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <summary>获取一个值，该值指示视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是否在集合开头之前。</summary>
      <returns>如果视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 在集合开头之前，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 位于 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />。</summary>
      <returns>true 如果 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 在视图中，在 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsDynamic">
      <summary>获取一个值，该值指示是否对基础集合提供更改通知。</summary>
      <returns>true 如果基础集合提供更改通知;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsEmpty">
      <summary>获取一个值，该值指示是否生成 （已筛选） 视图是否为空。</summary>
      <returns>如果获得的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsInUse">
      <summary>获取一个值，该值指示是否对此事件订阅的任何对象 <see cref="T:System.Windows.Data.CollectionView" />。</summary>
      <returns>true 如果此事件订阅的任何对象 <see cref="T:System.Windows.Data.CollectionView" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <summary>获取一个值，该值指示是否存在某个未完成 <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> 正在使用。</summary>
      <returns>true 如果没有未完成 <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> 中使用; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <summary>获取一个值，该值指示是否需要刷新视图。</summary>
      <returns>true 如果需要刷新，则在视图，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <summary>获取位于集合来表示新项的对象。</summary>
      <returns>要表示新项在集合对象。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SortDescriptions">
      <summary>获取一套 <see cref="T:System.ComponentModel.SortDescription" /> 描述集合中的项在视图中的排序方式的结构。</summary>
      <returns>一个空 <see cref="T:System.ComponentModel.SortDescriptionCollection" /> 在所有情况下。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SourceCollection">
      <summary>返回未筛选的基础集合。</summary>
      <returns>属于基础集合的 <see cref="T:System.Collections.IEnumerable" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <summary>获取一个值，该值指示是否已进行更新更改日志，因为所需 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知已在另一个线程收到而无需第一个输入 用户界面 (UI) 线程调度程序。</summary>
      <returns>true 如果它已被更新更改日志，因为所需 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知已在另一个线程收到而无需第一个输入 用户界面 (UI) 线程调度程序; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>获取一个值，该值指示此组是否有任何子组。</summary>
      <returns>如果此组位于底层，且没有任何子组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>获取此组下子树中项数。</summary>
      <returns>（留在）此组下子树中项的数目</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>获取此组中包含的即时项。</summary>
      <returns>此组中即时项的只读集合。 这是子组的集合，或者如果此组不具有任何子组，则是项的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>获取此组的名称。</summary>
      <returns>此组的名称，它是将项划分为组时所使用的属性的公共值。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>获取和设置此组下子树中项的数目。</summary>
      <returns>此组下子树中项的数目（叶）</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>获取此组中包含的即时项。</summary>
      <returns>此组中即时项的集合。 这是子组的集合，或者如果此组不具有任何子组，则是项的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView">
      <summary>获取要注册的跨线程访问的集合视图。</summary>
      <returns>要注册的跨线程访问的集合视图。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering">
      <summary>获取一个值，该值指示集合视图是否支持打开或关闭实时筛选数据。</summary>
      <returns>如果集合视图支持打开或关闭实时筛选，则为 true；否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping">
      <summary>获取一个值，该值指示集合视图是否支持启用实时对数据进行分组，打开或关闭。</summary>
      <returns>true 如果集合视图支持启用实时分组，打开或关闭;否则为 false。注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting">
      <summary>获取一个值，该值指示集合视图是否支持启用或禁用实时的数据进行排序。</summary>
      <returns>true 如果集合视图支持启用实时排序打开或关闭;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <summary>获取或设置所需的视图类型。</summary>
      <returns>所需的视图的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>获取或设置用于操作，如排序和比较的区域性。</summary>
      <returns>用于操作，如排序和比较的区域性。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>获取或设置 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，该集合描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />，用于描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 正在筛选的实时数据。</summary>
      <returns>true 如果启用筛选的实时数据; false 如果未启用实时筛选; null 如果无法确定集合视图是否实现，实时筛选。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 应筛选的实时数据，如果它知道如何操作。</summary>
      <returns>true 实时筛选是否已请求;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 实时数据进行分组。</summary>
      <returns>true 如果对实时数据进行分组为，启用; false 如果未启用实时的分组; null 如果无法确定集合视图是否实现，实时分组。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 应分组的实时数据，如果它知道如何操作。</summary>
      <returns>true 如果实时分组具有已请求;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSorting">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 对实时数据进行排序。</summary>
      <returns>true 如果对实时数据进行排序是，启用; false 如果未启用实时排序; null 如果无法确定集合视图是否实现，实时排序。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Data.CollectionViewSource" /> 应对进行排序的实时数据，如果它知道如何操作。</summary>
      <returns>true 实时排序是否已请求;否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties">
      <summary>获取指定中筛选数据实时参与的属性的字符串的集合。</summary>
      <returns>指定参与的属性中的筛选操作的实时数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties">
      <summary>获取指定实时数据分组中加入的属性的字符串的集合。</summary>
      <returns>指定对实时数据进行分组中加入的属性的字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties">
      <summary>获取指定的属性的参与中对实时数据进行排序的字符串的集合。</summary>
      <returns>指定在对实时数据进行排序的属性的参与字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>获取或设置 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>获取或设置要从中创建该视图的集合对象。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>获取当前与此实例关联的视图对象 <see cref="T:System.Windows.Data.CollectionViewSource" />。</summary>
      <returns>当前与此实例关联的视图对象 <see cref="T:System.Windows.Data.CollectionViewSource" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Count">
      <summary>获取此集合中存储的项的数目。</summary>
      <returns>此集合中存储的项的数目。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <summary>检索或替换集合中给定从零开始的偏移量处的项的索引器属性。</summary>
      <param name="itemIndex">要检索或替换的项的从零开始的偏移量。</param>
      <returns>指定从零开始的偏移量处的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>true 访问 <see cref="T:System.Collections.ICollection" /> 是同步 （线程安全）; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果 true 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果 true 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.Property">
      <summary>获取数据传输事件所涉及的特定绑定目标属性。</summary>
      <returns>已更改的属性。</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <summary>获取绑定中引发了事件的绑定目标对象。</summary>
      <returns>绑定中引发了事件的目标对象。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>获取或设置一个值，该值指示该项是否通过筛选器。</summary>
      <returns>true 如果项通过筛选器;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>获取筛选器应测试的对象。</summary>
      <returns>筛选器应测试该对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <summary>获取或设置在排序时使用当前活动比较器。</summary>
      <returns>
        <see cref="T:System.Collections.IComparer" /> 对象，它是活动的比较器。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <summary>获取或设置当前的活动 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</summary>
      <returns>活动 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
      <returns>如果可以将新项添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <summary>获取一个值，该值指示是否可以将指定的对象添加到集合。</summary>
      <returns>true 如果指定的对象可以添加到集合。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
      <returns>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering">
      <summary>获取一个值，该值指示集合视图是否支持打开或关闭实时筛选数据。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping">
      <summary>获取一个值，该值指示集合视图是否支持启用实时对数据进行分组，打开或关闭。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting">
      <summary>获取一个值，该值指示集合视图是否支持启用或禁用实时的数据进行排序。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持基于回调的筛选。</summary>
      <returns>对于默认实例的 <see cref="T:System.Windows.Data.ListCollectionView" />, ，此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanGroup">
      <summary>获取一个值，该值指示集合视图是否支持分组。</summary>
      <returns>true 如果集合视图支持分组，则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanRemove">
      <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
      <returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanSort">
      <summary>获取一个值，该值指示集合视图是否支持排序。</summary>
      <returns>对于默认实例的 <see cref="T:System.Windows.Data.ListCollectionView" />, ，此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Count">
      <summary>获取估计的记录数。</summary>
      <returns>以下项之一：值含义-1无法确定该集合的计数。 这可能会返回由"虚拟化"的视图，其中视图特意不考虑基础集合中的所有项，因为它尝试提高效率，最小化依赖于始终整个集合都可用。任何其他整数集合的计数。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <summary>获取当前添加事务过程中正在添加的项。</summary>
      <returns>如果要添加的项 <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> 是 true; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <summary>获取集合中正在编辑的项。</summary>
      <returns>如果正在编辑的集合中的项 <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> 是 true; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CustomSort">
      <summary>获取或设置用于实现的自定义对象 <see cref="T:System.Collections.IComparer" /> 在视图中的项进行排序。</summary>
      <returns>作为实现的排序条件 <see cref="T:System.Collections.IComparer" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Filter">
      <summary>获取或设置用于确定某个项是否适合包含在视图中的方法。</summary>
      <returns>一个表示用于确定某个项是否适合包含在视图中的方法的委托。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <summary>获取或设置一个委托，用于 <see cref="T:System.ComponentModel.GroupDescription" /> 作为父组和它的级别的函数。</summary>
      <returns>为选定的提供的逻辑的方法 <see cref="T:System.ComponentModel.GroupDescription" /> 作为父组和它的级别的函数。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Groups">
      <summary>获取顶级组。</summary>
      <returns>只读集合的顶级组，或 null 是否存在任何组。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalCount">
      <summary>获取中的记录数 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</summary>
      <returns>中的记录数 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalList">
      <summary>获取完整和未筛选的基础集合。</summary>
      <returns>基础集合，必须实现 <see cref="T:System.Collections.IList" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
      <returns>如果正在执行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <summary>获取或设置一个值，该值指示 （后面将应用的排序和筛选器，如果有的话） 的项的列表是否已按正确的顺序进行分组。</summary>
      <returns>true 如果项的列表已在正确的顺序分组，则为否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
      <returns>如果正在执行编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <summary>返回一个值，该值指示是否生成 （已筛选） 视图是否为空。</summary>
      <returns>如果获得的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <summary>获取一个值，该值指示视图是否存在组。</summary>
      <returns>true 如果在视图中; 没有组否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveFiltering">
      <summary>获取或设置一个值，该值指示是否启用实时中筛选数据。</summary>
      <returns>true 如果启用筛选的实时数据; false 如果未启用实时筛选; null 如果无法确定集合视图是否实现，实时筛选。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveGrouping">
      <summary>获取或设置一个值，该值指示是否启用对实时数据进行分组。</summary>
      <returns>true 如果启用对实时数据进行分组，则 false 如果未启用实时的分组; null 如果无法确定集合视图是否实现，实时分组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveSorting">
      <summary>获取或设置一个值，该值指示是否启用实时进行排序。</summary>
      <returns>true 如果启用对实时数据进行排序，则 false 如果未启用实时排序; null 如果无法确定集合视图是否实现，实时排序。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <summary>获取描述集合中项的属性对象的集合。</summary>
      <returns>描述集合中项的属性的对象集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties">
      <summary>获取指定中筛选数据实时参与的属性的字符串的集合。</summary>
      <returns>指定参与的属性中的筛选操作的实时数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties">
      <summary>获取指定实时数据分组中加入的属性的字符串的集合。</summary>
      <returns>指定对实时数据进行分组中加入的属性的字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveSortingProperties">
      <summary>获取指定的属性的参与中对实时数据进行排序的字符串的集合。</summary>
      <returns>指定在对实时数据进行排序的属性的参与字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <summary>获取或设置中的新项占位符的位置 <see cref="T:System.Windows.Data.ListCollectionView" />。</summary>
      <returns>指定的位置中的新项占位符的枚举值之一 <see cref="T:System.Windows.Data.ListCollectionView" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <summary>获取一个值，该值指示是否进行排序和筛选需要的数据的私有副本。</summary>
      <returns>true 如果用于排序和筛选，则需要的数据的私有副本否则为 false。 默认实现返回 true 是否存在 <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> 或 <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, ，和 / 或。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Bindings">
      <summary>获取此 <see cref="T:System.Windows.Data.MultiBinding" /> 实例中的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> 对象的集合。<see cref="T:System.Windows.Data.MultiBinding" /> 当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 类型的对象，而不支持 <see cref="T:System.Windows.Data.MultiBinding" /> 或 <see cref="T:System.Windows.Data.PriorityBinding" /> 类型的对象。 将 <see cref="T:System.Windows.Data.Binding" /> 子级添加到 <see cref="T:System.Windows.Data.MultiBinding" /> 对象会将该子级隐式添加到 <see cref="T:System.Windows.Data.MultiBinding" /> 对象的 <see cref="T:System.Windows.Data.BindingBase" /> 集合。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Converter">
      <summary>获取或设置用于在源值和目标值之间来回转换的转换器。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.IMultiValueConverter" /> 类型的值，该值指示要使用的转换器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <summary>获取或设置 <see cref="T:System.Globalization.CultureInfo" /> 适用于分配给绑定包装的任何转换器对象 <see cref="T:System.Windows.Data.MultiBinding" /> 或在 <see cref="T:System.Windows.Data.MultiBinding" /> 本身。</summary>
      <returns>有效的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <summary>获取或设置要作为其他信息传递给转换器的可选参数。</summary>
      <returns>要传递给转换器的参数。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Mode">
      <summary>获取或设置一个值，该值指示此绑定的数据流的方向。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 值之一。 默认值为 <see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖属性的默认绑定模式值。 但是，每个依赖属性的默认值都不同。 一般情况下，用户可编辑的控件属性（例如 <see cref="P:System.Windows.Controls.TextBox.Text" />）默认为双向绑定，而其他大多数属性默认为单向绑定。确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件。</summary>
      <returns>如果绑定源值更新时引发 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件。</summary>
      <returns>如果绑定目标值更新时引发 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <summary>获取或设置一个值，该值指示是否对绑定元素引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>如果在源更新过程中出现验证错误时对绑定元素引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <summary>获取或设置一个处理程序，可使用该程序提供自定义逻辑，旨在在更新绑定源值期间处理绑定引擎遇到的异常。 这仅适用于你已将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与 <see cref="T:System.Windows.Data.MultiBinding" /> 对象相关联的情况。</summary>
      <returns>一个提供自定义逻辑以在绑定源值更新过程中处理绑定引擎遇到的异常的方法。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <summary>获取或设置一个值，它可确定绑定源更新的计时。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。 默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它返回目标依赖属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。 但是，大多数依赖项属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。一种确定依赖属性的默认 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的编程方法是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 属性的值。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors">
      <summary>获取或设置一个值，该值指示是否包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
      <returns>true 若要包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidationRules">
      <summary>获取此 <see cref="T:System.Windows.Data.MultiBinding" /> 实例的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</summary>
      <returns>此 <see cref="T:System.Windows.Data.MultiBinding" /> 实例的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <summary>获取的集合 <see cref="T:System.Windows.Data.BindingExpression" /> 的此实例中的对象 <see cref="T:System.Windows.Data.MultiBindingExpression" />。</summary>
      <returns>只读集合 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。 即使返回类型是一套 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象返回的集合将仅包含 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.MultiBinding" /> 类当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasError">
      <summary>返回一个值，该值表示任何内部 <see cref="T:System.Windows.Data.Binding" /> 对象或 <see cref="T:System.Windows.Data.MultiBinding" /> 自身是否存在无效的验证规则。</summary>
      <returns>如果至少一个内部 <see cref="T:System.Windows.Data.Binding" /> 对象或 <see cref="T:System.Windows.Data.MultiBinding" /> 自身存在无效的验证规则，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasValidationError">
      <summary>获取一个值，该值指示绑定的父级是否失败的验证规则。</summary>
      <returns>true 如果父绑定具有失败的验证规则;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <summary>获取 <see cref="T:System.Windows.Data.MultiBinding" /> 从该对象 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 创建。</summary>
      <returns>
        <see cref="T:System.Windows.Data.MultiBinding" /> 从该对象 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 创建。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <summary>获取导致 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 的此实例无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
      <returns>导致 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 的此实例无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <summary>获取要传递给构造函数的参数列表。</summary>
      <returns>要传递给构造函数的参数列表。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <summary>获取或设置一个值，该值指示是否要在工作线程或活动的上下文中执行对象创建。</summary>
      <returns>true 若要执行的工作线程; 中的对象创建否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <summary>获取或设置要调用的方法的名称。</summary>
      <returns>要调用的方法的名称。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <summary>获取要传递给方法的参数列表。</summary>
      <returns>要传递给方法的参数列表。 默认值为空列表。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <summary>获取或设置用作绑定源的对象。</summary>
      <returns>由 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 构造的对象的实例，或者是其 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 被用作 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 的 <see cref="T:System.Windows.Data.DataSourceProvider" />。</returns>
      <exception cref="T:System.InvalidOperationException">将 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 赋值为 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />；但只允许赋值一个。</exception>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <summary>获取或设置要创建其实例的对象的类型。</summary>
      <returns>如果 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 未初始化或显式设置为 null，则该属性为 null。 如果分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，则 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 返回对象的类型或 null（如果对象为 null）。 默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">将 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 赋值为 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />；但只允许赋值一个。</exception>
    </member>
    <member name="P:System.Windows.Data.PriorityBinding.Bindings">
      <summary>获取的集合 <see cref="T:System.Windows.Data.Binding" /> 建立的此实例的对象 <see cref="T:System.Windows.Data.PriorityBinding" />。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> 对象的集合。<see cref="T:System.Windows.Data.PriorityBinding" /> 当前只支持对象类型的 <see cref="T:System.Windows.Data.Binding" /> 和 not <see cref="T:System.Windows.Data.MultiBinding" /> 或 <see cref="T:System.Windows.Data.PriorityBinding" />。 添加 <see cref="T:System.Windows.Data.Binding" /> 子级 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象会隐式添加到子 <see cref="T:System.Windows.Data.BindingBase" /> 集合 <see cref="T:System.Windows.Data.MultiBinding" /> 对象。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <summary>获取活动 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</summary>
      <returns>活动 <see cref="T:System.Windows.Data.BindingExpression" /> 对象; 或 null, ，如果没有 <see cref="T:System.Windows.Data.BindingExpression" /> 对象处于活动状态。 尽管返回类型是 <see cref="T:System.Windows.Data.BindingExpressionBase" />, ，返回的对象只是 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.PriorityBinding" /> 类当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <summary>获取的集合 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的此实例内 <see cref="T:System.Windows.Data.PriorityBindingExpression" />。</summary>
      <returns>只读集合 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。 尽管返回类型是一套 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象，则返回的集合仅包含 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.PriorityBinding" /> 类当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.HasValidationError">
      <summary>获取一个值，该值指示绑定的父级是否失败的验证规则。</summary>
      <returns>true 如果父绑定具有失败的验证规则;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <summary>获取 <see cref="T:System.Windows.Data.PriorityBinding" /> 从该对象 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 创建。</summary>
      <returns>
        <see cref="T:System.Windows.Data.PriorityBinding" /> 从该对象 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 创建。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending">
      <summary>获取或设置 <see cref="T:System.Collections.IComparer" /> 组名称的升序进行排序的值。</summary>
      <returns>
        <see cref="T:System.Collections.IComparer" /> 组名称的升序进行排序的值。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending">
      <summary>获取 <see cref="T:System.Collections.IComparer" /> 组名称的降序进行排序的值。</summary>
      <returns>
        <see cref="T:System.Collections.IComparer" /> 组名称的降序进行排序的值。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>获取或设置要应用于属性值或项以生成用于确定项所属组的最终值的转换器。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>获取或设置属性的名称，它用于确定项所属的组。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>获取或设置一个 <see cref="T:System.StringComparison" /> 值，该值指定项的值（由 <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> 和 <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" /> 确定）和组的名称之间的比较。</summary>
      <returns>默认值为 <see cref="T:System.StringComparison" />Ordinal。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <summary>以 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式获取或设置要查找的上级级别。 使用 1 指示最靠近绑定目标元素的项。</summary>
      <returns>上级级别。 使用 1 指示最靠近绑定目标元素的项。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
      <summary>获取或设置要查找的上级节点的类型。</summary>
      <returns>上级节点的类型。 默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.RelativeSource" /> 未处于 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>获取或设置 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值，该值描述相对于绑定目标的位置的绑定源的位置。</summary>
      <returns>
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。 默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">此属性在初始化后不可变。 不更改此实例上的 <see cref="P:System.Windows.Data.RelativeSource.Mode" />，而是创建新 <see cref="T:System.Windows.Data.RelativeSource" /> 或使用其他静态实例。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.PreviousData">
      <summary>获取用于返回一个静态值 <see cref="T:System.Windows.Data.RelativeSource" /> 为构造 <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> 模式。</summary>
      <returns>一个静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Self">
      <summary>获取用于返回一个静态值 <see cref="T:System.Windows.Data.RelativeSource" /> 为构造 <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> 模式。</summary>
      <returns>一个静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <summary>获取用于返回一个静态值 <see cref="T:System.Windows.Data.RelativeSource" /> 为构造 <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> 模式。</summary>
      <returns>一个静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <summary>获取和设置的可选值转换器参数对象的类型。</summary>
      <returns>可选值转换器参数对象的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <summary>获取此转换器转换的类型。</summary>
      <returns>此转换器转换的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <summary>获取此转换器转换为的类型。</summary>
      <returns>此转换器转换为的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <summary>获取此的唯一标识符 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 实例。</summary>
      <returns>此 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 实例的唯一标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <summary> 此类型或成员支持 WPF 基础结构，不应在代码中直接使用。</summary>
      <returns>基 URI。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Document">
      <summary>获取或设置要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。</summary>
      <returns>要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <summary>获取或设置一个值，该值指示是否将工作线程中或在活动的上下文中执行节点集合创建。</summary>
      <returns>true 若要执行的工作线程; 中的节点集合创建否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Source">
      <summary>获取或设置要用作绑定源的 XML 数据文件的 <see cref="T:System.Uri" />。</summary>
      <returns>要用作绑定源的 XML 数据文件的 <see cref="T:System.Uri" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>基 URI。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <summary>获取或设置 <see cref="T:System.Xml.XmlNamespaceManager" /> 用来运行 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 查询。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamespaceManager" /> 用来运行 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 查询。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
      <summary>获取内联 XML 内容。</summary>
      <returns>内联 XML 内容。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XPath">
      <summary>获取或设置用于生成数据集合的 XPath 查询。</summary>
      <returns>用于生成数据集合的 XPath 查询。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <summary>获取或设置要在 可扩展应用程序标记语言 (XAML) 中使用的前缀。</summary>
      <returns>要与 URI 关联的前缀。 默认值为一个空字符串 ("")。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <summary>获取或设置要为其创建映射的命名空间的 <see cref="T:System.Uri" />。</summary>
      <returns>命名空间的 URI。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <summary>获取的数 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 集合中的对象。</summary>
      <returns>数 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 集合中的对象。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <summary>获取一个值，该值指示此集合是只读的。</summary>
      <returns>该值始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.DataTemplateKey">
      <summary>获取默认键的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <returns>默认键 <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.DataType">
      <summary>获取或设置此 <see cref="T:System.Windows.DataTemplate" /> 所针对的类型。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.Triggers">
      <summary>获取将应用属性值或执行操作基于一个或多个条件的触发器的集合。</summary>
      <returns>触发器对象的集合。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.DataTrigger.Binding">
      <summary>获取或设置产生数据对象的属性值的绑定。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.DataTrigger.Setters">
      <summary>获取一套 <see cref="T:System.Windows.Setter" /> 对象，描述在数据项满足指定的条件时要应用的属性值。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.DataTrigger.Value">
      <summary>获取或设置要与此数据对象的属性值进行比较的值。</summary>
      <returns>默认值为 null。 另请参见异常部分。</returns>
      <exception cref="T:System.ArgumentException">仅加载时间 <see cref="T:System.Windows.Markup.MarkupExtension" />支持。</exception>
      <exception cref="T:System.ArgumentException">不支持表达式。 不支持绑定。</exception>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries">
      <summary>获取所有实例的泛型 <see cref="T:System.Windows.ResourceDictionary" /> 在附加托管的调试器时加载的应用程序的对象。</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries" /> 属性</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries">
      <summary>获取主题的所有实例 <see cref="T:System.Windows.ResourceDictionary" /> 在附加托管的调试器时加载的应用程序的对象。</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries" />
      </returns>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.Assembly">
      <summary>获取使用的程序集 <see cref="T:System.Windows.ResourceDictionary" /> 所引用对象 <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> 属性。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionary">
      <summary>获取用于此介绍的详细信息的资源字典 <see cref="T:System.Windows.Diagnostics.ResourceDictionaryInfo" /> 对象实例。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly">
      <summary>获取从中加载资源字典的程序集的名称。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.SourceUri">
      <summary>获取已编译的 BAML 文件的 URI 中嵌入 <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> 从中加载资源字典的属性。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs.ResourceDictionaryInfo">
      <summary>获取数据 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> 和 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> 事件。</summary>
      <returns>数据 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> 和 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> 事件。</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs.ResourceDictionaryInfo">
      <summary>获取数据 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> 事件。</summary>
      <returns>数据 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> 事件。</returns>
    </member>
    <member name="P:System.Windows.Documents.Adorner.AdornedElement">
      <summary>获取 <see cref="T:System.Windows.UIElement" /> 此装饰器绑定到。</summary>
      <returns>此装饰器绑定到元素。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
      <summary>获取或设置一个值，该值指示是否启用装饰器剪辑。</summary>
      <returns>一个 Boolean 值，该值指示是否启用装饰器剪辑。如果此属性为 false, ，不剪裁装饰器。如果此属性为 true, ，使用相同的剪辑几何图形与装饰元素剪辑装饰器。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
      <summary>获取与此 <see cref="T:System.Windows.Documents.AdornerLayer" /> 关联的 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.AdornerLayer" /> 与此装饰器修饰器相关联。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.Child">
      <summary>获取或设置的单一子 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</summary>
      <returns>单一子 <see cref="T:System.Windows.Documents.AdornerDecorator" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
      <summary>获取数量的子 <see cref="T:System.Windows.Media.Visual" /> 的此实例中的对象 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</summary>
      <returns>返回 2 (一个用于 <see cref="T:System.Windows.Documents.AdornerLayer" /> ，另一个用于 <see cref="P:System.Windows.Documents.AdornerDecorator.Child" />) 或该属性返回 0 如果 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 无子级。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
      <summary>获取可循环访问此逻辑子元素的枚举器 <see cref="T:System.Windows.Documents.AdornerLayer" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
      <summary>获取数量的子 <see cref="T:System.Windows.Media.Visual" /> 的此实例中的对象 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <returns>数量的子 <see cref="T:System.Windows.Media.Visual" /> 的此实例中的对象 <see cref="T:System.Windows.Documents.AdornerLayer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
      <summary>获取一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成元素内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成元素内容的 <see cref="T:System.Windows.Documents.Block" /> 元素。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 绘制了元素边框时使用。</summary>
      <returns>用于将应用于该元素的边框的画笔。默认值是 null 画笔。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
      <summary>获取或设置元素的边框粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框量（以与设备无关的像素为单位）。默认值为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>一个双精度值，指定行的高度（以与设备无关的像素为单位）。<see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 必须等于或大于 0.0034 且等于或小于 160000。<see cref="F:System.Double.NaN" /> 的值（等效于“Auto”的属性值）使行高度由当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">在试图将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
      <summary>获取或设置根据其每个文本元素内的文本行的机制。</summary>
      <returns>机制根据其每个文本元素内的文本行。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Margin">
      <summary>获取或设置元素的边距粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它以与设备无关的像素为单位指定要应用的边距量。默认值为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Padding">
      <summary>获取或设置元素的填充厚度。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边距量（以与设备无关的像素为单位）。默认值为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。</summary>
      <returns>成员 <see cref="T:System.Windows.TextAlignment" /> 枚举指定所需的对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 绘制了元素边框时使用。</summary>
      <returns>用于将应用于该元素的边框的画笔。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderThickness">
      <summary>获取或设置元素的边框粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakColumnBefore">
      <summary>获取或设置一个值，该值指示是否自动在该元素基于列的演示文稿中加入的位置的情况下插入此元素的前面使用分栏符。</summary>
      <returns>true 若要自动插入之前此元素，则使用分栏符否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakPageBefore">
      <summary>获取或设置一个值，该值指示是否自动插入一个分页符在此元素之前。</summary>
      <returns>true 若要自动插入一个分页符在此元素; 之前否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.ClearFloaters">
      <summary>获取或设置中任何方向 <see cref="T:System.Windows.Documents.Floater" /> 包含的元素 <see cref="T:System.Windows.Documents.Block" /> 应重新定位元素。</summary>
      <returns>其中一个 <see cref="T:System.Windows.WrapDirection" /> 值，该值指定用于分隔任何方向 <see cref="T:System.Windows.Documents.Floater" /> 中包含其他内容中的元素 <see cref="T:System.Windows.Documents.Block" /> 元素。 默认值是 <see cref="F:System.Windows.WrapDirection.None" />, ，它指示 floater 应呈现到位。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.FlowDirection">
      <summary>
            
              获取或设置 <see cref="T:System.Windows.Documents.Block" /> 元素中内容流的相对方向。
            
          </summary>
      <returns>
            
              <see cref="T:System.Windows.FlowDirection" /> 值之一，指定相对流动方向。  默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。  </returns>
    </member>
    <member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
      <summary>获取或设置一个值，该值指示是否启用或禁用自动断字的词。</summary>
      <returns>true 如果启用了自动换行和断字的词;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>0.0034 到 160000 范围内的每行高度（以与设备无关的像素为单位），或使用 <see cref="F:System.Double.NaN" /> 自动确定高度。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非正值。</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>获取或设置为块级别流内容元素内的每行文本确定行框的方式。</summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> 值之一，它指定为块级别流内容元素内的每行文本确定行框的方式。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Margin">
      <summary>获取或设置元素的边距粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边距量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.NextBlock">
      <summary>获取的同级元素 <see cref="T:System.Windows.Documents.Block" /> 元素紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>同级 <see cref="T:System.Windows.Documents.Block" /> 元素紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素，或 null 如果此类元素不存在。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Padding">
      <summary>获取或设置元素的填充厚度。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.PreviousBlock">
      <summary>获取的同级元素 <see cref="T:System.Windows.Documents.Block" /> 直接位于当前元素 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>同级 <see cref="T:System.Windows.Documents.Block" /> 直接位于当前元素 <see cref="T:System.Windows.Documents.Block" /> 元素，或 null 如果此类元素不存在。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.SiblingBlocks">
      <summary>获取一套 <see cref="T:System.Windows.Documents.Block" /> 是与当前的同级元素 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" /> 包含子级 <see cref="T:System.Windows.Documents.Block" /> 直接承载由当前的父元素 <see cref="T:System.Windows.Documents.Block" /> 元素，或 null 如果当前 <see cref="T:System.Windows.Documents.Block" /> 元素都有没有父级。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>获取或设置文本内容的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需的对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.FirstBlock">
      <summary>获取第一个 <see cref="T:System.Windows.Documents.Block" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.BlockCollection" />。</summary>
      <returns>第一个 <see cref="T:System.Windows.Documents.Block" /> 中的元素 <see cref="T:System.Windows.Documents.BlockCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.LastBlock">
      <summary>获取最后一个 <see cref="T:System.Windows.Documents.Block" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.BlockCollection" />。</summary>
      <returns>最后一个 <see cref="T:System.Windows.Documents.Block" /> 中的元素 <see cref="T:System.Windows.Documents.BlockCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockUIContainer.Child">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 由承载 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 由承载 <see cref="T:System.Windows.Documents.BlockUIContainer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.Source">
      <summary>获取或设置此文档引用的 uniform resource identifier (URI)。 </summary>
      <returns>一个 <see cref="T:System.Uri" />，表示文档引用。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
      <summary>获取集合中的元素的数目。</summary>
      <returns>集合中包含的项的数目。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
      <summary>获取位于指定索引处的元素。</summary>
      <param name="index">要获取的集合中的元素的从零开始的索引。</param>
      <returns>在指定的集合元素 <paramref name="index" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
      <summary>获取或设置数字、 字符或项目符号列表项的名称，该文档的格式标记中所示。</summary>
      <returns>一个 <see cref="T:System.String" /> 标记列表项。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
      <summary>获取或设置中的元素名称 <see cref="T:System.Windows.Documents.FixedPage" /> 标记层次结构的父提供内容 <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" />。</summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
      <summary>获取或设置情景片段的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示此代码段的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
      <summary>获取或设置的片段类型。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示的片段类型。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
      <summary>获取或设置该情景的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示篇文章中的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
      <summary>获取或设置单元格跨越的列数。</summary>
      <returns>单元格跨越的列数。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
      <summary>获取或设置单元格跨越的行数。</summary>
      <returns>单元格跨越的行数。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，它请求的当前段落或选中的段落居中。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+E。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，它请求的当前段落或选中的段落为两端对齐。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+J。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，它请求的内容选择左对齐。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+L。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignRight">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，它请求的内容选择右对齐。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+R。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Backspace">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 请求当前位置达到或超过当前所选内容的情况下输入退格符的命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Backspace。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，请求将当前位置任何拼错的单词进行更正。</summary>
      <returns>请求的命令。  此命令的任何默认键笔势。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，它请求的当前选定的字体大小将减少了 1 个点。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+OemOpenBrackets。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令时，该请求缩进的当前段落会降低一个制表位。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+T。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Delete">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，请求删除当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Delete。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，请求删除下一个单词 （相对于当前的位置）。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Delete。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，该请求被删除前一个单词 （相对于当前的位置） 命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Backspace。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，请求将当前位置或上当前所选内容的情况下插入一个分行符。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Enter。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，分段符将请求插入当前位置达到或超过当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Enter。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，该请求被忽略的拼错的单词在当前的位置或在当前所选内容的任何实例命令。</summary>
      <returns>请求的命令。  此命令的任何默认键笔势。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，它请求的当前选定的字体大小将增加 1 磅。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+OemCloseBrackets。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令时，该请求缩进的当前段落都加一个制表位。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+T。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，请求将插入符号向下移动一行。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，请求将插入符号向下移动一页。</summary>
      <returns>请求的命令。  此命令的默认键笔势 PageDown。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，该请求将插入符号向下移动一个段落命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，请求将插入符号左移一个字符。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，请求将插入符号移动保留的一个单词。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，请求将插入符号向右移动一个字符。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，请求将插入符号向右移动一个单词。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，请求将插入符号移动到内容的末尾。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，请求将插入符号移动到内容的开头。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，请求将插入符号移动到当前行的末尾。</summary>
      <returns>请求的命令。  此命令的默认键笔势 End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，请求将插入符号移动到当前行的开头。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，请求将插入符号向上移动一行。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，请求将插入符号向上移动一页。</summary>
      <returns>请求的命令。  此命令的默认键笔势 PageUp。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，请求将插入符号向上移动一段。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，该请求的当前选定范围向下扩展一行命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，它请求的当前选定范围向下扩展一页。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+PageDown。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，它请求的当前选定范围向下扩展一段。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，它请求的当前选定范围向左扩展一个字符。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，它请求的当前选定范围向左扩展一个字。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，它请求的当前选定范围向右扩展一个字符。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，它请求的当前选定范围向右扩展一个字。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，请求当前所选内容扩展到末尾的内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，请求当前所选内容将扩展到内容的开头。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，请求当前所选内容扩展到当前行的末尾。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，请求当前所选内容将扩展到当前行的开头。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，该请求的当前选定范围向上扩展一行命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，请求的当前选定范围向上扩展一页。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Shift+PageUp。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，该请求的当前选定范围向上扩展一段命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabBackward">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势为 Shift+Tab。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabForward">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</summary>
      <returns>请求的命令。  此命令的默认键笔势为 Tab。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，来请求 <see cref="T:System.Windows.Documents.Bold" /> 格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+B。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令请求所未排序的列表 （也称为项目符号列表） 格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+L。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，键入之间切换模式插入和改写。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Insert。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，来请求 <see cref="T:System.Windows.Documents.Italic" /> 格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+I。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令请求所排序的列表 （也称为编号列表） 格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+N。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令请求所下标格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+OemPlus。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令请求所上标格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+Shift+OemPlus。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，来请求 <see cref="T:System.Windows.Documents.Underline" /> 格式切换当前所选内容。</summary>
      <returns>请求的命令。  此命令的默认键笔势 Ctrl+U。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
      <summary>获取或设置一个值，该值指示是否此图可以延迟放入内容的流动。</summary>
      <returns>true 如果此图中可能会延迟放置; 否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Height">
      <summary>获取或设置一个值，该值指示的高度 <see cref="T:System.Windows.Documents.Figure" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.FigureLength" /> 结构，它指定的高度特性 <see cref="T:System.Windows.Documents.Figure" />。默认值是 <see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 和 <see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
      <summary>获取或设置一个值，该值指示沿水平方向将内容定位到的位置。</summary>
      <returns>成员 <see cref="T:System.Windows.FigureHorizontalAnchor" /> 指定的水平定位点位置的枚举 <see cref="T:System.Windows.Documents.Figure" />。默认值为 <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalOffset">
      <summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Documents.Figure" /> 沿水平方向从其基线偏移的距离。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> 沿水平方向从其基线偏移的距离（以与设备无关的像素为单位）。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalAnchor">
      <summary>获取或设置一个值，该值指示内容在垂直方向定位到的位置。</summary>
      <returns>成员 <see cref="T:System.Windows.FigureVerticalAnchor" /> 指定的垂直定位点位置的枚举 <see cref="T:System.Windows.Documents.Figure" />。默认值为 <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalOffset">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Figure" /> 沿垂直方向从其基线偏移的距离。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> 沿垂直方向从其基线偏移的距离（以与设备无关的像素为单位）。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Width">
      <summary>获取或设置一个值，该值指示的宽度 <see cref="T:System.Windows.Documents.Figure" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.FigureLength" /> 结构，它指定的宽度特性 <see cref="T:System.Windows.Documents.Figure" />。默认值是 <see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 和 <see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.WrapDirection">
      <summary>获取或设置一个值，该值指示允许的方式在其中内容可环绕 <see cref="T:System.Windows.Documents.Figure" />。</summary>
      <returns>成员 <see cref="T:System.Windows.WrapDirection" /> 枚举指定允许的方式在其中内容可环绕 <see cref="T:System.Windows.Documents.Figure" />。默认值为 <see cref="F:System.Windows.WrapDirection.Both" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
      <summary>获取有关的分页程序 <see cref="T:System.Windows.Documents.FixedDocument" /> 提供面向页的服务，例如获取特定页和正在重新分页响应更改。</summary>
      <returns>类的对象派生自 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 提供分页服务。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
      <summary>获取一个枚举器用于访问该文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</summary>
      <returns>枚举器访问文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.Pages">
      <summary>获取文档的集合 <see cref="T:System.Windows.Documents.PageContent" /> 元素。</summary>
      <returns>文档的一套 <see cref="T:System.Windows.Documents.PageContent" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
      <summary>获取或设置 <see cref="T:System.Printing.PrintTicket" /> 本文档与该键相关联。</summary>
      <returns>
        <see cref="T:System.Printing.PrintTicket" /> 此文档。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。</summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
      <summary>获取有关的分页程序 <see cref="T:System.Windows.Documents.FixedDocument" /> 提供面向页的服务，例如获取特定页和正在重新分页响应更改。</summary>
      <returns>类的对象派生自 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 提供分页服务</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
      <summary>获取一个枚举器，用于访问文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素。</summary>
      <returns>一个枚举器，用于访问文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
      <summary>获取或设置 <see cref="T:System.Printing.PrintTicket" /> 此文档的顺序与该键相关联。</summary>
      <returns>
        <see cref="T:System.Printing.PrintTicket" /> 对此序列。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.References">
      <summary>获取文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素的集合。</summary>
      <returns>文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素的集合。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。</summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用于呈现页面背景。</summary>
      <returns>用于呈现页面背景画笔。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.BleedBox">
      <summary>获取或设置一个为出血、注册标记和裁切标记定义溢出区域的矩形。</summary>
      <returns>定义溢出区域的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Bottom">
      <summary>获取或设置页面底部与父 <see cref="T:System.Windows.Controls.Canvas" /> 底部之间的距离。</summary>
      <returns>页面底部与父画布底部之间的距离。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Children">
      <summary>获取一套 <see cref="T:System.Windows.Documents.FixedPage" /> 子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> 的子元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.ContentBox">
      <summary>获取或设置内容区域的边框即，页上的区域 内 边距，如果有的话。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> ，它定义的内容区域。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Left">
      <summary>获取或设置页面的左边缘与父 <see cref="T:System.Windows.Controls.Canvas" /> 的左边缘之间的距离。</summary>
      <returns>页面的左边缘与父画布的左边缘之间的距离。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.NavigateUri">
      <summary>获取或设置 URI 与页关联。</summary>
      <returns>与 uniform resource identifier (URI) 关联的 <see cref="T:System.Windows.Documents.FixedPage" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.PrintTicket">
      <summary>获取或设置 <see cref="T:System.Printing.PrintTicket" /> 页上与该键相关联。</summary>
      <returns>
        <see cref="T:System.Printing.PrintTicket" /> 页。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Right">
      <summary>获取或设置页面的右边缘与父级 <see cref="T:System.Windows.Controls.Canvas" /> 的右边缘之间的距离。</summary>
      <returns>页面的右边缘与父级 canvas 的右边缘之间的距离。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。</summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Top">
      <summary>获取或设置页面顶部与父级 <see cref="T:System.Windows.Controls.Canvas" /> 顶部之间的距离。</summary>
      <returns>页面顶部与父级画布顶部之间的距离。</returns>
    </member>
    <member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
      <summary>获取或设置一个值，指示的水平对齐方式 <see cref="T:System.Windows.Documents.Floater" /> 对象。</summary>
      <returns>成员 <see cref="T:System.Windows.HorizontalAlignment" /> 指定的水平对齐方式的枚举 <see cref="T:System.Windows.Documents.Floater" />。 默认值为 <see cref="F:System.Windows.HorizontalAlignment.Stretch" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Floater.Width">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Floater" /> 对象的宽度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Floater" /> 的宽度，以设备独立像素为单位。 默认值是 <see cref="F:System.Double.NaN" />（等效于 Auto 的属性值），该值指示行高度自动确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用来填充内容区域的背景。</summary>
      <returns>用于填充内容区域的背景的画笔或 null 不使用背景画笔。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Blocks">
      <summary>获取 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容的 <see cref="T:System.Windows.Documents.Block" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
      <summary>获取或设置列间隔值，该值指示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中各列之间的间距。</summary>
      <returns>列间隔，以与设备无关的像素为单位。  值 <see cref="F:System.Double.NaN" />（等效于特性值“Auto”）指示列间隔等于 <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 属性。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
      <summary>获取或设置用于绘制列之间标尺的 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" />（用于绘制列之间的标尺线），或 null（不使用背景画笔）。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
      <summary>获取或设置隔线宽度。</summary>
      <returns>隔线宽度（以与设备无关的像素为单位）。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中列的所需最小宽度。</summary>
      <returns>所需的最小列宽，以与设备无关的像素为单位。 值为 <see cref="F:System.Double.NaN" /> 会导致无论页面多宽，都只显示一列。  默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> ，表示在内容的末尾 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 表示中的内容的末尾 <see cref="T:System.Windows.Documents.FlowDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentStart">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 表示内的内容开始 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointerContext" /> 表示中的内容开始 <see cref="T:System.Windows.Documents.FlowDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
      <summary>获取或设置流中的内容的相对方向 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>其中一个 <see cref="T:System.Windows.FlowDirection" /> 值，该值指定相对流动方向。 默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontFamily">
      <summary>获取或设置的首选顶级字体系列 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 对象，该对象指定首选的字体系列，或者具有一个或多个备用字体系列的主要首选字体系列。 默认值为由 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值确定的字体。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontSize">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的顶级字号。</summary>
      <returns>希望使用的字号，以与设备无关的像素为单位。   默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStretch">
      <summary>获取或设置为顶级字体拉伸特征 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>成员 <see cref="T:System.Windows.FontStretch" /> 指定所需的字体拉伸特征，若要使用的类。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStyle">
      <summary>获取或设置的顶级字体样式 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> 类的一个成员，指定所需的字体样式。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontWeight">
      <summary>获取或设置的顶级字体粗细 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> 类的一个成员，指定所需的字体粗细。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Foreground">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 将应用于的文本内容 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>要应用于文本内容的画笔。 默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
      <summary>获取或设置一个值，该值指示是否 <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 弹性还是固定值。</summary>
      <returns>true 如果列的宽度是灵活; false 如果列宽度固定不变。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
      <summary>获取的值 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>值 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性 <see cref="T:System.Windows.Documents.FlowDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
      <summary>获取或设置一个值，该值指示是否启用或禁用自动断字的词。</summary>
      <returns>true 如果启用了自动换行和断字的词;，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
      <summary>获取或设置一个值，该值指示是否启用或禁用最佳段落布局。</summary>
      <returns>true 如果启用最佳段落布局;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>各行高度均介于 0.0034 到 160000 之间（以与设备无关的像素为单位）。<see cref="F:System.Double.NaN" /> 的值（等效于“Auto”的属性值）使行高度由当前字体特征自动确定。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非正值。</exception>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
      <summary>获取或设置为每个行内文本的根据这一机制 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>其中一个 <see cref="T:System.Windows.LineStackingStrategy" /> 值，该值指定根据行中的每一行中的文本的机制 <see cref="T:System.Windows.Documents.FlowDocument" />。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的页面的最大高度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中页面的最大高度（以设备独立像素为单位）。 默认值是 <see cref="F:System.Double.PositiveInfinity" />（没有最大页面高度）。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的页面的最大宽度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的页面的最大宽度，以与设备无关的像素为单位。 默认值是 <see cref="F:System.Double.PositiveInfinity" />（没有最大页面宽度）。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中页面的最小高度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中页面的最小高度（以与设备无关的像素为单位）。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的页面的最小宽度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的页面的最小宽度，以与设备无关的像素为单位。 默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中页面的首选高度。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中页面的首选高度（以与设备无关的像素为单位）。<see cref="F:System.Double.NaN" /> 的一个值（等效于“Auto”的属性值）导致页面高度被自动确定。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PagePadding">
      <summary>获取或设置一个值，该值指示页面边界和页面内容之间填充空间的厚度。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页宽。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页宽，以与设备无关的像素为单位。 如果值为 <see cref="F:System.Double.NaN" />（等效于属性值“Auto”），则页宽自动确定。 默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator">
      <summary>定义执行实际内容分页的源对象。</summary>
      <returns>执行实际内容分页的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需的对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextEffects">
      <summary>获取或设置要应用于文本的效果 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.TextEffectCollection" /> 包含一个或多个 <see cref="T:System.Windows.Media.TextEffect" /> 对象以定义要应用于文本的效果 <see cref="T:System.Windows.Documents.FlowDocument" />。 默认值是 null （不应用任何效果）。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Typography">
      <summary>获取的文本内容的当前有效的版式变体 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。 默认版式值的列表，请参阅 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
      <summary> 获取当前撰写文本的结束位置。</summary>
      <returns>当前的撰写文本结束位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
      <summary> 获取当前撰写文本的起始位置。</summary>
      <returns>当前的撰写文本的起始位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
      <summary> 获取文本输入的结果文本的结束位置。</summary>
      <returns>结果文本输入的文本的结束位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
      <summary> 获取文本输入的结果文本的起始位置。</summary>
      <returns>结果文本输入的文本的起始位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionLength">
      <summary>在 Unicode 符号获取当前组合的长度。</summary>
      <returns>在 Unicode 符号的当前组合的长度。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionOffset">
      <summary>获取撰写文本中出现的位置 <see cref="T:System.Windows.Controls.TextBox" />。</summary>
      <returns>撰写文本中出现的位置 <see cref="T:System.Windows.Controls.TextBox" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultLength">
      <summary>获取已完成在 Unicode 文本的长度符号时 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件发生。</summary>
      <returns>以 unicode 格式已完成的文本的长度符号时 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件发生。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultOffset">
      <summary>获取已完成的文本的偏移量时 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件发生。</summary>
      <returns>已完成的文本的偏移量时 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件发生。</returns>
    </member>
    <member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
      <summary> 获取 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 以异步方式请求的 <see cref="T:System.Windows.Documents.FixedPage" /> 内容。</summary>
      <returns>
        <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 请求的 <see cref="T:System.Windows.Documents.PageContent" /> 的可视化树的根元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.BidiLevel">
      <summary>获取或设置的双向嵌套级别 <see cref="T:System.Windows.Documents.Glyphs" />。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值表示双向嵌套级别。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.CaretStops">
      <summary>获取或设置相对应的脱中表示的 Unicode 字符串的码位 <see cref="T:System.Windows.Documents.Glyphs" />。</summary>
      <returns>类型的值 <see cref="T:System.String" /> ，表示是否码位存在脱。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
      <summary>获取或设置为其特定设备字体 <see cref="T:System.Windows.Documents.Glyphs" /> 对象已经过优化。</summary>
      <returns>一个 <see cref="T:System.String" /> 值，该值表示设备字体的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用于填充 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" /> 用于填充 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>获取或设置用于呈现的全身大小 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</summary>
      <returns>一个 <see cref="T:System.Double" /> 值，该值表示用于呈现的全身大小。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>获取或设置 <see cref="T:System.Uri" /> ，表示用于呈现字体的位置 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</summary>
      <returns>一个 <see cref="T:System.Uri" /> ，表示用于呈现字体的位置 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>获取或设置表示字形规范的集合 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>表示标志符号规范的集合 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.IsSideways">
      <summary>确定是否旋转 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>true 如果标志符号构成 <see cref="T:System.Windows.Documents.Glyphs" /> 对象是旋转 90 ° 逆时针旋转; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>获取或设置的值的 x 的原始 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>X 的原始 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>获取或设置的值为 y 原点 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>为 y 原点 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>获取或设置 <see cref="T:System.Windows.Media.StyleSimulations" /> 为 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</summary>
      <returns>
        <see cref="T:System.Windows.Media.StyleSimulations" /> 为 <see cref="T:System.Windows.Documents.Glyphs" /> 类。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>基 URI 的当前上下文。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>获取或设置 <see cref="T:System.String" /> ，它表示的 Unicode 字符串 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</summary>
      <returns>Unicode 字符串 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.BaseUri">
      <summary>获取或设置基 URI <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>基 URI <see cref="T:System.Windows.Documents.Hyperlink" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>获取或设置要与关联的命令 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>若要将与相关联的命令 <see cref="T:System.Windows.Documents.Hyperlink" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>获取或设置与指定的命令相关联的命令参数 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性。</summary>
      <returns>一个对象，指定参数的命令通过指定 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
      <summary>获取或设置要对其执行指定的命令的目标元素 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性。</summary>
      <returns>要对其执行指定的命令的目标元素 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Documents.Hyperlink" /> 已启用。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.Hyperlink" /> 启用; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>获取或设置 URI 时导航至 <see cref="T:System.Windows.Documents.Hyperlink" /> 被激活。 </summary>
      <returns>
        <see cref="T:System.Uri" /> 时导航至 <see cref="T:System.Windows.Documents.Hyperlink" /> 被激活。 默认值为 null。<see cref="T:System.Windows.Documents.Hyperlink" /> 可以导航到的值 <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 属性仅当直接或间接父级 <see cref="T:System.Windows.Documents.Hyperlink" /> 导航宿主，包括 <see cref="T:System.Windows.Navigation.NavigationWindow" />, ，<see cref="T:System.Windows.Controls.Frame" />, ，或可以承载任何浏览器 XBAP (其中包括 Internet Explorer 7, ，Microsoft Internet Explorer 6, ，和 Firefox 2.0 +)。 有关详细信息，请参阅 导航宿主 中 导航概述。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置基 URI <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>基 URI <see cref="T:System.Windows.Documents.Hyperlink" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>获取或设置目标窗口或框架的名称 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>一个字符串，指定的名称的目标窗口或框架的 <see cref="T:System.Windows.Documents.Hyperlink" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.BaselineAlignment">
      <summary>获取或设置的基线对齐方式 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>成员或 <see cref="T:System.Windows.BaselineAlignment" /> 指定的基线对齐方式的枚举 <see cref="T:System.Windows.Documents.Inline" /> 元素。默认值是 <see cref="T:System.Windows.BaselineAlignment" />。基线。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FlowDirection">
      <summary>获取或设置一个值，指定流中的内容的相对方向 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>成员 <see cref="T:System.Windows.FlowDirection" /> 指定相对流动方向的枚举。  获取此属性返回当前有效的流动方向。  此属性设置导致的内容 <see cref="T:System.Windows.Documents.Inline" /> 元素重新在指示的方向流动。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.NextInline">
      <summary>获取下一个 <see cref="T:System.Windows.Documents.Inline" /> 此元素与对等的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Inline" /> 对象，表示下一个 <see cref="T:System.Windows.Documents.Inline" /> 与此元素中，对等的元素或 null 如果没有下一步 <see cref="T:System.Windows.Documents.Inline" /> 元素。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.PreviousInline">
      <summary>获取以前 <see cref="T:System.Windows.Documents.Inline" /> 此元素与对等的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Inline" /> 对象，表示以前 <see cref="T:System.Windows.Documents.Inline" /> 与此元素中，对等的元素或 null 如果没有前一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.SiblingInlines">
      <summary>获取 <see cref="T:System.Windows.Documents.InlineCollection" /> ，其中包含 <see cref="T:System.Windows.Documents.Inline" /> 同级 （对等） 到此元素的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.InlineCollection" /> 对象，其中包含 <see cref="T:System.Windows.Documents.Inline" /> 属于与此元素同级元素。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>获取 <see cref="T:System.Windows.TextDecorationCollection" /> ，其中包含要应用于此元素的文本修饰。</summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 包含要应用于此元素的文本修饰的集合。默认值是 null （应用任何文本修饰）。</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.FirstInline">
      <summary>获取第一个 <see cref="T:System.Windows.Documents.Inline" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.InlineCollection" />。</summary>
      <returns>第一个 <see cref="T:System.Windows.Documents.Inline" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.InlineCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.LastInline">
      <summary>获取最后一个 <see cref="T:System.Windows.Documents.Inline" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.InlineCollection" />。</summary>
      <returns>最后一个 <see cref="T:System.Windows.Documents.Inline" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.InlineCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 由承载 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 由承载 <see cref="T:System.Windows.Documents.InlineUIContainer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.LinkTarget.Name">
      <summary>获取或设置元素的名称，这 <see cref="T:System.Windows.Documents.LinkTarget" /> 标识为可链接的元素。</summary>
      <returns>一个 <see cref="T:System.String" /> ，等同于 <see cref="P:System.Windows.FrameworkElement.Name" /> 属性与对应于此的标记元素 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的 <see cref="T:System.Windows.Documents.LinkTarget" />。</summary>
      <param name="index">正在写入或读取该目标的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.Windows.Documents.LinkTarget" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.ListItems">
      <summary>获取 <see cref="T:System.Windows.Documents.ListItemCollection" /> 包含 <see cref="T:System.Windows.Documents.ListItem" /> 所包含的内容的元素 <see cref="T:System.Windows.Documents.List" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.ListItemCollection" /> 包含 <see cref="T:System.Windows.Documents.ListItem" /> 所包含的内容的元素 <see cref="T:System.Windows.Documents.List" />。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerOffset">
      <summary>获取或设置每个 <see cref="T:System.Windows.Documents.ListItem" /> 元素内容与列表标记近边缘之间的所需距离。</summary>
      <returns>指定列表内容和列表标记近边缘之间所需距离的双精度值，以设备独立像素为单位。<see cref="F:System.Double.NaN" />（等效于“Auto”的属性值）的值导致自动确定标记偏移量。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerStyle">
      <summary>获取或设置的标记样式 <see cref="T:System.Windows.Documents.List" />。</summary>
      <returns>成员 <see cref="T:System.Windows.TextMarkerStyle" /> 枚举指定要使用的标记样式。默认值为 <see cref="F:System.Windows.TextMarkerStyle.Disc" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.StartIndex">
      <summary>获取或设置标记的有序列表中的项的起始索引。</summary>
      <returns>用于标记的有序列表中的项的起始索引。默认值是 1。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Blocks">
      <summary>获取包含 <see cref="T:System.Windows.Documents.ListItem" /> 的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素的块集合。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.ListItem" /> 的 <see cref="T:System.Windows.Documents.Block" /> 元素的块集合。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 绘制了元素边框时使用。</summary>
      <returns>用于将应用于该元素的边框的画笔。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderThickness">
      <summary>获取或设置元素的边框粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.FlowDirection">
      <summary>获取或设置流中的内容的相对方向 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</summary>
      <returns>其中一个 <see cref="T:System.Windows.FlowDirection" /> 值，该值指定相对流动方向。  默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>每个行的高度范围为 0.0034 到 160000，以与设备无关的像素为单位。<see cref="F:System.Double.NaN" /> 的值（等效于“Auto”的属性值）使行高度由当前字体特征自动确定。  默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
      <summary>获取或设置为每个行内文本的根据这一机制 <see cref="T:System.Windows.Documents.ListItem" />。</summary>
      <returns>其中一个 <see cref="T:System.Windows.LineStackingStrategy" /> 值，该值指定根据其每个行内文本的机制 <see cref="T:System.Windows.Documents.ListItem" />。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.List">
      <summary>获取 <see cref="T:System.Windows.Documents.List" /> ，其中包含 <see cref="T:System.Windows.Documents.ListItem" />。</summary>
      <returns>列表，其中包含 <see cref="T:System.Windows.Documents.ListItem" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Margin">
      <summary>获取或设置元素的边距粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边距量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.NextListItem">
      <summary>获取下一个 <see cref="T:System.Windows.Documents.ListItem" /> 在包含 <see cref="T:System.Windows.Documents.List" />。</summary>
      <returns>下一步 <see cref="T:System.Windows.Documents.ListItem" /> 中 <see cref="T:System.Windows.Documents.List" />, ，或 null 如果没有下一步 <see cref="T:System.Windows.Documents.ListItem" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Padding">
      <summary>获取或设置元素的填充厚度。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.PreviousListItem">
      <summary>获取以前 <see cref="T:System.Windows.Documents.ListItem" /> 在包含 <see cref="T:System.Windows.Documents.List" />。</summary>
      <returns>上一个 <see cref="T:System.Windows.Documents.ListItem" /> 中 <see cref="T:System.Windows.Documents.List" />, ，或 null 如果没有前一个 <see cref="T:System.Windows.Documents.ListItem" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.SiblingListItems">
      <summary>获取 <see cref="T:System.Windows.Documents.ListItemCollection" /> ，其中包含 <see cref="T:System.Windows.Documents.ListItem" /> 元素是同级当前 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.ListItemCollection" /> 包含子级 <see cref="T:System.Windows.Documents.ListItem" /> 直接承载由当前的父元素 <see cref="T:System.Windows.Documents.ListItem" /> 元素，或 null 如果当前 <see cref="T:System.Windows.Documents.ListItem" /> 元素都有没有父级。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需的对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.FirstListItem">
      <summary>获取第一个 <see cref="T:System.Windows.Documents.ListItem" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.ListItemCollection" />。</summary>
      <returns>第一个 <see cref="T:System.Windows.Documents.ListItem" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.ListItemCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.LastListItem">
      <summary>获取最后一个 <see cref="T:System.Windows.Documents.ListItem" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.ListItemCollection" />。</summary>
      <returns>最后一个 <see cref="T:System.Windows.Documents.ListItem" /> 的此实例中的元素 <see cref="T:System.Windows.Documents.ListItemCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FixedPage" /> 与此相关 <see cref="T:System.Windows.Documents.PageContent" />。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FixedPage" /> 与此相关 <see cref="T:System.Windows.Documents.PageContent" />, ，或 null 时 <see cref="T:System.Windows.Documents.FixedPage" /> 通过设置 <see cref="P:System.Windows.Documents.PageContent.Source" /> 属性。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.LinkTargets">
      <summary>获取一套 <see cref="T:System.Windows.Documents.LinkTarget" /> 确定在页上的超链接可寻址位置的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 的 <see cref="T:System.Windows.Documents.LinkTarget" /> 确定在页上的超链接可寻址位置的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Source">
      <summary>获取或设置 uniform resource identifier (URI) 到 <see cref="T:System.Windows.Documents.FixedPage" /> 内容数据流。  </summary>
      <returns>
        <see cref="T:System.Uri" /> 相应 <see cref="T:System.Windows.Documents.FixedPage" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Count">
      <summary>获取页集合中包含的元素数。</summary>
      <returns>集合中的元素数。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Documents.PageContent" /> 在集合中的指定索引处的元素。</summary>
      <param name="pageIndex">要获取的页的从零开始的索引。</param>
      <returns>在集合中的指定索引处的页面内容元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>获取包含顶级 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Documents.Paragraph" /> 的内容。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Documents.Paragraph" /> 的内容。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepTogether">
      <summary>获取或设置一个值，指示段落的文本是否可能会影响由分页符或分栏符。</summary>
      <returns>true 若要防止段落的文本被破坏;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
      <summary>获取或设置一个值，该值指示此段落和下一个段落之间是否可能会出现中断。</summary>
      <returns>true 若要防止此段落与下一个段落; 之间出现一个分行符否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
      <summary>获取或设置一个值，指定可以在中断之前保留的行的最小数目时 <see cref="T:System.Windows.Documents.Paragraph" /> 按分页符或分栏符。</summary>
      <returns>一个整数，指定的最小可以在中断之前保留的行数时 <see cref="T:System.Windows.Documents.Paragraph" /> 按分页符或分栏符。 值为 0 表示没有最小值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
      <summary>获取或设置一个值，指定可以放在中断后的行的最小数目时 <see cref="T:System.Windows.Documents.Paragraph" /> 按分页符或分栏符。</summary>
      <returns>一个整数，指定的最小可以放置在中断后的行数时 <see cref="T:System.Windows.Documents.Paragraph" /> 按分页符或分栏符。  值为 0 表示没有最小值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextDecorations">
      <summary>获取或设置 <see cref="T:System.Windows.TextDecorationCollection" /> ，其中包含要应用于此元素的文本修饰。</summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 包含要应用于此元素的文本修饰的集合。 值为 null 意味着将不会应用任何文本修饰。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextIndent">
      <summary>获取或设置一个值，指示如何得来的首行缩进 <see cref="T:System.Windows.Documents.Paragraph" />。</summary>
      <returns>双精度值，该值指定要中设备无关的像素段落的首行缩进的量。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>获取或设置此文本的非格式化的文本内容 <see cref="T:System.Windows.Documents.Run" />。</summary>
      <returns>一个字符串，指定此文本的非格式化的文本内容 <see cref="T:System.Windows.Documents.Run" />。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>获取包含顶级 <see cref="T:System.Windows.Documents.Block" /> 元素的 <see cref="T:System.Windows.Documents.BlockCollection" />，前者构成 <see cref="T:System.Windows.Documents.Section" /> 的内容。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.Block" /> 元素的 <see cref="T:System.Windows.Documents.BlockCollection" />，前者构成 <see cref="T:System.Windows.Documents.Section" /> 的内容。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>获取或设置一个值，该值指示是否应插入后的最后一段的尾随分段符时的根内容置于 <see cref="T:System.Windows.Documents.Section" /> 在剪贴板上的元素。</summary>
      <returns>true 以指示尾随分段符应包括; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
      <summary>获取制造商的专有格式的文件的默认扩展插件。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示专用格式的默认文件扩展名。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
      <summary>获取制造商的序列化组件的公共名称。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示序列化组件的公共名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
      <summary>获取序列化组件制造商的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> 表示制造商的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
      <summary>获取序列化组件制造商的 web 地址。</summary>
      <returns>一个 <see cref="T:System.Uri" /> 表示制造商的网站。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
      <summary>获取包含序列化程序的程序集的名称。</summary>
      <returns>包含插件的序列化程序的程序集 (通常为 DLL) 的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
      <summary>获取包含序列化程序的程序集文件的路径。</summary>
      <returns>包含插件的序列化程序的程序集文件路径。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
      <summary>获取包含序列化程序的程序集的版本。</summary>
      <returns>包含插件的序列化程序的程序集的版本。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
      <summary>获取与序列化程序将输出的文件相关联的默认扩展名。</summary>
      <returns>使用序列化程序将输出的文件关联的默认扩展插件。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
      <summary>获取序列化程序将公开显示名称。</summary>
      <returns>序列化程序将公开显示名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
      <summary>获取名称 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生类，该类实现序列化程序。</summary>
      <returns>名称 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生类，该类实现序列化程序。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
      <summary>获取一个值，该值指示序列化程序是否可以为与当前安装的版本加载 Microsoft .NET Framework。</summary>
      <returns>true 如果序列化程序程序集可以加载;否则为 false。  默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
      <summary>获取开发序列化程序的公司的名称。</summary>
      <returns>开发插件的序列化程序的公司的名称。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
      <summary>获取开发序列化程序的公司的 web 地址。</summary>
      <returns>开发序列化程序的公司 web 地址。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
      <summary>获取的版本 Microsoft .NET Framework 所需的序列化程序。</summary>
      <returns>版本 Microsoft .NET Framework 所需的插件的序列化程序。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
      <summary>获取已安装的插件序列化程序的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 已注册的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
      <summary>获取取消写操作的异常。</summary>
      <returns>取消执行写入操作的异常。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
      <summary>获取或设置打印机设置打印文档时使用的默认值。</summary>
      <returns>要打印文档时使用的默认打印机设置。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
      <summary>获取一个值，指示的范围 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 事件。</summary>
      <returns>一个枚举，指示的范围 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 至于的一系列文档、 单个文档或单个页面的事件。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
      <summary>获取与文档或页面输出的数目 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />。</summary>
      <returns>使用的文档或页面输出的数目 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
      <summary>获取文档或页面都已写入的数目。</summary>
      <returns>文档或页面的事件时都已写入数。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
      <summary>获取一个值，该值指示写入进度的作用域。</summary>
      <returns>一个枚举，指示写入多个文档序列、 单个文档或单个页面的作用域。</returns>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>获取包含顶级 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Documents.Span" /> 的内容。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" />，前者构成 <see cref="T:System.Windows.Documents.Span" /> 的内容。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.CellSpacing">
      <summary>获取或设置表的单元格之间的间距大小。</summary>
      <returns>表的单元格之间的间距大小，以与设备无关的像素为单位。默认值为 2.0。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.Columns">
      <summary>获取 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 对象，该对象包含由表承载的列。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 对象，该对象包含由表承载的列（由 <see cref="T:System.Windows.Documents.TableColumn" /> 对象表示）。 请注意此数字可能不是表中呈现的实际列数。 这是表中的 <see cref="T:System.Windows.Documents.TableCell" /> 对象，这些对象确定实际呈现的列数。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.LogicalChildren">
      <summary>获取一个枚举器可用于循环逻辑子级的 <see cref="T:System.Windows.Documents.Table" />。</summary>
      <returns>枚举器的逻辑子级的 <see cref="T:System.Windows.Documents.Table" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.RowGroups">
      <summary>获取 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 集合对象，该对象包含由表承载的行组。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 集合对象，它包含由表承载的行组（由 <see cref="T:System.Windows.Documents.TableRowGroup" /> 对象表示）。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Blocks">
      <summary>获取包含顶级 <see cref="T:System.Windows.Documents.Block" /> 元素的 <see cref="T:System.Windows.Documents.BlockCollection" />，前者构成 <see cref="T:System.Windows.Documents.TableCell" /> 的内容。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.Block" /> 元素的 <see cref="T:System.Windows.Documents.BlockCollection" />，前者构成 <see cref="T:System.Windows.Documents.TableCell" /> 的内容。此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderBrush">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 绘制了元素边框时使用。</summary>
      <returns>用于将应用于该元素的边框的画笔。默认值是 null 画笔。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderThickness">
      <summary>获取或设置元素的边框粗细。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框量（以与设备无关的像素为单位）。默认值为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.ColumnSpan">
      <summary>获取或设置列的数目， <see cref="T:System.Windows.Documents.TableCell" /> 应跨越。</summary>
      <returns>列数 <see cref="T:System.Windows.Documents.TableCell" /> 应跨越。默认值是 1 （无跨距）。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.FlowDirection">
      <summary>获取或设置一个值，指定流中的内容的相对方向 <see cref="T:System.Windows.Documents.TableCell" /> 元素。</summary>
      <returns>成员 <see cref="T:System.Windows.FlowDirection" /> 指定相对流动方向的枚举。  获取此属性返回当前有效的流动方向。  此属性设置导致的内容 <see cref="T:System.Windows.Documents.TableCell" /> 元素重新在指示的方向流动。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineHeight">
      <summary>获取或设置各行内容的高度。</summary>
      <returns>一个双精度值，指定行的高度（以与设备无关的像素为单位）。<see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 必须等于或大于 0.0034 且等于或小于 160000。<see cref="F:System.Double.NaN" /> 的值（等效于“Auto”的属性值）使行高度由当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">在试图将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
      <summary>获取或设置为每个行内文本的根据这一机制 <see cref="T:System.Windows.Documents.TableCell" />。</summary>
      <returns>为每个行内文本的机制根据其 <see cref="T:System.Windows.Documents.TableCell" />。 默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Padding">
      <summary>获取或设置元素的填充厚度。</summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边距量（以与设备无关的像素为单位）。默认值为统一粗细，即零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.RowSpan">
      <summary>获取或设置的行数 <see cref="T:System.Windows.Documents.TableCell" /> 应跨越。</summary>
      <returns>行数 <see cref="T:System.Windows.Documents.TableCell" /> 应跨越。默认值是 1 （无跨距）。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。</summary>
      <returns>成员 <see cref="T:System.Windows.TextAlignment" /> 枚举指定所需的对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Capacity">
      <summary>获取或设置此集合的预先分配的集合项容量。</summary>
      <returns>预先分配的集合项容量为此集合。 默认值为 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试设置时，引发 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 小于的当前值的值 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Count">
      <summary>获取集合当前包含的项数。</summary>
      <returns>集合当前包含的项数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的集合项。 这是索引的属性。</summary>
      <param name="index">一个指定的收集项的位置的从零开始索引。</param>
      <returns>指定索引处的集合项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 <paramref name="index" /> 也不可小于零，或者当 <paramref name="index" /> 是否大于或等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 是只读的; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Background">
      <summary>获取或设置用来填充 <see cref="T:System.Windows.Documents.TableColumn" /> 内容的背景 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>用来填充 <see cref="T:System.Windows.Documents.TableColumn" /> 内容的背景 <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Width">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.TableColumn" /> 元素的宽度。<see cref="P:System.Windows.Documents.TableColumn.Width" /> 属性从一侧到另一侧度量 <see cref="T:System.Windows.Documents.TableColumn" /> 内容、填充和边框的总和。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableColumn" /> 元素的宽度（表示为 <see cref="T:System.Windows.GridLength" />）。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
      <summary>获取或设置此集合的预分配的集合项容量。</summary>
      <returns>预分配的集合项容量为此集合。  默认值是 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试设置时，引发 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 小于的当前值的值 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Count">
      <summary>获取集合当前包含的项数。</summary>
      <returns>集合当前包含的项数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。  这是索引的属性。</summary>
      <param name="index">一个指定要检索的集合项的位置的从零开始索引。</param>
      <returns>指定索引处的集合项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于零，或者当索引大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 是只读的; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。 使用类型安全 <see cref="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)" /> 属性相反。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRow.Cells">
      <summary>获取包含 <see cref="T:System.Windows.Documents.TableRow" /> 的单元格的 <see cref="T:System.Windows.Documents.TableCellCollection" />。</summary>
      <returns>子单元格的集合。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Capacity">
      <summary>获取或设置此集合的预分配的集合项容量。</summary>
      <returns>预分配的集合项容量为此集合。  默认值是 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试设置时，引发 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 小于的当前值的值 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Count">
      <summary>获取集合当前包含的项数。</summary>
      <returns>集合当前包含的项数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。  这是索引的属性。</summary>
      <param name="index">一个指定要检索的集合项的位置的从零开始索引。</param>
      <returns>指定索引处的集合项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当索引小于零，或者当索引大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableRowCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableRowCollection" /> 是只读的; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroup.Rows">
      <summary>获取 <see cref="T:System.Windows.Documents.TableRowCollection" /> ，其中包含 <see cref="T:System.Windows.Documents.TableRow" /> 对象组成的内容 <see cref="T:System.Windows.Documents.TableRowGroup" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableRowCollection" /> ，其中包含 <see cref="T:System.Windows.Documents.TableRow" /> 所包含的内容的元素 <see cref="T:System.Windows.Documents.TableRowGroup" />。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
      <summary>获取或设置此集合的预分配的集合项容量。</summary>
      <returns>预分配的集合项容量为此集合。  默认值是 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试设置时，引发 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 小于的当前值的值 <see cref="P:System.Windows.Documents.TableCellCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
      <summary>获取集合当前包含的项数。</summary>
      <returns>集合当前包含的项数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>目前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。  这是索引的属性。</summary>
      <param name="index">一个指定要检索的集合项的位置的从零开始索引。</param>
      <returns>指定索引处的集合项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">时引发 索引 也不可小于零，或者当 索引 是否大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 具有固定大小; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 是只读的; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.Element">
      <summary> 获取 <see cref="T:System.Windows.DependencyObject" /> ， <see cref="T:System.Windows.Media.TextEffect" /> 设定为目标。</summary>
      <returns>
        <see cref="T:System.Windows.DependencyObject" /> ， <see cref="T:System.Windows.Media.TextEffect" /> 设定为目标。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
      <summary>获取一个值，确定是否对目标元素启用文本效果 </summary>
      <returns>true 如果 <see cref="T:System.Windows.Media.TextEffect" />目标系统上已启用; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
      <summary> 获取 <see cref="T:System.Windows.Media.TextEffect" /> 的 <see cref="T:System.Windows.Documents.TextEffectTarget" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffect" /> 的 <see cref="T:System.Windows.Documents.TextEffectTarget" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 用来填充内容区域的背景。</summary>
      <returns>用于填充内容区域的背景的画笔或 null 不使用背景画笔。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> ，表示在元素内容的末尾。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> ，表示在内容的末尾 <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> ，表示在元素中的内容的开始。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointerContext" /> ，表示在内容开头的 <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 表示元素的结束之后的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 表示的末尾之后的位置 <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 表示开头之前的元素的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointerContext" /> 表示之前的开始位置 <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>获取或设置元素内容的首选顶级字体系列。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 对象，该对象指定首选字体系列，或具有一个或多个备用字体系列的主要首选字体系列。 默认值为由 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值确定的字体。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>获取或设置元素内容的字体大小。</summary>
      <returns>需要使用到与设备无关的像素的字体大小，大于 0.001 且小于或等于 35791。  默认值取决于当前的系统设置和 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 设置为大于 35791 或小于或等于 0.001 的值。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>获取或设置元素内容的字体拉伸特征。</summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 结构，指定希望使用的字体拉伸特征。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>获取或设置元素内容的字体样式。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> 类的一个成员，指定所需的字体样式。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>获取或设置元素内容的顶级字体粗细。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> 类的一个成员，指定所需的字体粗细。 默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值确定。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>获取或设置要应用于元素内容的 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>要应用于文本内容的画笔。 默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.LogicalChildren">
      <summary>获取一个枚举器可循环访问的逻辑子级的元素。</summary>
      <returns>一个逻辑子级的枚举。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.TextEffects">
      <summary>获取或设置要应用于元素的内容的文本效果的集合。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.TextEffectCollection" /> 包含一个或多个 <see cref="T:System.Windows.Media.TextEffect" /> 定义了要应用于此元素中的内容效果的对象。 默认值是 null （不是空的集合）。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Typography">
      <summary>获取当前有效的版式变体的内容的元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。 默认版式值的列表，请参阅 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.Count">
      <summary>获取集合中当前项的数目。</summary>
      <returns>集合中当前项的数目。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
      <summary>获取一个值，该值指示集合为只读的。</summary>
      <returns>如果集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count">
      <summary>获取 <see cref="T:System.Collections.ICollection" /> 中包含的元素数。  使用类型安全 <see cref="P:System.Windows.Documents.TextElementCollection`1.Count" /> 属性相反。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中包含的元素数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</summary>
      <returns>如果对 true 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</summary>
      <returns>如果 true 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</summary>
      <returns>如果 true 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Controls.RichTextBox" /> 可以合并两个相邻的文本元素。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Controls.RichTextBox" /> 自由地合并相邻的自定义文本具有相同属性值的元素; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly">
      <summary>获取或设置一个值，该值指示文本元素提供基于字符的格式设置还是将格式应用到整个元素。</summary>
      <returns>true 如果格式设置将应用于单个字符; false 如果的格式应该应用于整个元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 与当前的位置相关联的文本容器中的内容的末尾。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 与当前的位置相关联的文本容器中的内容的末尾。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentStart">
      <summary>获取 <see cref="T:System.Windows.Documents.TextPointer" /> 与当前的位置相关联的文本容器中的内容的开头。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 与当前的位置相关联的文本容器中的内容的开头。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
      <summary>获取一个值，该值指示与当前的位置相关联的文本容器是否具有有效 （最新） 布局。</summary>
      <returns>true 如果布局，则当前和有效，则为否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>获取一个值，该值指示当前的位置是否插入位置。</summary>
      <returns>true 如果当前位置是插入位置;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
      <summary>获取一个值，该值指示当前的位置是否位于行首。</summary>
      <returns>true 如果当前位置位于某一行的行; 开始否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>获取与当前的位置，用来区分与当前的位置相关联的内容相关联的逻辑方向。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 与当前的位置相关联的值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Paragraph">
      <summary>如果有的话，请获取涵盖当前位置，段落。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Paragraph" /> 的作用域当前的位置，或 null 如果存在这样的段落。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>获取涵盖当前位置的逻辑父级。</summary>
      <returns>涵盖当前位置逻辑父级。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.End">
      <summary>获取标记当前所选内容的末尾的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指向当前所选内容的末尾。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.IsEmpty">
      <summary>获取一个值，该值指示当前所选内容为空。</summary>
      <returns>true 如果当前所选内容为空，则为否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Start">
      <summary>获取标记当前所选内容的开始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指向当前所选内容的开头。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Text">
      <summary>获取或设置当前所选内容的纯文本内容。</summary>
      <returns>包含当前所选内容的纯文本内容的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">当尝试将此属性设置为时发生 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>获取或设置一个值，指定备用批注格式的索引。</summary>
      <returns>替代批注形式的索引。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>获取或设置 <see cref="T:System.Windows.FontCapitals" /> 枚举值，该值指示所选字体的大写格式。</summary>
      <returns>一个 <see cref="T:System.Windows.FontCapitals" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontCapitals.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>获取或设置一个值，确定所有大写文本的字形内部间距是否全局范围内调整以提高可读性。</summary>
      <returns>true 如果调整间距;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>获取或设置一个值，确定是否调整标志符号的垂直位置以更好地配合大写标志符号。</summary>
      <returns>true 如果调整的垂直位置;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>获取或设置一个值，确定是否可以根据所呈现文本的上下文使用自定义标志符号窗体。</summary>
      <returns>true 如果可以使用自定义标志符号格式;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>获取或设置一个值，确定是否启用上下文连字。</summary>
      <returns>true 如果启用了上下文连字;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>获取或设置一个值，指定上下文花体的索引。</summary>
      <returns>标准连接形式花体窗体的索引。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>获取或设置一个值，确定是否启用自由连字。</summary>
      <returns>true 如果启用了自由连字;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>获取或设置一个值，确定是否已使用相应的首选版式格式替换标准日语字体格式。</summary>
      <returns>true 如果标准日语字体格式已被替换相应的首选版式格式;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>获取或设置 <see cref="T:System.Windows.FontEastAsianLanguage" /> 枚举值，该值指示要用于特定书写系统或语言的标志符号的版本。</summary>
      <returns>一个 <see cref="T:System.Windows.FontEastAsianLanguage" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>获取或设置 <see cref="T:System.Windows.FontEastAsianWidths" /> 枚举值，该值指示成比例的宽度，以使用中文字体中的拉丁语字符。</summary>
      <returns>一个 <see cref="T:System.Windows.FontEastAsianWidths" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontEastAsianWidths.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>获取或设置 <see cref="T:System.Windows.FontFraction" /> 枚举值，该值指示分数样式。</summary>
      <returns>一个 <see cref="T:System.Windows.FontFraction" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontFraction.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>获取或设置一个值，确定是否启用历史记录格式。</summary>
      <returns>true 如果启用了历史记录格式，则否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>获取或设置一个值，该值指示是否启用历史连字。</summary>
      <returns>true 如果启用了历史连字;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>获取或设置一个值，该值指示是否启用字距调整。</summary>
      <returns>true 如果启用字距调整;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>获取或设置一个值，该值指示是否已使用的相应字体格式通常在数学符号中替换希腊语标志符号的标准版式字体格式。</summary>
      <returns>true 如果启用了数学希腊语格式;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>获取或设置 <see cref="T:System.Windows.FontNumeralAlignment" /> 枚举值，该值指示的宽度对齐方式，使用数字时。</summary>
      <returns>一个 <see cref="T:System.Windows.FontNumeralAlignment" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontNumeralAlignment.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>获取或设置 <see cref="T:System.Windows.FontNumeralStyle" /> 枚举值，该值确定的一套用于呈现数字备用字体格式的标志符号。</summary>
      <returns>一个 <see cref="T:System.Windows.FontNumeralStyle" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontNumeralStyle.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>获取或设置一个值，该值指示是否标称零字体格式应替换为前面带有斜线的零。</summary>
      <returns>true 如果斜线零格式已启用;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>获取或设置一个值，该值指示是否启用标准连字。</summary>
      <returns>true 如果启用了标准连字;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>获取或设置一个值，指定标准花体的索引。</summary>
      <returns>标准连接形式花体窗体的索引。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>获取或设置一个值，指定窗体样式替代项的索引。</summary>
      <returns>样式备用项窗体的索引。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。</summary>
      <returns>true 如果启用了字体格式的样式集;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>获取或设置 <see cref="T:System.Windows.FontVariants" /> 枚举值，该值指示要使用的标准版式格式的变体。</summary>
      <returns>一个 <see cref="T:System.Windows.FontVariants" /> 枚举值。 默认值为 <see cref="F:System.Windows.FontVariants.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.DynamicResourceExtension.ResourceKey">
      <summary>获取或设置此动态资源引用由指定的密钥。 该密钥用于通过中间表达式查找资源字典中的资源。</summary>
      <returns>此动态资源引用指定的资源键。</returns>
    </member>
    <member name="P:System.Windows.EventSetter.Event">
      <summary>获取或设置此 <see cref="T:System.Windows.EventSetter" /> 响应的特定路由事件。</summary>
      <returns>路由事件的标识符字段。</returns>
      <exception cref="T:System.InvalidOperationException">尝试对密封 <see cref="T:System.Windows.EventSetter" /> 设置此属性。</exception>
    </member>
    <member name="P:System.Windows.EventSetter.HandledEventsToo">
      <summary>获取或设置一个值，确定是否应该仍可以调用 setter 分配的处理程序，即使事件被标记为已处理其事件数据中。</summary>
      <returns>true 如果仍应调用该处理程序;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.EventSetter.Handler">
      <summary>获取或设置 setter 中的路由事件的处理程序的引用。</summary>
      <returns>对此附加的处理引用 <see cref="T:System.Windows.EventSetter" />。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>获取事件发生时要应用的操作的集合。</summary>
      <returns>默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>获取或设置将激活该触发器的 <see cref="T:System.Windows.RoutedEvent" />。</summary>
      <returns>默认值为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> 属性不能为 null。</exception>
    </member>
    <member name="P:System.Windows.EventTrigger.SourceName">
      <summary>获取或设置对象的名称，该对象具有激活此触发器的事件。 仅元素触发器或模板触发器可使用此名称。</summary>
      <returns>默认值为 null。 如果此属性值是 null，则为引发事件而受到监视的元素是模板化父级或逻辑树的根。</returns>
      <exception cref="T:System.InvalidOperationException">使用 <see cref="T:System.Windows.EventTrigger" /> 之后，无法对其进行修改。</exception>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>获取导致错误情况的异常。</summary>
      <returns>用于详细描述特定错误情况的异常。</returns>
      <exception cref="T:System.Security.SecurityException">尝试访问媒体文件遭到拒绝。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到媒体文件。</exception>
      <exception cref="T:System.IO.FileFormatException">所安装的任何编解码器都不支持此媒体文件格式。- 或 -无法识别此文件格式。</exception>
      <exception cref="T:System.NotSupportedException">未检测到 Windows Media Player 版本 10 或更高版本。- 或 -视频资源不足，无法播放媒体。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">出现 COM 错误代码。</exception>
    </member>
    <member name="P:System.Windows.ExitEventArgs.ApplicationExitCode">
      <summary>获取或设置该应用程序退出时，应用程序返回给操作系统的退出代码。</summary>
      <returns>应用程序退出时，应用程序返回给操作系统的退出代码。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.FigureUnitType">
      <summary>获取 <see cref="P:System.Windows.FigureLength.Value" /> 的单位类型。</summary>
      <returns>单位类型 <see cref="P:System.Windows.FigureLength.Value" />。 默认值为 <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAbsolute">
      <summary>获取一个值，确定是否这 <see cref="T:System.Windows.FigureLength" /> 保存绝对值 （以像素为单位）。</summary>
      <returns>true 如果此 <see cref="T:System.Windows.FigureLength" /> 保存绝对值 （以像素为单位）; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAuto">
      <summary>获取一个值，确定是否这 <see cref="T:System.Windows.FigureLength" /> 是自动的 （未指定）。</summary>
      <returns>true 如果此 <see cref="T:System.Windows.FigureLength" /> 是自动的 （未指定）; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsColumn">
      <summary>获取一个值，确定是否这 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Column" />。</summary>
      <returns>true 如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Column" />; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsContent">
      <summary>获取一个值，确定是否这 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Content" />。</summary>
      <returns>返回 true 如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Content" />; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsPage">
      <summary>获取一个值，确定是否这 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Page" />。</summary>
      <returns>true 如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="T:System.Windows.FigureUnitType" /> 属性值为 <see cref="F:System.Windows.FigureUnitType.Page" />; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.Value">
      <summary>获取此 <see cref="T:System.Windows.FigureLength" /> 的值。</summary>
      <returns>此 <see cref="T:System.Windows.FigureLength" /> 的值。 默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported">
      <summary>获取或设置一个值，该值指示是否应使用该应用程序 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 的非活动的选定项的颜色的属性。</summary>
      <returns>true 如果应用程序应使用 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 属性颜色的停用所选的项; 否则为 false</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty">
      <summary>获取或设置一个值，该值指示是否数据绑定 <see cref="T:System.Windows.Controls.TextBox" /> 等同于源的值将字符串应显示其 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性</summary>
      <returns>true 如果数据绑定 <see cref="T:System.Windows.Controls.TextBox" /> 等同于源的值将字符串应显示其 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure">
      <summary>获取或设置一个值，指示失败的复制或剪切的操作中是否 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />。</summary>
      <returns>true 如果失败的复制或剪切的操作中 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 实例会导致 <see cref="T:System.Runtime.InteropServices.ExternalException" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.BindingGroup">
      <summary>获取或设置 <see cref="T:System.Windows.Data.BindingGroup" /> 所用的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 所用的元素。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ContextMenu">
      <summary>获取或设置每当通过请求的上下文菜单应该显示的上下文菜单元素 用户界面 (UI) 从在此元素中。</summary>
      <returns>此元素使用上下文菜单。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Cursor">
      <summary>获取或设置在鼠标指针位于此元素上时显示的光标。</summary>
      <returns>要显示的光标。 按此依赖属性，默认值定义为 null。 但是，运行时的实际默认值将受到多种因素的影响。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DataContext">
      <summary>获取或设置元素参与数据绑定时的数据上下文。</summary>
      <returns>要用作数据上下文的对象。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DefaultStyleKey">
      <summary>获取或设置要用于查找样式模板对于此控件在主题中的键。</summary>
      <returns>样式键。 为了在主题样式查找正确工作，此值应为 <see cref="T:System.Type" /> 样式的元素。null 是一个可接受的值在某些情况下;请参阅备注。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.FocusVisualStyle">
      <summary>获取或设置一个对象，该对象允许自定义此元素在捕获到键盘焦点时要应用于此元素的外观、效果或其他样式特征。</summary>
      <returns>要应用于焦点的所需样式。 该依赖属性中声明的默认值是一个空的静态 <see cref="T:System.Windows.Style" />。 但是，运行时的有效值通常是（但并非总是）控件的主题支持所提供的样式。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ForceCursor">
      <summary>获取或设置一个值，该值指示是否此 <see cref="T:System.Windows.FrameworkContentElement" /> 应强制 用户界面 (UI) 呈现光标所声明的此实例的 <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 属性。</summary>
      <returns>true 若要强制光标表示通过此元素中使用此实例的设置用于光标 （包括所有子元素上）;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.InputScope">
      <summary>获取或设置此 <see cref="T:System.Windows.FrameworkContentElement" /> 使用的输入的上下文。</summary>
      <returns>解释输入范围，在该输入范围内修改从其他输入法输入的方式。 默认值为 null（这将导致对命令的默认处理）。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsInitialized">
      <summary>获取一个值，该值指示是否此元素已初始化，或者由正在作为加载 可扩展应用程序标记语言 (XAML), ，或通过显式其 <see cref="M:System.Windows.FrameworkContentElement.EndInit" /> 调用方法。</summary>
      <returns>true 如果该元素初始化每个上述加载或方法调用异步方法。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsLoaded">
      <summary>获取一个值，该值指示是否已加载此元素，以便演示文稿。</summary>
      <returns>true 如果当前元素附加到元素树，并且已呈现，则 false 如果该元素永远不会被附加到加载的元素树。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Language">
      <summary>获取或设置应用于单个元素的本地化/全球化语言信息。</summary>
      <returns>此元素的区域性信息。 默认值是一个 <see cref="T:System.Windows.Markup.XmlLanguage" /> 实例，它的 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 值设置为字符串“en-US”。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.LogicalChildren">
      <summary>获取此元素的元素的逻辑子的枚举器。</summary>
      <returns>此元素的逻辑子元素的枚举器。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Name">
      <summary>获取或设置元素的标识名称。 该名称提供实例引用，以便编程代码隐藏（如事件处理程序代码）引用曾在 XAML 的分析过程中构造的元素。</summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle">
      <summary>获取或设置一个值，该值指示此元素是否合并了从主题样式的样式属性。</summary>
      <returns>true 如果此元素不使用主题样式属性;所有源于样式的属性来自本地应用程序样式，并且不适用于主题样式属性。false 如果应用程序样式将优先应用，并且随后主题样式将应用到不在应用程序样式中专门设置的属性。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Parent">
      <summary>获取此元素的逻辑树中的父级。</summary>
      <returns>此元素的逻辑父级。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Resources">
      <summary>获取或设置当前的本地定义的资源字典。</summary>
      <returns>当前的本地定义资源。 这是在字典中的资源键的访问其中的资源的字典。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Style">
      <summary>获取或设置此元素要使用的样式。</summary>
      <returns>若存在，则为此元素适用的非默认样式。 否则为 null。 对于默认构造的 <see cref="T:System.Windows.FrameworkContentElement" />，其默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Tag">
      <summary>获取或设置一个用于存储有关此元素的自定义信息的任意对象值。</summary>
      <returns>预期的值。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.TemplatedParent">
      <summary> 获取对此元素的模板父级的引用。 如果该元素不是通过模板创建的，则此属性无关。</summary>
      <returns>元素的 <see cref="T:System.Windows.FrameworkTemplate" /> <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 导致要创建此元素。 此值通常为 null；请参阅“备注”。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ToolTip">
      <summary>获取或设置为在此元素显示的工具提示对象 用户界面 (UI)。</summary>
      <returns>工具提示的对象。 为什么此参数不强类型的详细信息，请参阅下面备注。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>获取此元素的呈现的高度。</summary>
      <returns>元素的高度，这是中的值 device-independent units (1/96th inch per unit)。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>获取此元素的呈现的宽度。</summary>
      <returns>元素的宽度，这是中的值 device-independent units (1/96th inch per unit)。 默认值为 0 （零）。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.BindingGroup">
      <summary>获取或设置 <see cref="T:System.Windows.Data.BindingGroup" /> 所用的元素。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 所用的元素。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ContextMenu">
      <summary> 获取或设置通过 用户界面 (UI) 从此元素内部请求上下文菜单时应该显示的上下文菜单元素。</summary>
      <returns>分配给此元素的上下文菜单。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>获取或设置在鼠标指针位于此元素上时显示的光标。</summary>
      <returns>要显示的光标。 按此依赖属性，默认值定义为 null。 但是，运行时的实际默认值将受到多种因素的影响。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary> 获取或设置元素参与数据绑定时的数据上下文。</summary>
      <returns>要用作数据上下文的对象。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DefaultStyleKey">
      <summary>获取或设置在使用或定义主题样式时要用于引用此控件样式的键。</summary>
      <returns>样式键。 要作为主题样式查找的一部分正常工作，此值应是带样式的控件的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>获取或设置方向，文本和其他 用户界面 (UI) 元素在任何控制其布局的父元素中都按此方向流动。</summary>
      <returns>文本和其他 UI 元素在它们的父元素中的流动方向，是一个枚举值。 默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.FocusVisualStyle">
      <summary>获取或设置一个属性，该属性允许自定义此元素在捕获到键盘焦点时要应用于此元素的外观、效果或其他样式特征。</summary>
      <returns>要应用于焦点的所需样式。 该依赖属性中声明的默认值是一个空的静态 <see cref="T:System.Windows.Style" />。 但是，运行时的有效值通常是（但并非总是）控件的主题支持所提供的样式。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ForceCursor">
      <summary>获取或设置一个值，该值指示是否此 <see cref="T:System.Windows.FrameworkElement" /> 应强制 用户界面 (UI) 呈现光标所声明的 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 属性。</summary>
      <returns>true 如果光标在此元素上的演示文稿会强制使用当前 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 设置光标 （包括所有子元素上）; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary> 获取或设置元素的建议高度。</summary>
      <returns>元素的高度（以 device-independent units (1/96th inch per unit) 为单位）。 默认值为 <see cref="F:System.Double.NaN" />。 此值必须等于或大于 0.0。 请参阅“备注”以了解上限信息。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>获取或设置在父元素(如 Panel 或项控件)中组合此元素时所应用的水平对齐特征。</summary>
      <returns>水平对齐设置，它是一个枚举值。 默认值为 <see cref="F:System.Windows.HorizontalAlignment.Stretch" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.InheritanceBehavior">
      <summary>获取或设置属性值继承、 资源键查找和 RelativeSource FindAncestor 查找的作用域限制。</summary>
      <returns>枚举的一个值。 默认值为 <see cref="F:System.Windows.InheritanceBehavior.Default" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.InputScope">
      <summary>获取或设置此 <see cref="T:System.Windows.FrameworkElement" /> 使用的输入的上下文。</summary>
      <returns>解释输入范围，在该输入范围内修改从其他输入法输入的方式。 默认值为 null（这将导致对命令的默认处理）。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsInitialized">
      <summary>获取一个值，该值表示该元素是否在由 XAML 处理器进行处理时，或者通过显式调用其 <see cref="M:System.Windows.FrameworkElement.EndInit" /> 方法被初始化。</summary>
      <returns>如果该元素按照前面提到的 XAML 处理或者方法调用已被初始化，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsLoaded">
      <summary>获取一个值，该值指示是否已加载此元素，以便演示文稿。</summary>
      <returns>true 如果当前元素附加到元素树，则 false 如果该元素永远不会被附加到加载的元素树。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>获取或设置应用于某个元素的本地化/全球化语言信息。</summary>
      <returns>此元素的语言信息。 默认值为 <see cref="T:System.Windows.Markup.XmlLanguage" />，它的 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 值设置为字符串 "zh-CN"。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.LayoutTransform">
      <summary> 获取或设置应将应用于此元素时执行布局的图形转换。</summary>
      <returns>转换应使用此元素。 默认值为 <see cref="P:System.Windows.Media.Transform.Identity" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.LogicalChildren">
      <summary> 获取此元素的逻辑子元素的枚举器。</summary>
      <returns>此元素的逻辑子元素的枚举器。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>获取或设置元素的外边距。</summary>
      <returns>提供元素的边距值。 默认值是所有属性都等于 0（零）的 <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>获取或设置元素的最大高度约束。</summary>
      <returns>元素的最大高度（以 device-independent units (1/96th inch per unit) 为单位）。 默认值为 <see cref="F:System.Double.PositiveInfinity" />。 该值可以是等于或大于 0.0 的任何值。<see cref="F:System.Double.PositiveInfinity" /> 也是有效的。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>获取或设置元素的最大宽度约束。</summary>
      <returns>元素的最大宽度，单位是 device-independent units (1/96th inch per unit)。 默认值为 <see cref="F:System.Double.PositiveInfinity" />。 该值可以是等于或大于 0.0 的任何值。<see cref="F:System.Double.PositiveInfinity" /> 也是有效的。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>获取或设置元素的最小高度约束。</summary>
      <returns>在 device-independent units (1/96th inch per unit) 中，元素的最小高度。 默认值为 0.0。 该值可以是等于或大于 0.0 的任何值。 但是，<see cref="F:System.Double.PositiveInfinity" /> 无效，<see cref="F:System.Double.NaN" /> 也无效。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary> 获取或设置元素的最小宽度约束。</summary>
      <returns>元素的最小宽度，单位是 device-independent units (1/96th inch per unit)。 默认值为 0.0。 该值可以是等于或大于 0.0 的任何值。 但是，<see cref="F:System.Double.PositiveInfinity" /> 无效，<see cref="F:System.Double.NaN" /> 也无效。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>获取或设置元素的标识名称。 该名称提供引用，以便代码隐藏（如事件处理程序代码）可以引用标记元素（在 XAML 处理器的处理过程中构造该元素之后）。</summary>
      <returns>元素的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
      <summary>获取或设置一个值，该值指示此元素是否合并了从主题样式的样式属性。</summary>
      <returns>true 如果此元素不使用主题样式属性;所有源于样式的属性来自本地应用程序样式，并且不适用于主题样式属性。false 如果应用程序样式将优先应用，并且随后主题样式将应用到不在应用程序样式中专门设置的属性。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>获取此元素的逻辑父元素。</summary>
      <returns>此元素的逻辑父级。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary> 获取或设置本地定义的资源字典。</summary>
      <returns>资源中当前本地定义的字典，其中的每个资源均可通过键进行访问。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>获取或设置此元素呈现时所使用的样式。</summary>
      <returns>若存在，则为此元素适用的非默认样式。 否则为 null。 对于默认构造的 <see cref="T:System.Windows.FrameworkElement" />，其默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>获取或设置一个用于存储有关此元素的自定义信息的任意对象值。</summary>
      <returns>预期的值。 此属性没有默认值。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.TemplatedParent">
      <summary>获取对此元素的模板父级的引用。 如果该元素不是通过模板创建的，则此属性无关。</summary>
      <returns>元素的 <see cref="T:System.Windows.FrameworkTemplate" /> <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 导致要创建此元素。 此值通常为 null；请参阅“备注”。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ToolTip">
      <summary> 获取或设置为在此元素显示的工具提示对象 用户界面 (UI)。</summary>
      <returns>工具提示的对象。 为什么此参数不强类型的详细信息，请参阅下面备注。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>获取直接在此元素上或在子元素中建立的触发器的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Trigger" /> 对象的强类型集合。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.UseLayoutRounding">
      <summary>获取或设置一个值，该值指示是否应向此元素的大小和位置布局应用布局舍入。</summary>
      <returns>如果应用了布局舍入，则为 true，否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>获取或设置在父元素（如面板或项控件）中组合此元素时所应用的垂直对齐特征。</summary>
      <returns>垂直对齐设置。 默认值为 <see cref="F:System.Windows.VerticalAlignment.Stretch" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.VisualChildrenCount">
      <summary>获取此元素内可视子元素的数目。</summary>
      <returns>此元素内可视子元素的数目。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary> 获取或设置元素的宽度。</summary>
      <returns>元素的宽度（以 device-independent units (1/96th inch per unit) 为单位）。 默认值为 <see cref="F:System.Double.NaN" />。 此值必须等于或大于 0.0。 请参阅“备注”以了解上限信息。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.FirstChild">
      <summary>获取第一个子工厂。</summary>
      <returns>一个 <see cref="T:System.Windows.FrameworkElementFactory" /> 第一个子工厂。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.IsSealed">
      <summary>获取一个值，该值指示此对象是否为不可变状态。</summary>
      <returns>true 如果此对象处于不可变状态;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Name">
      <summary>获取或设置模板项的名称。</summary>
      <returns>模板标识符字符串。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.NextSibling">
      <summary>获取下一个同级工厂。</summary>
      <returns>一个 <see cref="T:System.Windows.FrameworkElementFactory" /> ，它是下一个同级工厂。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Parent">
      <summary>获取父 <see cref="T:System.Windows.FrameworkElementFactory" />。</summary>
      <returns>一个 <see cref="T:System.Windows.FrameworkElementFactory" /> 父工厂。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Text">
      <summary>获取或设置要生成的文本字符串。</summary>
      <returns>要生成的文本字符串。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Type">
      <summary>获取或设置此工厂所生成的对象的类型。</summary>
      <returns>此工厂所生成的对象的类型。</returns>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
      <summary> 获取或设置一个值，该值表示依赖属性是否会影响布局引擎操作期间的排列过程。</summary>
      <returns>如果此元数据所在的依赖属性可能会影响排列过程，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
      <summary> 获取或设置一个值，该值表示依赖属性是否会影响布局引擎操作期间的测量过程。</summary>
      <returns>如果此元数据所在的依赖属性可能会影响测量过程，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
      <summary> 获取或设置一个值，该值表示依赖属性是否会影响布局引擎操作期间父元素布局的排列处理过程。</summary>
      <returns>如果此元数据所在的依赖属性可能会特别影响其父元素上的排列处理过程，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
      <summary> 获取或设置一个值，该值表示依赖属性是否会影响布局引擎操作期间其父元素布局的测量过程。</summary>
      <returns>如果此元数据所在的依赖属性可能会影响其父元素上的测量过程，则为 true；否则为 false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
      <summary>获取或设置一个值，该值指示依赖属性是否会以某种方式（这种方式不会具体影响排列或测量，但将请求重绘）对常规布局造成潜在影响。</summary>
      <returns>如果该元数据所在的依赖属性会影响呈现，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
      <summary> 获取或设置一个值，该值指示默认情况下属性是否双向绑定。</summary>
      <returns>如果此元数据所在的依赖属性默认情况下为双向绑定，则为 true，否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
      <summary>获取或设置的默认值为 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 要使用应用的属性与此元数据绑定时，它具有其 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</summary>
      <returns>一个枚举，比其他值 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</returns>
      <exception cref="T:System.ArgumentException">此属性设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />; 应您设置的值设为默认值的绑定请求。</exception>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Inherits">
      <summary> 获取或设置一个值，该值指示依赖属性的值是否可继承。</summary>
      <returns>如果属性值可继承，则为 true否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
      <summary> 获取一个值，该值指示依赖属性是否支持数据绑定。</summary>
      <returns>如果要应用该元数据的依赖属性支持数据绑定，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
      <summary> 获取或设置一个值，该值指示依赖属性是否支持数据绑定。</summary>
      <returns>如果属性不支持数据绑定，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Journal">
      <summary> 获取或设置一个值，该值表示该属性是否包含应用程序可以或应该作为日记功能实现的一部分而存储的日记信息。</summary>
      <returns>如果应对应用此元数据的依赖属性执行日记记录，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
      <summary>获取或设置一个值，该值指示属性值继承计算是否应跨越元素逻辑树中的某些内容边界。</summary>
      <returns>如果属性值继承应跨越某些内容边界，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
      <summary>获取或设置一个值，该值指示依赖属性的子属性是否影响包含对象的呈现。</summary>
      <returns>如果更改后，对子属性值的更改不影响呈现，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已对依赖属性操作应用了元数据，因此元数据已密封，且无法设置其属性。</exception>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.HasContent">
      <summary>获取一个值，该值指示是否此模板具有优化内容。</summary>
      <returns>true 如果此模板具有优化内容;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.IsSealed">
      <summary>获取一个值，该值指示此对象是否处于不可变状态，因此不能更改。</summary>
      <returns>true 如果此对象处于不可变状态;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Resources">
      <summary>获取或设置此模板的作用域内的可用资源的集合。</summary>
      <returns>可以使用此模板的作用域内的资源。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Template">
      <summary>获取或设置用于录制或播放该模板的 XAML 节点定义或由一位撰稿人应用该模板对象的引用。</summary>
      <returns>对用于录制或播放该模板的 XAML 节点的对象的引用。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.VisualTree">
      <summary>获取或设置模板的根节点。</summary>
      <returns>模板的根节点。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>获取实例 <see cref="T:System.Windows.GridLength" /> 保存其大小由内容对象的大小属性值。</summary>
      <returns>一个实例 <see cref="T:System.Windows.GridLength" /> 其 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性设置为 <see cref="F:System.Windows.GridUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>获取关联 <see cref="T:System.Windows.GridUnitType" /> 为 <see cref="T:System.Windows.GridLength" />。</summary>
      <returns>
        <see cref="T:System.Windows.GridUnitType" /> 值之一。 默认值为 <see cref="F:System.Windows.GridUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.GridLength" /> 保存一个值，以像素为单位表示。</summary>
      <returns>true 如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Pixel" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.GridLength" /> 包含其大小由内容对象的大小属性确定的值。</summary>
      <returns>true 如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Auto" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.GridLength" /> 保存一个值，表示为加权比例的可用空间。</summary>
      <returns>true 如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Star" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>获取 <see cref="T:System.Double" /> 表示值的 <see cref="T:System.Windows.GridLength" />。</summary>
      <returns>一个 <see cref="T:System.Double" /> ，表示当前实例的值。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
      <summary>获取或设置交替项的子项目的容器的数量。</summary>
      <returns>交替项的下一个级别的项的容器的数量。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
      <summary>获取或设置 <see cref="T:System.Windows.Data.BindingGroup" /> 复制到每个子项。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 复制到每个子项。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 应用于每个子项的项容器。</summary>
      <returns>
        <see cref="T:System.Windows.Style" /> 应用于每个子项的项容器。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
      <summary>获取或设置可以应用于每个项容器的样式的自定义样式选择逻辑。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.StyleSelector" /> 来选择将哪种样式用作 <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>获取或设置此数据模板的绑定，该绑定指示在何处可以找到表示数据层次结构中下一级别的集合。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
      <summary>获取或设置一个复合字符串，指定如何设置数据层次结构中的下一个级别中的项的格式，如果显示为字符串。</summary>
      <returns>一个复合字符串，指定如何设置下一级别的数据层次结构中的项的格式，如果显示为字符串。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" /> 将应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性生成 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，以指示如何显示数据层次结构中的下一个级别中的项目。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> 将应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性生成 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，以指示如何显示数据层次结构中的下一个级别中的项目。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 将应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性生成 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，以指示如何选择模板，以显示数据层次结构中的下一个级别中的项目。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象将应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性生成 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，以指示如何选择模板，以显示数据层次结构中的下一个级别中的项目。</returns>
    </member>
    <member name="P:System.Windows.IFrameworkInputElement.Name">
      <summary>获取或设置元素的名称。</summary>
      <returns>元素名称，也不能在名称中是唯一可用作某些操作标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
      <summary>获取或设置一个值，该值指示是否由控件接受回车符。</summary>
      <returns>true 如果接受回车符;否则为 false。  默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
      <summary>获取或设置设置此属性的元素的子级的逻辑控制选项卡导航行为。</summary>
      <returns>控件 tab 键导航发生时，容器移动焦点的方式。  默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
      <summary>获取或设置此属性的元素的子级设置方向导航行为。</summary>
      <returns>发生方向导航时，容器移动焦点的方式。  默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
      <summary>获取或设置一个值，该值指示是否对设置此属性的元素为制表位。</summary>
      <returns>true 如果元素是一个制表位;否则为 false。  默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
      <summary>获取或设置设置此属性的元素的 tab 键索引。</summary>
      <returns>选项卡索引中。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
      <summary>获取或设置设置此属性的元素的子级的逻辑 tab 键导航行为。</summary>
      <returns>当发生 tab 键导航时，容器移动焦点的方式。  默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /> 对调用方法 <see cref="T:System.Windows.Interop.ActiveXHost" /> 实例。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Interop.ActiveXHost" /> 实例已释放; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <summary>返回可用于访问通过其 OLE 容器接口 (例如，IOleClientSite::GetContainer();) 主机浏览器对象引用。</summary>
      <returns>一个对象，可以强制转换为 <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <summary>获取脚本对象，它提供 HTML 页面，HTML 窗口对象、 自定义脚本函数和全局变量的访问，如果 XAML 浏览器应用程序 (XBAP) 承载在一个帧。</summary>
      <returns>如果可以访问的 HTML 页面，HTML 窗口对象、 自定义脚本函数和全局变量的脚本对象 XAML 浏览器应用程序 (XBAP) 托管在范围内; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <summary>获取一个值，指定是否当前 Windows Presentation Foundation (WPF) 应用程序是托管的浏览器。</summary>
      <returns>true 如果应用程序由浏览器承载;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <summary>获取 uniform resource identifier (URI) 从该位置 XAML 浏览器应用程序 (XBAP) 应用程序已启动。</summary>
      <returns>
        <see cref="T:System.Uri" /> 从该位置 XAML 浏览器应用程序 (XBAP) 应用程序已启动; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.Handle">
      <summary>获取所承载的窗口的窗口句柄。</summary>
      <returns>窗口句柄。</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</summary>
      <returns>对容器的引用 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <summary>获取或设置应用程序部署清单的路径。</summary>
      <returns>应用程序的部署清单的路径。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <summary>获取或设置一个值，该值指示这是否表示错误或警告等其他一些情况。true 表示一个错误。</summary>
      <returns>true 表示错误。 false 表示另一个条件，例如一条警告。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorText">
      <summary>获取或设置错误的详细说明。</summary>
      <returns>错误说明。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <summary>获取或设置错误页的字符串标题。</summary>
      <returns>字符串错误页的标题。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <summary>获取或设置一个引用， <see cref="T:System.Windows.Threading.DispatcherOperationCallback" />  处理程序，它可以处理的请求 Microsoft .NET Framework 运行时下载。</summary>
      <returns>一个 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" />  处理程序中，</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <summary>获取或设置的字符串路径的错误日志文件中，如果有的话。</summary>
      <returns>相关联的错误文件路径。 可能为空字符串。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <summary>获取或设置一个引用， <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序中，可以处理错误页的刷新。</summary>
      <returns>一个 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序来处理错误页的刷新。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.SupportUri">
      <summary>获取或设置 uniform resource identifier (URI) 与错误关联的支持信息。</summary>
      <returns>支持信息的链接。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <summary>获取或设置应用程序的名称。</summary>
      <returns>源自进度页的应用程序名称。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <summary>获取或设置 <see cref="T:System.Uri" /> 对应用程序部署清单的路径。</summary>
      <returns>应用程序部署清单的路径。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.PublisherName">
      <summary>获取或设置应用程序的发布服务器。</summary>
      <returns>发布服务器标识字符串。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <summary>获取或设置一个引用， <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序中，可以处理的用户启动的刷新命令的大小写。</summary>
      <returns>回调引用中。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.StopCallback">
      <summary>获取或设置一个引用， <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序中，可以处理的用户启动停止命令的大小写。</summary>
      <returns>回调引用中。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <summary>获取的窗口句柄 Windows Presentation Foundation (WPF) 用于创建此窗口 <see cref="T:System.Windows.Interop.WindowInteropHelper" />。</summary>
      <returns>Windows Presentation Foundation (WPF) 窗口句柄 (HWND)。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <summary>获取或设置的句柄 Windows Presentation Foundation (WPF) 所有者窗口。</summary>
      <returns>所有者窗口句柄 (HWND)。</returns>
    </member>
    <member name="P:System.Windows.Localization.Attributes">
      <summary>获取或设置要进行本地化的资源，比如 <see cref="T:System.Windows.Media.FontFamily" />。</summary>
      <returns>要进行本地化的资源。</returns>
    </member>
    <member name="P:System.Windows.Localization.Comments">
      <summary>获取或设置注释，这些注释是标记作者包含的自由格式文本。</summary>
      <returns>本地化注释。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
      <summary>获取或设置资源的本地化类别。</summary>
      <returns>本地化的类别，作为枚举的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
      <summary>获取或设置与资源关联的本地化注释。</summary>
      <returns>本地化注释字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
      <summary>获取或设置可本地化的内容。</summary>
      <returns>可本地化的内容字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
      <summary>获取或设置一个值，该值指示是否可修改可本地化的资源。</summary>
      <returns>true 如果资源是可修改;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
      <summary>获取或设置资源是否可见的翻译。</summary>
      <returns>true 如果资源是可见的翻译;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
      <summary>获取所声明的定义的可本地化的资源类型的程序集的名称及其 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName" />。</summary>
      <returns>程序集的名称。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
      <summary>获取此类名部分 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</summary>
      <returns>此类名部分 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
      <summary>获取此属性名部分 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</summary>
      <returns>此属性名部分 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
      <summary>获取这些的 Uid 组件 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</summary>
      <returns>这些的 Uid 组件 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
      <summary>获取在可本地化的资源数 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</summary>
      <returns>可本地化的资源数。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象是否具有固定大小。</summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象是否为只读。</summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>获取或设置由键指定的可本地化资源。</summary>
      <param name="key">资源的键值。</param>
      <returns>资源的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
      <summary>获取包含中的所有键的集合 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象。</summary>
      <returns>一个包含对象中的所有键的集合。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
      <summary>如果本地化，请获取根元素的键。</summary>
      <returns>根元素，如果本地化的键。 否则，将值设置为 null。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>集合中项的数目。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对 true 的访问是同步的（线程安全），则为 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionary.Item(System.Object)" />。</summary>
      <param name="key">要获取或设置的项的键。</param>
      <returns>具有指定键的项。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
      <summary>获取包含中的所有值的集合 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</summary>
      <returns>一个包含对象中的所有值的集合。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
      <summary>获取集合中的当前对象。</summary>
      <returns>当前对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
      <summary>获取当前位置 <see cref="T:System.Collections.DictionaryEntry" /> 对象。</summary>
      <returns>一个包含键和当前的位置处的项的值对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
      <summary>获取当前项的键。</summary>
      <returns>当前项的键。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionaryEnumerator.Key" />。</summary>
      <returns>枚举当前元素的键。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionaryEnumerator.Value" />。</summary>
      <returns>枚举当前元素的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IEnumerator#Current">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IEnumerator.Current" />。</summary>
      <returns>集合中的当前元素。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
      <summary>获取当前项的值。</summary>
      <returns>当前项的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
      <summary>获取所遇到的特定错误条件 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />。</summary>
      <returns>错误条件时，遇到 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />, ，作为枚举的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
      <summary>获取生成错误条件的资源关联的键。</summary>
      <returns>程序生成的错误条件的资源相关联的密钥。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
      <summary> 获取或设置关联的元素的可本地化性属性。</summary>
      <returns>关联的元素的可本地化性属性。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
      <summary>获取或设置关联的元素的格式设置标记。</summary>
      <returns>格式设置的标记字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
      <summary>获取或设置包含的 CLR 命名空间中的类型的程序集名称。</summary>
      <returns>程序集名称。</returns>
      <exception cref="T:System.ArgumentNullException">值 <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName" /> 正在设置到 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
      <summary>获取或设置包含要映射的类型的 CLR 命名空间。</summary>
      <returns>CLR 命名空间。</returns>
      <exception cref="T:System.ArgumentNullException">值 <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace" /> 正在设置到 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
      <summary>获取或设置映射到的 XML 命名空间的映射前缀。</summary>
      <returns>XML 命名空间映射前缀。</returns>
      <exception cref="T:System.ArgumentNullException">值 <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace" /> 正在设置到 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.BaseUri">
      <summary>获取或设置此上下文中的基 URI。</summary>
      <returns>基 URI，为字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
      <summary>获取或设置 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 用于与此 <see cref="T:System.Windows.Markup.ParserContext" />。</summary>
      <returns>将 XAML 元素映射到 CLR 类型时要使用类型映射器。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlLang">
      <summary>获取或设置 xml:lang 此上下文中的字符串。</summary>
      <returns>xml:lang 的字符串值。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
      <summary>获取此 XAML 分析器上下文 XAML 命名空间字典。</summary>
      <returns>XAML 命名空间字典。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlSpace">
      <summary>获取或设置用于字符 xml:space 或此上下文。</summary>
      <returns>对于字符 xml:space 或此上下文。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
      <summary>获取或设置 XAML 编写器模式。</summary>
      <returns>XAML 编写器模式。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">不是有效的成员 <see cref="T:System.Windows.Markup.XamlWriterMode" /> 枚举。</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.BaseUri">
      <summary>获取基 URI 信息，当引发异常。</summary>
      <returns>分析器上下文基 URI。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.KeyContext">
      <summary>获取或设置项的键的值在字典中发生异常。</summary>
      <returns>相关的 XAML x:Key 值。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>获取发生了异常的行号。</summary>
      <returns>行号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>获取发生了异常的行中的位置。</summary>
      <returns>行位置。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.NameContext">
      <summary>获取或设置该对象的 XAML 名称发生了异常。</summary>
      <returns>XAML 对象的名称。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.UidContext">
      <summary>获取或设置 x:Uid Directive 发生了异常的对象。</summary>
      <returns>值 Uid 字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
      <summary>获取实例 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 使用如果尚未指定。</summary>
      <returns>默认类型映射器。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
      <summary>获取或设置一个附加的属性值，通过为 WPF XAML 分析器来存储使用的 XML 命名空间映射 .NET Framework 3.0 和 .NET Framework 3.5。</summary>
      <returns>以字符串形式的 XML 命名空间映射。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
      <summary>获取或设置附加的属性值，用于存储 xmlns 定义以供使用的 WPF XAML 分析器 .NET Framework 3.0 和 .NET Framework 3.5。</summary>
      <returns>xmlns 以字符串形式的定义。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
      <summary>获取或设置附加的属性值，用于存储 xmlns 字典中是否存在有关 WPF XAML 分析器使用的 .NET Framework 3.0 和 .NET Framework 3.5。</summary>
      <returns>附加的属性值，用于存储 xmlns 字典。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
      <summary>获取或设置的映射的值 xml:space 属性。</summary>
      <returns>要用作字符串 xml:space。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Count">
      <summary>获取在项数 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的项数。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
      <summary>获取一个值，该值指示是否的大小 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 固定的。</summary>
      <returns>true 如果大小固定的;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 是否为只读。</summary>
      <returns>如果字典是只读的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
      <summary>获取一个值，该值指示是否对此访问 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 是线程安全的。</summary>
      <returns>true 如果对此字典的访问是线程安全的。否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
      <summary>获取或设置与指定的前缀关联 URI 的 XAML 命名空间。</summary>
      <param name="prefix">从中获取或设置关联的 XML 命名空间 URI 前缀。</param>
      <returns>相应 XAML 命名空间 URI 中。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> 不是字符串- 或 -要设置的值不是字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null- 或 -值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
      <summary>获取或设置与指定的前缀关联 URI 的 XAML 命名空间。</summary>
      <param name="prefix">从中获取或设置关联的命名空间前缀。</param>
      <returns>相应 XML 命名空间 URI 中。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null- 或 -值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
      <summary>获取集合中的所有键 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <returns>在字典中的所有键的集合。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 都密封的。</summary>
      <returns>true 如果字典密封的;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Values">
      <summary>获取集合中的所有值的 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <returns>中的所有值的集合 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
      <summary> 获取 visual 发生了点击。</summary>
      <returns>可视化对象发生了点击。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
      <summary>获取或设置正确的提交行为以启动此情节提要中的动画时钟 </summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 枚举值之一。 默认值为 <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 对象的名称。 通过命名 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 对象，可在 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 启动后对其进行控制。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 的名称。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
      <summary>获取或设置将你想要的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 启动为交互式控制的 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 的 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" />。</summary>
      <returns>将你想要的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 启动为交互式控制的 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 的 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction">
      <summary>获取或设置应用于该关键帧的缓动函数。</summary>
      <returns>应用于该关键帧的缓动函数。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
      <summary>获取或设置情节提要应从查找源 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> 向前或向后移动的量。 。</summary>
      <returns>用于指定量的正数或负数值，该量表示情节提要应从查找源 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> 向前或向后移动的量。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
      <summary>获取或设置应用此查找操作的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 的开始位置。</summary>
      <returns>应用此查找操作的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 的开始位置。 默认值为 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
      <summary>获取或设置一个新 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 动画速度与旧的动画速度的比率。</summary>
      <returns>速度比 <see cref="T:System.Windows.Media.Animation.Storyboard" />。 默认值为 1.0。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
      <summary>获取或设置两个控制点，它们定义此关键帧的动画进度。</summary>
      <returns>指定了定义关键帧进度的三次方贝塞尔曲线的两个控制点。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Target">
      <summary>获取或设置应进行动画处理的对象。</summary>
      <returns>要进行动画处理的对象。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>获取或设置要进行动画处理的对象的名称。 该对象必须是 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" />。</summary>
      <returns>要进行动画处理的 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" /> 的名称。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>获取或设置应进行动画处理的属性。</summary>
      <returns>要进行动画处理的属性。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
      <summary> 获取或设置动画更改其起始值所依据的总数。</summary>
      <returns>动画更改其起始值所依据的总数。     默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction">
      <summary>获取或设置应用于此动画的缓动函数。</summary>
      <returns>应用于此动画的缓动函数。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
      <summary>  获取或设置动画的起始值。</summary>
      <returns>动画的起始值。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
      <summary>获取或设置一个值，该值指示是否应将目标属性的当前值添加到此动画的起始值。</summary>
      <returns>如果应将目标属性的当前值添加到此动画的起始值，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
      <summary> 获取或设置一个值，该值指定动画重复时是否累计该动画的值。</summary>
      <returns>如果动画的属性 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 使其重复播放时，动画将其取值进行累积，则为 true。 否则为 False。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
      <summary> 获取或设置动画的结束值。</summary>
      <returns>动画的结束值。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
      <summary>获取此动画生成的值的类型。</summary>
      <returns>此动画生成的值的类型。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
      <summary>获取一个值，该值指定动画的输出值是否添加到正进行动画处理的属性的基值。</summary>
      <returns>如果该动画将其输出值添加到正进行动画处理的基值（而不是替换它），则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
      <summary>获取或设置一个值，该值指定动画重复时是否累计该动画的值。</summary>
      <returns>如果动画的属性 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 使其重复播放时，动画将其取值进行累积，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
      <summary> 获取或设置定义动画的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象的集合。</summary>
      <returns>定义动画的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象的集合。 默认值为 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>获取或设置与此动画序列关联 P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames 的有序的集合。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> 的 <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
      <summary> 获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 的时间。</summary>
      <returns>关键帧的当前值所处的时间应该等于其 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 属性。 默认值为 <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>获取或设置与关联的值 <see cref="T:System.Windows.Media.Animation.KeyTime" /> 实例。</summary>
      <returns>此属性的当前值。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
      <summary> 获取或设置关键帧的目标值。</summary>
      <returns>关键帧的目标值，该值是此关键帧在其指定的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 处的值。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
      <summary>获取中包含的关键帧的数量 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</summary>
      <returns>中包含的关键帧的数量 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
      <summary> 获取空 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</summary>
      <returns>一个空 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
      <summary>获取一个值，该值指示集合大小是否可以更改。</summary>
      <returns>如果集合被冻结，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
      <summary> 获取指示集合是否为只读的值。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
      <summary>获取一个值，该值指示对集合的访问是否同步（线程安全）。</summary>
      <returns>如果对集合的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 指定的索引位置处。</summary>
      <param name="index">要获取或设置的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 的从零开始的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</returns>
      <exception cref="T:System.InvalidOperationException">修改集合的尝试无效，因为集合被冻结（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count" />。</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
      <summary> 获取可用于同步对集合的访问的对象。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">要获取或设置的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextFormattingMode">
      <summary>获取 <see cref="T:System.Windows.Media.TextFormattingMode" /> 元素。 这是一个附加的属性。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextFormattingMode" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>获取 <see cref="T:System.Windows.Media.TextHintingMode" /> 元素。 这是一个附加的属性。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextHintingMode" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextRenderingMode">
      <summary>集 <see cref="T:System.Windows.Media.TextRenderingMode" /> 元素。 这是一个附加的属性。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextRenderingMode" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterType">
      <summary>获取引发的脚本命令类型。</summary>
      <returns>脚本命令所引发的类型。</returns>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterValue">
      <summary>获取与脚本命令类型相关联的参数。</summary>
      <returns>与脚本命令类型相关的参数。</returns>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Conditions">
      <summary>获取 <see cref="T:System.Windows.Condition" /> 对象的集合。 对属性值更改时满足集合中的所有条件应用。</summary>
      <returns>
        <see cref="T:System.Windows.Condition" /> 对象的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Setters">
      <summary>获取一套 <see cref="T:System.Windows.Setter" /> 这些对象描述的属性值时要应用的所有条件 <see cref="T:System.Windows.MultiDataTrigger" /> 满足。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> 对象的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.MultiTrigger.Conditions">
      <summary>获取 <see cref="T:System.Windows.Condition" /> 对象的集合。 对属性值更改时满足所有集合中的条件时应用。</summary>
      <returns>默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.MultiTrigger.Setters">
      <summary>获取一套 <see cref="T:System.Windows.Setter" /> 对象，描述的属性值时要应用的条件的所有 <see cref="T:System.Windows.MultiTrigger" /> 满足。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
      <summary>在导航历史记录中存储的内容的名称。 值 <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> 显示从 <see cref="T:System.Windows.Navigation.NavigationWindow" />, ，<see cref="T:System.Windows.Controls.Frame" />, ，和 Windows Internet Explorer 7 导航 UI。</summary>
      <returns>
        <see cref="T:System.String" /> 导航历史记录中存储的内容的名称。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>获取 uniform resource identifier (URI) 片段。</summary>
      <returns>URI 片段。 如果将该属性设置为空字符串，将默认导航到内容的顶部。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
      <summary>获取或设置指示是否已对片段导航进行了处理的值。</summary>
      <returns>如果已对导航进行了处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
      <summary>引发 <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> 事件的导航器。</summary>
      <returns>一个 <see cref="T:System.Object" /> ，是指导航器 (Internet Explorer, ，<see cref="T:System.Windows.Navigation.NavigationWindow" />, ，<see cref="T:System.Windows.Controls.Frame" />。) 正在导航到内容片段。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
      <summary>获取或设置 <see cref="T:System.Windows.Navigation.CustomContentState" /> 与此日志条目相关联的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> 与此日志条目相关联的对象。 如果不相关联， null 返回。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
      <summary>获取或设置一个值，该值指示是否日志项的内容是保留还是在导航历史记录中导航到时重新创建。</summary>
      <returns>true 如果导航历史记录; 中保留内容否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Name">
      <summary>获取或设置日志条目的名称。</summary>
      <returns>日志条目的名称。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Source">
      <summary>获取或设置导航到的内容的 URI。</summary>
      <returns>导航到，内容的 URI 或 null 没有 URI 是否与此项关联。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
      <summary>获取或设置一个值，指定是否的一项是后退导航历史记录，前进导航历史记录，或为导航器的当前内容。</summary>
      <returns>一个 <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> 值，该值指定是否的一项是后退导航历史记录，前进导航历史记录，或为导航器的当前内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
      <summary>获取要导航到的内容对象的引用。</summary>
      <returns>一个 <see cref="T:System.Object" /> 为; 否则为要导航的内容对象引用 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
      <summary>获取和设置 <see cref="T:System.Windows.Navigation.CustomContentState" /> 与正在从中导航页上的后退导航历史记录条目相关联的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> 与正在从中导航页上的后退导航历史记录条目相关联的对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
      <summary>获取可选数据 <see cref="T:System.Object" /> 导航开始时传递。</summary>
      <returns>可选数据 <see cref="T:System.Object" /> 导航开始时传递。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>指示是否导航器 (<see cref="T:System.Windows.Navigation.NavigationWindow" />, ，<see cref="T:System.Windows.Controls.Frame" />) 由指定 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> 进行此导航，或是否父导航器正在进行此操作。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，该值是 true 如果由指定的导航器 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> 进行此导航。 否则为 false 返回，如像在嵌套 <see cref="T:System.Windows.Controls.Frame" /> 导航。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>获取一个 <see cref="T:System.Windows.Navigation.NavigationMode" /> 值，该值指示所发生导航的类型。</summary>
      <returns>一个 <see cref="T:System.Windows.Navigation.NavigationMode" /> 值，该值指示所发生导航类型。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
      <summary>引发此事件的导航器。</summary>
      <returns>
        <see cref="T:System.Object" /> ，它是引发此事件的导航器</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
      <summary>获取 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，它是要应用于导航到的内容。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，它是要应用于导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>获取要导航到的内容的 uniform resource identifier (URI)。</summary>
      <returns>要导航到的内容的 <see cref="T:System.Uri" />。 如果导航到对象，则 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri" /> 为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
      <summary>获取 <see cref="T:System.Net.WebRequest" /> 用于请求指定的内容的对象。</summary>
      <returns>获取 <see cref="T:System.Net.WebRequest" /> 用于请求指定的内容的对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>获取目标页面内容的根节点。</summary>
      <returns>目标页面内容的根元素。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
      <summary>获取一个可选用户定义数据对象。</summary>
      <returns>数据对象中。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>获取一个值，该值指示当前导航器是否启动了导航。</summary>
      <returns>true 如果在当前帧; 内启动导航， false 如果父导航器也正在进行导航。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Navigator">
      <summary>获取引发该事件的导航器 </summary>
      <returns>引发事件的导航器。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>获取目标页的 uniform resource identifier (URI)。</summary>
      <returns>目标页的 URI。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.WebResponse">
      <summary>获取以允许访问 HTTP 标头和其他属性的 Web 响应。</summary>
      <returns>将 Web 响应。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>获取 <see cref="T:System.Exception" /> 失败导航的结果而引发。</summary>
      <returns>
        <see cref="T:System.Exception" /> 失败导航的结果而引发。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
      <summary>获取可选数据 <see cref="T:System.Object" /> 导航开始时传递。</summary>
      <returns>可选数据 <see cref="T:System.Object" /> 导航开始时传递。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>获取或设置是否已处理的导航失败的异常。</summary>
      <returns>true 如果处理了异常。否则为 false （默认值）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
      <summary>引发此事件的导航器。</summary>
      <returns>
        <see cref="T:System.Object" /> ，它是引发此事件的导航器</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>获取 uniform resource identifier (URI) 无法导航到的内容。</summary>
      <returns>
        <see cref="T:System.Uri" /> 无法导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
      <summary>获取用于请求指定的内容的 web 请求。</summary>
      <returns>获取 <see cref="T:System.Net.WebRequest" /> 用于请求指定的内容的对象。 导航到对象，如果 <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> 是 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
      <summary>获取正在尝试下载请求后，返回的 web 响应为指定的内容。</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> ，尝试下载请求后，返回指定的内容。 如果导航失败， <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> 是 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
      <summary>获取已读取的字节数。</summary>
      <returns>已读取的字节数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
      <summary>获取最大字节数。</summary>
      <returns>最大字节数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Navigator">
      <summary>获取引发该事件的导航器 </summary>
      <returns>引发事件的导航器</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
      <summary>获取目标页的 uniform resource identifier (URI)。</summary>
      <returns>目标页的 URI。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>获取一个值，该值指示导航历史记录中是否有至少一个条目。</summary>
      <returns>true 如果在后退导航历史记录; 中没有至少一个条目否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>获取一个值，该值指示在前进导航历史记录中是否具有至少一个条目。</summary>
      <returns>true 如果在前进导航历史记录; 中没有至少一个条目否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Content">
      <summary>获取或设置包含当前内容对象的引用。</summary>
      <returns>一个对象，它包含当前内容对象的引用。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>获取 uniform resource identifier (URI) 上次导航到的内容。</summary>
      <returns>一个 <see cref="T:System.Uri" /> 的内容，如果使用导航到上一次中, 导航 URI; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>获取或设置 uniform resource identifier (URI) 的当前内容，或 URI 当前导航到的新内容。</summary>
      <returns>一个 <see cref="T:System.Uri" /> ，其中包含 URI 当前内容，或当前导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
      <summary>获取 <see cref="T:System.Collections.IEnumerable" /> 用于枚举后退导航历史记录中的条目 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 如果添加了至少一个条目后退导航历史记录或 null 如果没有条目或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
      <summary>获取一个值，该值指示导航历史记录中是否有至少一个条目。</summary>
      <returns>true 如果在后退导航历史记录; 中没有至少一个条目 false 如果后退导航历史记录中没有任何条目或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
      <summary>获取一个值，该值指示在前进导航历史记录中是否具有至少一个条目。</summary>
      <returns>true 如果在前进导航历史记录; 中没有至少一个条目 false 如果前进导航历史记录中没有任何条目或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
      <summary>获取 uniform resource identifier (URI) 上次导航到的内容。</summary>
      <returns>URI 的内容，如果使用导航到上一次中, 导航 URI; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
      <summary>获取 <see cref="T:System.Collections.IEnumerable" /> 用于枚举后退导航历史记录中的条目 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 如果没有条目是否至少一个条目已添加到前进导航历史记录，则为 null 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 不拥有其自己的导航历史记录。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.NavigationService">
      <summary>获取 <see cref="T:System.Windows.Navigation.NavigationService" /> ，它由这 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 来提供对其内容导航服务。</summary>
      <returns>由此所使用的导航服务 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 隔离外部 可扩展应用程序标记语言 (XAML) 内容在部分信任安全沙盒中 （使用默认 Internet 区域权限集）。  </summary>
      <returns>true 如果内容中被隔离的部分信任安全沙盒;否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 当在部分信任环境中执行应用程序设置。</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 显示其导航 UI。  </summary>
      <returns>true 如果导航 UI 显示; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.Source">
      <summary>获取或设置 uniform resource identifier (URI) 的当前内容，或 URI 当前导航到的新内容。  </summary>
      <returns>URI 当前内容，或当前导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前上下文的基统一资源标识符 (URI)。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
      <summary>获取或设置一个值，该值指示是否不应将页面函数添加到导航历史记录。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> ，该值指示是否不应将页面函数添加到导航历史记录。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
      <summary>将承载的内容中，导航到导航。</summary>
      <returns>导航器 (<see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Frame" />) 将承载导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
      <summary>uniform resource identifier (URI) 要导航到的内容。</summary>
      <returns>URI 要导航到的内容。</returns>
    </member>
    <member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
      <summary>获取或设置由页函数返回的值。</summary>
      <returns>返回页函数的值。</returns>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>获取或设置描述的路径的字符串。</summary>
      <returns>描述该路径的字符串。</returns>
    </member>
    <member name="P:System.Windows.PropertyPath.PathParameters">
      <summary>获取要在路径指向的索引的参数时使用参数的列表。</summary>
      <returns>参数列表中。</returns>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
      <summary>获取应将在响应该事件中可见的对象。</summary>
      <returns>调用的对象 <see cref="M:System.Windows.FrameworkElement.BringIntoView" />。</returns>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
      <summary>获取应公开可见的对象的坐标空间中的矩形区域。</summary>
      <returns>请求的矩形空间。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>获取基中的条目数 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <returns>基字典中的条目的当前数目。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.DeferrableContent">
      <summary>获取或设置此资源字典可推迟的内容。</summary>
      <returns>始终返回 null。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>获取是否这 <see cref="T:System.Windows.ResourceDictionary" /> 具有固定大小。</summary>
      <returns>true 如果哈希表具有固定大小;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>获取是否这 <see cref="T:System.Windows.ResourceDictionary" /> 是只读的。</summary>
      <returns>true 如果哈希表是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary> 获取或设置与给定的键关联的值。</summary>
      <param name="key">要获取或设置所需的密钥。</param>
      <returns>密钥的值。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>获取集合中包含的所有键 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <returns>所有键的集合。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>获取一套 <see cref="T:System.Windows.ResourceDictionary" /> 构成合并字典中的各种资源字典的字典。</summary>
      <returns>合并的字典的集合。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>获取或设置要从中加载资源的 uniform resource identifier (URI)。</summary>
      <returns>外部资源字典的源位置。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>true 如果访问 <see cref="T:System.Windows.ResourceDictionary" /> 是同步 （线程安全）; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可以用于对访问进行同步的对象 <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>基 URI 的当前上下文。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary> 获取包含在此键与相关联的所有值的集合 <see cref="T:System.Windows.ResourceDictionary" />。</summary>
      <returns>所有值的集合。</returns>
    </member>
    <member name="P:System.Windows.ResourceKey.Assembly">
      <summary>获取指示哪个程序集的字典，以查找与此项关联的值的程序集对象。</summary>
      <returns>检索的程序集，作为反射类。</returns>
    </member>
    <member name="P:System.Windows.ResourceReferenceKeyNotFoundException.Key">
      <summary>获取键未找到并导致引发异常。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary> 获取或设置流的内容类型。</summary>
      <returns>Multipurpose Internet Mail Extensions (MIME) 内容类型。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary> 获取或设置资源的实际的流。</summary>
      <returns>用于该资源的流。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>按照属性更改事件的报告获取属性的新值。</summary>
      <returns>泛型的值。 在实际实现的 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, ，此属性的泛型类型将被替换为受约束的实现类型。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>按照属性更改事件的报告获取属性的以前值。</summary>
      <returns>泛型的值。 在实际实现的 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, ，此属性的泛型类型将被替换为受约束的实现类型。</returns>
    </member>
    <member name="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding">
      <summary>获取一个值，该值指示会话结束的原因。</summary>
      <returns>一个 <see cref="T:System.Windows.ReasonSessionEnding" /> 值，该值指示会话结束的原因。</returns>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>获取或设置的属性与其 <see cref="P:System.Windows.Setter.Value" /> 将应用。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyProperty" /> 到 <see cref="P:System.Windows.Setter.Value" /> 将应用。 默认值为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Setter.Property" /> 属性不能为 null。</exception>
      <exception cref="T:System.ArgumentException">指定 <see cref="P:System.Windows.Setter.Property" /> 属性不能为只读的。</exception>
      <exception cref="T:System.InvalidOperationException">如果指定 <see cref="P:System.Windows.Setter.Value" /> 不是有效的指定类型的有效 <see cref="P:System.Windows.Setter.Property" />。</exception>
    </member>
    <member name="P:System.Windows.Setter.TargetName">
      <summary>获取或设置对象的名称，此 <see cref="T:System.Windows.Setter" /> 旨在用于。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>获取或设置要应用于指定此属性的值 <see cref="T:System.Windows.Setter" />。</summary>
      <returns>默认值为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
      <exception cref="T:System.ArgumentException">如果指定 <see cref="P:System.Windows.Setter.Value" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>获取一个值，该值指示此对象是否为不可变状态。</summary>
      <returns>true 如果此对象处于不可变状态;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>获取一个值，该值指示此对象是否处于只读状态。</summary>
      <returns>true 如果此对象处于只读状态，并且不能更改;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
      <summary>获取的任何值 <see cref="P:System.Windows.Media.Transform.Identity" /> 转换应用于 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Ellipse" /> 呈现之前。</summary>
      <returns>任何值 <see cref="P:System.Windows.Media.Transform.Identity" /> 转换应用于 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Ellipse" /> 呈现之前。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
      <summary>获取最终呈现 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Ellipse" />。</summary>
      <returns>最终呈现 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Ellipse" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>获取或设置的 x 坐标 <see cref="T:System.Windows.Shapes.Line" /> 启动点。</summary>
      <returns>直线起点的 x 坐标。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 终点的 x 坐标。</summary>
      <returns>直线终点的 x 坐标。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 起始点的 y 坐标。</summary>
      <returns>直线的起始点的 y 坐标。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 终结点的 y 坐标。</summary>
      <returns>该线条终结点的 y 坐标。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>获取或设置用于指定所要绘制的形状的 <see cref="T:System.Windows.Media.Geometry" /></summary>
      <returns>所要绘制的形状的描述。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>获取或设置指定如何确定形状内部填充的 <see cref="T:System.Windows.Media.FillRule" /> 枚举。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 枚举值之一。 默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>获取或设置一个集合，它包含多边形的顶点。</summary>
      <returns>
        <see cref="T:System.Windows.Point" /> 结构的集合，用于描述多边形的顶点。 默认为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>获取或设置指定如何确定形状内部填充的 <see cref="T:System.Windows.Media.FillRule" /> 枚举。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 枚举值之一。 默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>获取或设置包含 <see cref="T:System.Windows.Shapes.Polyline" /> 的顶点的集合。</summary>
      <returns>用于描述 <see cref="T:System.Windows.Shapes.Polyline" /> 的顶点的 <see cref="T:System.Windows.Point" /> 结构的集合。 默认为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
      <summary>获取 <see cref="T:System.Windows.Media.Transform" /> 应用到此 <see cref="T:System.Windows.Shapes.Rectangle" />。</summary>
      <returns>应用到此转换 <see cref="T:System.Windows.Shapes.Rectangle" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>获取或设置令矩形边角改为圆角的椭圆半径( X 轴)。</summary>
      <returns>用于使矩形的角变圆的椭圆的 x 轴半径。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>获取或设置令矩形边角改为圆角的椭圆半径(Y 轴)。</summary>
      <returns>用于令矩形的边角改为圆角的椭圆 Y 轴半径。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
      <summary>获取 <see cref="T:System.Windows.Media.Geometry" /> 对象，表示最终呈现的形状。</summary>
      <returns>最终呈现的形状。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
      <summary>获取一个值，表示 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Shape" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" />，它指定形状内部上色的方式。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它描述形状内部绘制的方式。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>获取一个值，表示 <see cref="T:System.Windows.Media.Transform" /> 被应用到的几何图形 <see cref="T:System.Windows.Shapes.Shape" /> 之前进行绘制时。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Transform" /> 被应用到的几何图形 <see cref="T:System.Windows.Shapes.Shape" /> 之前进行绘制时。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
      <summary>获取一个值，表示最终呈现 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Shape" />。</summary>
      <returns>最终呈现 <see cref="T:System.Windows.Media.Geometry" /> 的 <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Stretch" /> 枚举值，该值描述形状如何填充为其分配的空间。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 枚举值之一。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" />，用于指定 <see cref="T:System.Windows.Shapes.Shape" /> 边框绘制的方式。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，用于指定 <see cref="T:System.Windows.Shapes.Shape" /> 边框绘制的方式。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>获取或设置的集合 <see cref="T:System.Double" /> 值，用于指示用于勾勒形状轮廓的短划线和间隙的模式。</summary>
      <returns>一套 <see cref="T:System.Double" /> 指定的短划线和间隙的模式的值。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>获取或设置 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值，该值指定如何绘制虚线的末端。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 的一个枚举值。 默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>获取或设置 <see cref="T:System.Double" /> ，它指定短划线模式内短划线开始处的距离。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示短划线模式内短划线开始处的距离。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>获取或设置描述线的末端的 <see cref="T:System.Windows.Shapes.Shape" /> 的 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 的一个枚举值。 默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>获取或设置 <see cref="T:System.Windows.Media.PenLineJoin" /> 枚举值，该值指定在 <see cref="T:System.Windows.Shapes.Shape" /> 的顶点处使用的联接类型。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineJoin" /> 的一个枚举值。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>获取或设置一个限制到一半的斜接长度比 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 的 <see cref="T:System.Windows.Shapes.Shape" /> 元素。</summary>
      <returns>斜接长度与之比限制 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 的 <see cref="T:System.Windows.Shapes.Shape" /> 元素。 此值始终为大于或等于 1 的正数。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>获取或设置在 <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 开头部分描述 <see cref="T:System.Windows.Shapes.Shape" /> 的 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值之一。 默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Shape" /> 边框的宽度。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItem.CustomCategory">
      <summary>获取或设置的类别名称 <see cref="T:System.Windows.Shell.JumpItem" /> 进行分组所依据在 Windows 7 任务栏跳转列表。</summary>
      <returns>类别的名称 <see cref="T:System.Windows.Shell.JumpItem" /> 分组在一起。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectedItems">
      <summary>获取无法通过 Windows 外壳程序添加到跳转列表的跳转列表项的列表。</summary>
      <returns>无法通过 Windows 外壳程序添加到跳转列表的跳转列表项的列表。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectionReasons">
      <summary>获取的原因无法将被拒绝的跳转列表项添加到跳转列表的列表。</summary>
      <returns>无法将被拒绝的跳转列表项添加到跳转列表的原因的列表。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRemovedEventArgs.RemovedItems">
      <summary>获取已删除用户自以来的跳转列表项的列表 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 上次调用方法。</summary>
      <returns>已移除由用户自以来的跳转列表项的列表 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 上次调用方法。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.JumpItems">
      <summary>获取的集合 <see cref="T:System.Windows.Shell.JumpItem" /> 跳转列表中显示的对象。</summary>
      <returns>集合 <see cref="T:System.Windows.Shell.JumpItem" /> 跳转列表中显示的对象。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
      <summary>获取或设置一个值，该值指示是否跳转列表中显示经常使用的项目。</summary>
      <returns>true 如果经常使用的项目显示在跳转列表;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowRecentCategory">
      <summary>获取或设置一个值，该值指示是否跳转列表中显示最近使用的项。</summary>
      <returns>true 如果最近使用的项显示在跳转列表;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpPath.Path">
      <summary>获取或设置要包含在跳转列表中的文件的路径。</summary>
      <returns>要跳转列表中包含的文件路径。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.ApplicationPath">
      <summary>获取或设置该应用程序的路径。</summary>
      <returns>应用程序的路径。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Arguments">
      <summary>获取或设置在启动时传递给应用程序的参数。</summary>
      <returns>在启动时传递给应用程序的参数。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Description">
      <summary>获取或设置通过跳转列表中的任务的工具提示中显示的文本。</summary>
      <returns>该任务的工具提示中显示的文本。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourceIndex">
      <summary>获取或设置嵌入资源中的图标的从零开始索引。</summary>
      <returns>该图标或如果使用无图标，则为-1 的从零开始的索引。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourcePath">
      <summary>获取或设置包含要在跳转列表中显示的图标的资源的路径。</summary>
      <returns>包含图标资源的路径。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Title">
      <summary>获取或设置为跳转列表中的任务显示的文本。</summary>
      <returns>通过跳转列表中的任务显示的文本。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.WorkingDirectory">
      <summary>获取或设置在启动应用程序的工作目录。</summary>
      <returns>在启动应用程序的工作目录。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Description">
      <summary>获取或设置任务栏项工具提示文本。</summary>
      <returns>任务栏项工具提示文本。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Overlay">
      <summary>获取或设置任务栏按钮中的程序图标上显示的图像。</summary>
      <returns>任务栏按钮中的程序图标上方显示的图像。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressState">
      <summary>获取或设置一个值，该值指示进度指示器任务栏按钮中的显示方式。</summary>
      <returns>枚举值，该值指示进度指示器任务栏按钮中的显示方式。 默认值为 <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue">
      <summary>获取或设置一个值，指示任务栏按钮中的进度指示器的填充度。</summary>
      <returns>一个值，指示任务栏按钮中的进度指示器的填充度。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
      <summary>获取或设置的集合 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 与之关联的对象 <see cref="T:System.Windows.Window" />。</summary>
      <returns>集合 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 与之关联的对象 <see cref="T:System.Windows.Window" />。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
      <summary>获取或设置一个值，指定应用程序窗口的任务栏缩略图中显示的客户端区域的一部分。</summary>
      <returns>一个值，指定应用程序窗口的任务栏缩略图中显示的客户端区域的一部分。 默认值为空 <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Command">
      <summary>获取或设置单击此缩略图按钮时要调用的命令。</summary>
      <returns>单击此缩略图按钮时要调用该命令。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter">
      <summary>获取或设置要传递给参数 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 属性。</summary>
      <returns>要传递给参数 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 属性。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget">
      <summary>获取或设置要对其引发指定的命令的元素。</summary>
      <returns>要引发指定的命令对其元素。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Description">
      <summary>获取或设置要显示的缩略图按钮工具提示的文本。</summary>
      <returns>要为缩略图按钮工具提示显示的文本。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
      <summary>获取或设置一个值，指示任务栏缩略图关闭时单击缩略图按钮。</summary>
      <returns>true 如果关闭缩略图;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.ImageSource">
      <summary>获取或设置该缩略图按钮显示的图像。</summary>
      <returns>在缩略图按钮显示的图像。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
      <summary>获取或设置一个值，该值指示是否缩略图按钮周围显示边框并突出显示。</summary>
      <returns>true 如果缩略图按钮; 周围显示边框并突出显示，否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled">
      <summary>获取或设置一个值，该值指示是否启用缩略图按钮。</summary>
      <returns>true 如果启用了缩略图按钮;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive">
      <summary>获取或设置一个值，该值指示用户是否可以与缩略图按钮进行交互。</summary>
      <returns>true 如果用户可以交互使用缩略图按钮;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Visibility">
      <summary>获取或设置一个值，指定缩略图按钮的显示状态。</summary>
      <returns>一个枚举值，指定缩略图按钮的显示状态。 默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CaptionHeight">
      <summary>获取或设置在窗口顶部的标题区域的高度。</summary>
      <returns>标题区域的高度。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CornerRadius">
      <summary>获取或设置一个值，该值指示窗口的角圆角的金额。</summary>
      <returns>一个值，描述角圆角的量。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness">
      <summary>获取一个统一的粗细为-1。</summary>
      <returns>在所有情况下为-1 一个统一的粗细。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameThickness">
      <summary>获取或设置一个值，该值指示窗口四周的玻璃边框的宽度。</summary>
      <returns>玻璃窗口边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome">
      <summary>获取或设置一个值，该值指示是否是一个窗口的非工作区中的元素启用 WPF 命中测试。</summary>
      <returns>true 如果在非工作区中; 中启用了命中测试否则为 false。 注册的默认值是 false。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges">
      <summary>获取或设置一个值，该值指示窗口框架的哪些边不归客户端。</summary>
      <returns>指定在框架的边缘不归客户端的枚举值的按位组合。注册的默认值是 <see cref="F:System.Windows.Shell.NonClientFrameEdges.None" />。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
      <exception cref="T:System.ArgumentException">'左侧、 右侧、 顶部、 底部不是有效的值。 至少一个边缘必须属于客户端。</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness">
      <summary>获取或设置一个值，该值指示用于调整窗口大小的边框的宽度。</summary>
      <returns>用来调整窗口大小的边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeGripDirection">
      <summary>获取或设置一个值，该值指示对输入元素的大小调整手柄行为的方向。</summary>
      <returns>指示对输入元素的大小调整手柄行为的方向的枚举值之一。 注册的默认值是 <see cref="F:System.Windows.Shell.ResizeGripDirection.None" />。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons">
      <summary>获取或设置一个值，该值指示是否在 Windows Aero 的标题按钮上启用的命中测试。</summary>
      <returns>true 如果标题按钮; 上启用了命中测试否则为 false。 注册的默认值是 true。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.WindowChrome">
      <summary>获取或设置的实例 <see cref="T:System.Windows.Shell.WindowChrome" /> 附加到一个窗口。</summary>
      <returns>实例 <see cref="T:System.Windows.Shell.WindowChrome" /> 附加到窗口。 注册的默认值是 null。 有关新增功能可以影响值的详细信息，请参阅 依赖项属性值优先级。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.HeightChanged">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.FrameworkElement.Height" /> 分量大小的更改。</summary>
      <returns>true 如果 <see cref="P:System.Windows.FrameworkElement.Height" /> 组件的大小已更改; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>获取新 <see cref="T:System.Windows.Size" /> 的对象。</summary>
      <returns>新 <see cref="T:System.Windows.Size" /> 的对象。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>获取以前 <see cref="T:System.Windows.Size" /> 的对象。</summary>
      <returns>上一个 <see cref="T:System.Windows.Size" /> 的对象。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.WidthChanged">
      <summary>获取一个值，该值指示是否 <see cref="P:System.Windows.FrameworkElement.Width" /> 分量大小的更改。</summary>
      <returns>true 如果 <see cref="P:System.Windows.FrameworkElement.Width" /> 组件的大小已更改; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.StartupEventArgs.Args">
      <summary>获取传递给应用程序从命令提示符下或桌面的命令行参数。</summary>
      <returns>一个字符串数组，其中包含传递给应用程序从命令提示符下或桌面的命令行参数。 如果不传递任何命令行参数，该字符串数组没有项目。</returns>
    </member>
    <member name="P:System.Windows.StaticResourceExtension.ResourceKey">
      <summary>获取或设置此静态资源引用传递的键值。 键用于返回与该资源字典中的键匹配的对象。</summary>
      <returns>资源的资源键。</returns>
      <exception cref="T:System.ArgumentNullException">指定值为 null, ，通过标记扩展用法或显式构造。</exception>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>获取或设置是当前样式的基础已定义的样式。</summary>
      <returns>已定义的样式，其当前样式的基础。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>获取一个值，该值指示是否样式是只读的并且不能更改。</summary>
      <returns>true 如果样式密封的;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Style.Resources">
      <summary>获取或设置此样式的作用域内的可用资源的集合。</summary>
      <returns>可以使用此样式的作用域内的资源。</returns>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>获取一套 <see cref="T:System.Windows.Setter" /> 和 <see cref="T:System.Windows.EventSetter" /> 对象。</summary>
      <returns>一套 <see cref="T:System.Windows.Setter" /> 和 <see cref="T:System.Windows.EventSetter" /> 对象。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>获取或设置此样式所针对的类型。</summary>
      <returns>此样式目标类型。</returns>
    </member>
    <member name="P:System.Windows.Style.Triggers">
      <summary>获取一套 <see cref="T:System.Windows.TriggerBase" /> 应用属性值的对象根据指定的条件。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> 对象的集合。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>获取或设置的类型的属性名称 <see cref="T:System.Windows.Style" />。</summary>
      <returns>类型的属性的名称 <see cref="T:System.Windows.Style" />。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>获取或设置 <see cref="P:System.Windows.Style.TargetType" /> 的 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> 指定此属性。</summary>
      <returns>
        <see cref="P:System.Windows.Style.TargetType" /> 的 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> 指定此属性。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrush">
      <summary>获取作为活动窗口边框的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为活动窗口边框的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrushKey">
      <summary>为用于绘制活动窗口边框的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用于绘制活动窗口边框的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>获取表示活动窗口边框的颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>活动窗口的边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColorKey">
      <summary>获取活动窗口边框 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>活动窗口边框的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrush">
      <summary>获取表示活动窗口标题栏的背景颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为活动窗口的标题栏的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrushKey">
      <summary>获取用于绘制活动窗口标题栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用来绘制活动窗口标题栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，该结构表示活动窗口标题栏的背景色。</summary>
      <returns>活动窗口标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColorKey">
      <summary>获取活动窗口标题栏的背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>活动窗口标题栏的背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是活动窗口标题栏中文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.SolidColorBrush" />，其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为活动窗口标题栏中文本颜色的背景色。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrushKey">
      <summary>为绘制活动窗口标题栏中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制活动窗口标题栏中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>获取一个 <see cref="T:System.Windows.Media.Color" />，它是活动窗口标题栏中文本的颜色。</summary>
      <returns>活动窗口的标题栏的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColorKey">
      <summary>获取活动窗口标题栏中文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>活动窗口标题栏中文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrush">
      <summary>获取表示应用程序工作区的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为表示应用程序工作区的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrushKey">
      <summary>为绘制应用程序工作区的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制应用程序工作区的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是应用程序工作区的颜色。</summary>
      <returns>应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColorKey">
      <summary>获取应用程序工作区 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>应用程序工作区的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是一个三维显示元素的表面颜色。</summary>
      <returns>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个三维显示元素的表明颜色。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrushKey">
      <summary>获取绘制三维显示元素表面的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素表面的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是一个三维显示元素的表面颜色。</summary>
      <returns>三维显示元素的表面颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColorKey">
      <summary>为三维显示元素的表面 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素的表面 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" /> ，它是三维显示元素的阴影颜色。</summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" />，其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为三维显示元素的阴影颜色。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrushKey">
      <summary>为绘制三维显示元素阴影的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素阴影的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是一个三维显示元素的阴影颜色。</summary>
      <returns>三维显示元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColorKey">
      <summary>获取三维显示元素的阴影 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素的阴影 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是三维显示元素的暗阴影颜色。</summary>
      <returns>其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为三维显示元素的暗阴影颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrushKey">
      <summary>获取绘制三维显示元素暗阴影 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素暗阴影的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是一个三维显示元素的暗阴影颜色。</summary>
      <returns>三维显示元素的暗阴影颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColorKey">
      <summary>获取三维显示元素突出显示颜色的暗阴影 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素的暗阴影 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是一个三维显示元素的亮色。</summary>
      <returns>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个三维显示元素的亮色。 返回的画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrushKey">
      <summary>获取绘制三维显示元素亮区 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素浅区域的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是三维显示元素的亮色。</summary>
      <returns>三维显示元素的亮色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColorKey">
      <summary>获取三维显示元素的突出 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素的突出显示 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是三维显示元素的突出显示颜色。</summary>
      <returns>三维显示元素的突出显示颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrushKey">
      <summary>为绘制三维显示元素突出显示的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素突出显示的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是三维显示元素的突出显示颜色。</summary>
      <returns>三维显示元素的突出显示颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColorKey">
      <summary>获取三维显示元素的突出 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素的突出显示 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是三维显示元素中文本的颜色。</summary>
      <returns>三维显示元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrushKey">
      <summary>为绘制三维显示元素中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制三维显示元素中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是三维显示元素中文本的颜色。</summary>
      <returns>三维显示元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColorKey">
      <summary>获取三维显示元素中文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>三维显示元素中文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是桌面的颜色。</summary>
      <returns>桌面的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrushKey">
      <summary>为绘制桌面的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制桌面的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>获取用作桌面颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>桌面的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColorKey">
      <summary>获取桌面 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>桌面的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是活动窗口标题栏渐变中的右侧颜色。</summary>
      <returns>渐变中的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrushKey">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />（它是活动窗口标题栏渐变的右侧颜色）的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" />（它是活动窗口标题栏渐变的右侧颜色）的资源关键字。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是活动窗口标题栏渐变中的右侧颜色。</summary>
      <returns>渐变中的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColorKey">
      <summary>为活动窗口标题栏渐变中的右侧 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>活动窗口标题栏渐变中的右侧 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是非活动窗口标题栏渐变中的右侧颜色。</summary>
      <returns>渐变中的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrushKey">
      <summary>为 <see cref="T:System.Windows.Media.SolidColorBrush" />（它是非活动窗口标题栏渐变的右侧颜色）获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用来绘制非活动窗口标题栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是非活动窗口标题栏渐变中的右侧颜色。</summary>
      <returns>渐变中的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColorKey">
      <summary>为非活动窗口标题栏渐变中的右侧 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>非活动窗口标题栏渐变中的右侧 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrush">
      <summary>获取用作无效文本的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>无效文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrushKey">
      <summary>为绘制无效文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制无效文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>获取表示无效文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>无效文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColorKey">
      <summary>获取失效文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>失效文本的 <see cref="T:System.Windows.Media.Color" /> 的资源关键字。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrush">
      <summary>获取绘制所选项的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>选定项的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrushKey">
      <summary>获取绘制所选项背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用于绘制所选项背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，该结构为选定项的背景色。</summary>
      <returns>选定项的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColorKey">
      <summary>获取所选项的背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>所选项的背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrush">
      <summary>获取一个 <see cref="T:System.Windows.Media.SolidColorBrush" /> 结构，它为选定项的文本颜色。</summary>
      <returns>选定项的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrushKey">
      <summary>为绘制选定项文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制选定项文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，该结构为选定项的文本颜色。</summary>
      <returns>选定项的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColorKey">
      <summary>为选定项文本的 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>选定项文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是用于指定热跟踪项的颜色。</summary>
      <returns>用于指定热跟踪项的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrushKey">
      <summary>为绘制热跟踪项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制热跟踪项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，该结构是用于指定热跟踪项的颜色。</summary>
      <returns>用于指定热跟踪项的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColorKey">
      <summary>获取用以指定热跟踪项的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用于指定热跟踪项的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrush">
      <summary>获取作为非活动窗口边框的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrushKey">
      <summary>获取绘制非活动窗口边框的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制非活动窗口边框的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>获取作为非活动窗口边框的颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColorKey">
      <summary>获取非活动的窗口边框 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>非活动的窗口的边框的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrush">
      <summary>获取表示非活动窗口标题栏背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>非活动窗口标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrushKey">
      <summary>为绘制非活动窗口标题栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制非活动窗口标题栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>获取一个 <see cref="T:System.Windows.Media.Color" /> 结构，它是非活动窗口标题栏的背景色。</summary>
      <returns>非活动窗口标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColorKey">
      <summary>为非活动窗口标题栏的背景 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>非活动窗口标题栏的背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrush">
      <summary>获取作为非活动窗口标题栏的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>非活动窗口标题栏的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrushKey">
      <summary>为绘制非活动窗口标题栏文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制非活动窗口标题栏文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>获取一个 <see cref="T:System.Windows.Media.Color" />，它是活动窗口标题栏的文本的颜色。</summary>
      <returns>非活动窗口标题栏的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColorKey">
      <summary>为非活动窗口标题栏文本的 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>非活动窗口标题栏文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush">
      <summary>获取一个 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是用来突出显示非活动的选定项的颜色。</summary>
      <returns>用于突出显示非活动的选定项的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrushKey">
      <summary>获取 <see cref="T:System.Windows.ResourceKey" /> 为 <see cref="T:System.Windows.Media.SolidColorBrush" /> 绘制处于非活动状态的选定项的背景。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceKey" /> 为 <see cref="T:System.Windows.Media.SolidColorBrush" /> 绘制处于非活动状态的选定项的背景。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" /> ，表示停用选定的项文本的颜色。</summary>
      <returns>非活动状态的颜色选定的项的文本。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrushKey">
      <summary>获取 <see cref="T:System.Windows.ResourceKey" /> 为 <see cref="T:System.Windows.Media.SolidColorBrush" /> 绘制非活动选择项的文本。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceKey" /> 为 <see cref="T:System.Windows.Media.SolidColorBrush" /> 绘制非活动选择项的文本。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrush">
      <summary>获取作为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrushKey">
      <summary>为用于绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>获取一个 <see cref="T:System.Windows.Media.Color" /> 结构，它是 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColorKey">
      <summary>为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrush">
      <summary>获取用作 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrushKey">
      <summary>为绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件中文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>获取为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColorKey">
      <summary>获取 <see cref="T:System.Windows.Controls.ToolTip" /> 控件中文本 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件中文本的 <see cref="T:System.Windows.Media.Color" />的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrush">
      <summary>获取表示菜单栏背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>菜单栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrushKey">
      <summary>为绘制菜单栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制菜单栏背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColor">
      <summary>获取表示菜单栏背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>菜单栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColorKey">
      <summary>获取菜单栏背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>菜单栏背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrush">
      <summary>获取作为菜单背景的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrushKey">
      <summary>为用于绘制菜单背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>用于绘制菜单背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>获取表示菜单背景颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColorKey">
      <summary>获取菜单背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>菜单背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrush">
      <summary>获取一个 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是用于突出显示菜单项的颜色。</summary>
      <returns>用于突出显示菜单项的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrushKey">
      <summary>绘制突出显示的菜单项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制突出显示的菜单项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，该结构是用于突出显示菜单项的颜色。</summary>
      <returns>用于突出显示菜单项的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColorKey">
      <summary>获取突出显示的菜单项的背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>突出显示的菜单项的背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrush">
      <summary>获取一个表示菜单文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrushKey">
      <summary>为绘制菜单文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制菜单文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>获取一个表示菜单文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColorKey">
      <summary>获取菜单文本 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>菜单文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrush">
      <summary>获取作为滚动条背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>滚动条的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrushKey">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />，它可绘制滚动条的背景。</summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键，用于绘制滚动条的背景。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>获取表示滚动条背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
      <returns>滚动条的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColorKey">
      <summary>获取滚动条背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>滚动条背景 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是窗口的工作区的背景颜色。</summary>
      <returns>窗口的工作区的背景颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrushKey">
      <summary>获取绘制客户端区域窗口背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制客户端区域窗口背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源关键字。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是窗口的工作区的背景颜色。</summary>
      <returns>窗口的工作区的背景颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColorKey">
      <summary>获取窗口客户端区域的背景 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>窗口客户端区域的背景 <see cref="T:System.Windows.Media.Color" /> 的资源关键字。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrush">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" />，它是窗口框架的颜色。</summary>
      <returns>窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrushKey">
      <summary>为绘制窗口框架的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>绘制窗口框架的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是窗口框架的颜色。</summary>
      <returns>窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColorKey">
      <summary>为窗口框架的 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>窗口框架的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrush">
      <summary>获取表示窗口工作区中文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" />。</summary>
      <returns>窗口的工作区的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrushKey">
      <summary>为 <see cref="T:System.Windows.Media.SolidColorBrush" /> 获取 <see cref="T:System.Windows.ResourceKey" />，前者在窗口客户端区域中绘制文本。</summary>
      <returns>用于在窗口的客户端区域中绘制文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。 此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，因此不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>获取 <see cref="T:System.Windows.Media.Color" /> 结构，它是窗口的工作区的文本颜色。</summary>
      <returns>窗口的工作区的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColorKey">
      <summary>为窗口工作区中文本的 <see cref="T:System.Windows.Media.Color" /> 获取 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>窗口工作区中文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemCommands.CloseWindowCommand">
      <summary>获取用于关闭窗口的命令。</summary>
      <returns>用于关闭窗口的命令。</returns>
    </member>
    <member name="P:System.Windows.SystemCommands.MaximizeWindowCommand">
      <summary>获取最大化窗口的命令。</summary>
      <returns>最大化窗口的命令。</returns>
    </member>
    <member name="P:System.Windows.SystemCommands.MinimizeWindowCommand">
      <summary>获取最大化窗口的命令。</summary>
      <returns>最大化窗口的命令。</returns>
    </member>
    <member name="P:System.Windows.SystemCommands.RestoreWindowCommand">
      <summary>获取用于还原的窗口的命令。</summary>
      <returns>用于还原的窗口的命令。</returns>
    </member>
    <member name="P:System.Windows.SystemCommands.ShowSystemMenuCommand">
      <summary>获取用于显示系统菜单命令。</summary>
      <returns>显示系统菜单命令。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamily">
      <summary>获取规格，它确定非最小化窗口的非工作区标题的字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSize">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyle">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorations">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题文本修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeight">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamily">
      <summary>从当前图标标题字体的逻辑字体信息获取字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSize">
      <summary>从当前图标标题字体的逻辑字体信息获取字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyle">
      <summary>从当前图标标题字体的逻辑字体信息获取字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorations">
      <summary>从当前图标标题字体的逻辑字体信息获取文本修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeight">
      <summary>从当前图标标题字体的逻辑字体信息获取字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamily">
      <summary>获取规格，它确定菜单文本的字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSize">
      <summary>获取规格，它确定菜单文本的字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyle">
      <summary>获取规格，它确定菜单文本的字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorations">
      <summary>获取规格，它确定菜单文本的文本修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeight">
      <summary>获取规格，它确定菜单文本的字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamily">
      <summary>获取规格，它确定消息框文本的字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSize">
      <summary>获取规格，它确定消息框文本的字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyle">
      <summary>获取规格，它确定消息框文本的字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorations">
      <summary>获取规格，它确定消息框文本的修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeight">
      <summary>获取规格，它确定消息框文本的字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamily">
      <summary>获取规格，它确定非最小化窗口的非工作区小标题文本的字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSize">
      <summary>获取规格，它确定非最小化窗口的非工作区小标题文本的字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyle">
      <summary>获取规格，它确定非最小化窗口的非工作区小标题文本的字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations">
      <summary>获取规格，它确定非最小化窗口的非工作区小标题文本的修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeight">
      <summary>获取规格，它确定非最小化窗口的非工作区小标题文本的字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamily">
      <summary>获取规格，它确定非最小化窗口的非工作区的状态栏和工具提示中所用文本的字体系列。</summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSize">
      <summary>获取规格，它确定非最小化窗口的非工作区的状态栏和工具提示中所用文本的字号。</summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyle">
      <summary>获取规格，它确定非最小化窗口的非工作区的状态栏和工具提示中所用文本的字体样式。</summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorations">
      <summary>获取规格，它确定非最小化窗口的非工作区的状态栏和工具提示中所用文本的修饰。</summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeight">
      <summary>获取规格，它确定非最小化窗口的非工作区的状态栏和工具提示中所用文本的字体粗细。</summary>
      <returns>字体粗细。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.Border">
      <summary>获取边框倍数因子，该倍数因子确定窗口大小调整边框的宽度。</summary>
      <returns>倍数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.Border" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidth">
      <summary>获取规格，它确定非最小化窗口的非工作区的边框宽度。</summary>
      <returns>边框宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.BorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeight">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题高度。</summary>
      <returns>标题高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidth">
      <summary>获取规格，它确定非最小化窗口的非工作区的标题宽度。</summary>
      <returns>标题宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaptionWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidth">
      <summary>获取编辑控件的插入符号宽度（以像素为单位）。</summary>
      <returns>插入符号宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaretWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimation">
      <summary>获取一个值，该值指示是否启用工作区动画功能。</summary>
      <returns>一个布尔值；如果启用工作区动画，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimation">
      <summary>获取一个值，该值指示是否启用组合框的滑动打开效果。</summary>
      <returns>如果已启用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimation">
      <summary>获取组合框 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性的系统值。</summary>
      <returns>弹出动画值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeight">
      <summary>获取光标的高度（以像素为单位）。</summary>
      <returns>光标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadow">
      <summary>获取一个值，该值指示光标周围是否有阴影。</summary>
      <returns>如果启用阴影，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadowKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorShadow" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidth">
      <summary>获取光标的宽度（以像素为单位）。</summary>
      <returns>光标宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindows">
      <summary>获取一个值，该值指示是否启用全窗口拖动。</summary>
      <returns>如果启用全窗口拖动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindowsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.DragFullWindows" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadow">
      <summary>获取一个值，该值指示是否已启用投影效果。</summary>
      <returns>如果已启用投影效果，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadowKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.DropShadow" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight">
      <summary>获取窗口四周框架横框线的高度。</summary>
      <returns>边框高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth">
      <summary>获取窗口四周框架竖框线的宽度。</summary>
      <returns>边框宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenu">
      <summary>获取一个值，该值指示本机菜单是否看起来像平面菜单。</summary>
      <returns>如果设置了平面菜单外观，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenuKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FlatMenu" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeight">
      <summary>获取焦点矩形上边缘和下边缘的高度（以像素为单位）。</summary>
      <returns>边缘高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidth">
      <summary>获取焦点矩形的左边缘和右边缘的宽度（以像素为单位）。</summary>
      <returns>边缘宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight">
      <summary>获取焦点矩形上边缘和下边缘的高度。</summary>
      <returns>边缘高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidth">
      <summary>获取焦点矩形的左边缘和右边缘的宽度。</summary>
      <returns>边缘宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVisualStyleKey">
      <summary>获取 FocusVisualStyle 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCount">
      <summary>获取“设置前景窗口”在拒绝前景切换请求时使任务栏按钮闪烁的次数。</summary>
      <returns>闪烁计数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCountKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeight">
      <summary>获取主监视器上全屏窗口工作区的高度（以像素为单位）。</summary>
      <returns>工作区的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidth">
      <summary>获取主监视器上全屏窗口工作区的宽度（以像素为单位）。</summary>
      <returns>工作区的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptions">
      <summary>获取一个值，该值指示是否启用窗口标题栏的渐变效果。</summary>
      <returns>如果启用了渐变效果，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptionsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.GradientCaptions" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>获取有关“高对比度”辅助功能的信息。</summary>
      <returns>如果选择了 HIGHCONTRASTON 选项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrastKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HighContrast" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth">
      <summary>获取水平滚动条上箭头位图的宽度（以像素为单位）。</summary>
      <returns>箭头位图的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeight">
      <summary>获取水平滚动条的高度（以像素为单位）。</summary>
      <returns>滚动条的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth">
      <summary>获取水平滚动条中 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的宽度（以像素为单位）。</summary>
      <returns>滚动块的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTracking">
      <summary>获取一个值，该值指示是否启用对用户界面元素（如菜单栏上的菜单名）的热跟踪。</summary>
      <returns>如果启用热跟踪，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTrackingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HotTracking" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeight">
      <summary>获取可容纳大图标的网格的高度。</summary>
      <returns>网格高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconGridHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidth">
      <summary>获取可容纳大图标的网格的宽度。</summary>
      <returns>网格宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconGridWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeight">
      <summary>获取图标的默认高度。</summary>
      <returns>图标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacing">
      <summary>获取图标单元格的宽度（以像素为单位）。 系统使用此矩形在大图标视图中排列图标。</summary>
      <returns>图标单元格的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrap">
      <summary>获取一个值，该值指示是否已启用图标标题换行。</summary>
      <returns>如果已启用图标标题换行功能，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrapKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacing">
      <summary>获取图标单元格的高度（以像素为单位）。 系统使用此矩形在大图标视图中排列图标。</summary>
      <returns>图标单元格的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidth">
      <summary>获取图标的默认宽度。</summary>
      <returns>图标宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsGlassEnabled">
      <summary>获取指示此玻璃窗口框架是否被使用的值。</summary>
      <returns>如果正在使用玻璃窗口框架，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabled">
      <summary>获取一个值，该值指示系统是否准备在 Unicode 应用程序上使用基于 Unicode 的 Input Method Editor (IME)。</summary>
      <returns>如果启用了输入法管理器/输入法编辑器功能，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenter">
      <summary>获取一个值，该值指示当前操作系统是否为 Microsoft Windows XP Media Center Edition。</summary>
      <returns>如果当前操作系统是 Windows XP Media Center Edition，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenterKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAligned">
      <summary>获取一个值，该值指示下拉菜单是否与相应的菜单项右对齐。</summary>
      <returns>如果下拉菜单右对齐，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabled">
      <summary>获取一个值，该值指示系统是否可使用希伯来语和阿拉伯语。</summary>
      <returns>如果系统支持希伯来语和阿拉伯语，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresent">
      <summary>获取一个值，该值指示鼠标是否已安装。</summary>
      <returns>如果鼠标已安装，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMousePresent" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresent">
      <summary>获取一个值，该值指示已安装的鼠标是否具有垂直滚轮。</summary>
      <returns>如果已安装的鼠标具有垂直滚轮，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindows">
      <summary>获取一个值，该值指示是否已安装 Microsoft Windows for Pen Computing 扩展。</summary>
      <returns>如果安装了 Pen Computing 扩展，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindowsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsPenWindows" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlled">
      <summary>获取一个值，该值指示当前会话是否为远程控制的。</summary>
      <returns>如果当前会话是远程控制的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSession">
      <summary>获取一个值，该值指示调用进程是否与终端服务客户端会话相关联。</summary>
      <returns>如果调用进程与终端服务客户端会话相关联，则为 true；如果调用进程与终端服务器控制台会话相关联，则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSessionKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachine">
      <summary>获取一个值，该值指示计算机是否具有低端（慢速）处理器。</summary>
      <returns>如果计算机具有低端（慢速）处理器，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachineKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPC">
      <summary>获取一个值，该值指示当前操作系统是否为 Microsoft Windows XP Tablet PC Edition。</summary>
      <returns>如果当前操作系统是 Windows XP Tablet PC Edition，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPCKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsTabletPC" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeight">
      <summary>获取一个值，该值为使用双字节字符的系统指示屏幕底部 Kanji 窗口的高度（以像素为单位）。</summary>
      <returns>窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCues">
      <summary>获取一个值，该值指示菜单访问键是否始终带下划线。</summary>
      <returns>如果菜单访问键始终带下划线，则为 true；如果菜单访问键仅当键盘激活菜单时才带下划线，则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCuesKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardCues" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelay">
      <summary>获取键盘重复延迟设置，该设置是 0（约 250 毫秒延迟）到 3（约 1 秒延迟）范围内的一个值。</summary>
      <returns>键盘重复延迟设置。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelayKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreference">
      <summary>获取一个值，该值指示用户是否依赖于键盘（而不是鼠标），以及用户是否希望应用程序显示键盘界面（该界面通常是隐藏的）。</summary>
      <returns>如果用户依赖键盘，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreferenceKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeed">
      <summary>获取键盘重复速度设置，该设置是 0（约每秒重复 2.5 次）到 31（约每秒重复 30 次）范围内的一个值。</summary>
      <returns>键盘重复速度设置。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeedKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrolling">
      <summary>获取一个值，该值指示是否启用列表框的平滑滚动效果。</summary>
      <returns>如果已启用平滑滚动效果，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight">
      <summary>获取一个值，该值指示主监视器上最大化顶级窗口的高度（以像素为单位）。</summary>
      <returns>窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth">
      <summary>获取一个值，该值指示主监视器上最大化顶级窗口的宽度（以像素为单位）。</summary>
      <returns>窗口宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeight">
      <summary>获取一个值，该值指示窗口的最大高度（以像素为单位），该窗口具有标题和可调整大小的边框。</summary>
      <returns>最大窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidth">
      <summary>获取一个值，该值指示窗口的最大宽度（以像素为单位），该窗口具有标题和可调整大小的边框。</summary>
      <returns>最大窗口宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimation">
      <summary>获取一个值，该值指示是否启用菜单动画功能。</summary>
      <returns>如果已启用菜单动画，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeight">
      <summary>获取一个值，该值指示单行菜单栏的高度（以像素为单位）。</summary>
      <returns>菜单栏的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeight">
      <summary>获取一个值，该值指示菜单栏按钮的高度（以像素为单位）。</summary>
      <returns>菜单栏按钮的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidth">
      <summary>获取一个值，该值指示菜单栏按钮的宽度（以像素为单位）。</summary>
      <returns>菜单栏按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeight">
      <summary>获取一个值，该值指示默认菜单选中标记位图的高度（以像素为单位）。</summary>
      <returns>位图的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidth">
      <summary>获取一个值，该值指示默认菜单选中标记位图的宽度（以像素为单位）。</summary>
      <returns>位图的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignment">
      <summary>获取一个值，该值指示弹出菜单相对于相应菜单项是左对齐还是右对齐。</summary>
      <returns>如果是左对齐，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignmentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFade">
      <summary>获取一个值，该值指示是否启用菜单淡化动画。</summary>
      <returns>如果启用淡化动画，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeight">
      <summary>获取规格，它确定菜单的高度。</summary>
      <returns>菜单高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimation">
      <summary>为菜单获取 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性的系统值。</summary>
      <returns>弹出动画属性。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelay">
      <summary>获取当鼠标光标位于子菜单项之上时，显示快捷菜单前系统等待的时间（以毫秒为单位）。</summary>
      <returns>延迟时间。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelayKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidth">
      <summary>获取规格，它确定菜单的宽度。</summary>
      <returns>以像素为单位的菜单宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimation">
      <summary>获取与用户操作关联的动画效果。</summary>
      <returns>如果已启用最小化窗口动画功能，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeight">
      <summary>获取一个值，该值指示最小化窗口网格单元格的高度（以像素为单位）。</summary>
      <returns>最小化窗口网格单元格的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidth">
      <summary>获取一个值，该值指示最小化窗口网格单元格的宽度（以像素为单位）。</summary>
      <returns>最小化窗口网格单元格的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeight">
      <summary>获取一个值，该值指示最小化窗口的高度（以像素为单位）。</summary>
      <returns>最小化窗口的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidth">
      <summary>获取一个值，该值指示最小化窗口的宽度（以像素为单位）。</summary>
      <returns>最小化窗口的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance">
      <summary>获取以拖动点为中心的矩形的宽度，以便在拖动操作开始之前允许鼠标指针的有限运动。</summary>
      <returns>矩形的宽度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumVerticalDragDistance">
      <summary>获取以拖动点为中心的矩形的高度，以便在拖动操作开始之前允许鼠标指针的有限运动。</summary>
      <returns>矩形的高度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeight">
      <summary>获取一个值，该值指示窗口的最小高度（以像素为单位）。</summary>
      <returns>窗口的最小高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeight">
      <summary>获取一个值，该值指示窗口的最小跟踪高度（以像素为单位）。</summary>
      <returns>窗口的最小跟踪高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidth">
      <summary>获取一个值，该值指示窗口的最小跟踪宽度（以像素为单位）。</summary>
      <returns>窗口的最小跟踪宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidth">
      <summary>获取一个值，该值指示窗口的最小宽度（以像素为单位）。</summary>
      <returns>窗口的最小宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeight">
      <summary>获取矩形的高度（以像素为单位），鼠标指针必须停留在该矩形范围内，以生成鼠标悬停事件。</summary>
      <returns>用于鼠标悬停事件的矩形的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTime">
      <summary>获取时间（以毫秒为单位），鼠标指针必须在悬停矩形中停留这么长时间以生成鼠标悬停事件。</summary>
      <returns>以毫秒为单位的时间，鼠标必须在悬停矩形中停留这么长时间以生成鼠标悬停事件。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTimeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidth">
      <summary>获取矩形的宽度（以像素为单位），鼠标指针必须停留在该矩形范围内，以生成鼠标悬停事件。</summary>
      <returns>用于鼠标悬停事件的矩形的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatus">
      <summary>获取一个值，该值指示系统电源是否处于联机状态，或指示系统电源状态未知。</summary>
      <returns>枚举中的一个值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatusKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeight">
      <summary>获取一个值，该值指示主监视器的屏幕高度（以像素为单位）。</summary>
      <returns>屏幕的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidth">
      <summary>获取一个值，该值指示主监视器的屏幕宽度（以像素为单位）。</summary>
      <returns>屏幕的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight">
      <summary>获取一个值，该值指示可调整大小窗口周围水平大小调整边框的高度（粗细）（以像素为单位）。</summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth">
      <summary>获取一个值，该值指示可调整大小窗口周围垂直大小调整边框的宽度（粗细）（以像素为单位）。</summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeight">
      <summary>获取规格，它确定非最小化窗口的非工作区的滚动高度。</summary>
      <returns>以像素为单位的滚动高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ScrollHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidth">
      <summary>获取规格，它确定非最小化窗口的非工作区的滚动宽度。</summary>
      <returns>以像素为单位的滚动宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ScrollWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFade">
      <summary>获取一个值，该值指示是否启用选择淡化效果。</summary>
      <returns>如果已启用淡化效果，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SelectionFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSounds">
      <summary>获取一个值，该值指示用户是否需要可视化格式的信息。</summary>
      <returns>如果用户需要应用程序在通常仅以音频形式表示信息的情况中以可视形式表示信息，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSoundsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ShowSounds" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeight">
      <summary>获取规格，它确定非最小化窗口的非工作区的小标题高度。</summary>
      <returns>以像素为单位的标题高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidth">
      <summary>获取规格，它确定非最小化窗口的非工作区的小标题宽度。</summary>
      <returns>以像素为单位的标题宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeight">
      <summary>获取一个值，该值指示小图标的建议高度（以像素为单位）。</summary>
      <returns>图标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidth">
      <summary>获取一个值，该值指示小图标的建议宽度（以像素为单位）。</summary>
      <returns>图标的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight">
      <summary>获取一个值，该值指示小标题按钮的高度（以像素为单位）。</summary>
      <returns>标题按钮的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth">
      <summary>获取一个值，该值指示小标题按钮的宽度（以像素为单位）。</summary>
      <returns>标题按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButton">
      <summary>获取一个值，该值指示是否已启用“对齐默认按钮”。 如果已启用，则鼠标光标自动移动到对话框的默认按钮（如“确定”或“应用”）。</summary>
      <returns>如果已启用该功能，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButtonKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTracking">
      <summary>获取一个值，该值指示是否已启用触笔的热跟踪。</summary>
      <returns>如果已启用触笔的热跟踪，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTrackingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtons">
      <summary>获取一个值，该值指示是否交换了鼠标左右按钮的功能。</summary>
      <returns>如果鼠标左右按钮的功能已交换，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtonsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SwapButtons" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight">
      <summary>获取一个值，该值指示 3-D 边框的高度（以像素为单位）。</summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidth">
      <summary>获取一个值，该值指示 3-D 边框的宽度（以像素为单位）。</summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight">
      <summary>获取一个值，该值指示水平窗口边框的高度（以像素为单位）。</summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidth">
      <summary>获取一个值，该值指示垂直窗口边框的宽度（以像素为单位）。</summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimation">
      <summary>获取一个值，该值指示是否已启用 <see cref="T:System.Windows.Controls.ToolTip" /> 动画。</summary>
      <returns>如果已启用工具提示动画，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFade">
      <summary>获取一个值，该值指示工具提示动画使用淡化效果还是滑动效果。</summary>
      <returns>如果使用淡化效果，则为 true；如果使用滑动效果，则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimation">
      <summary>为工具提示获取 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性的系统值。</summary>
      <returns>弹出动画属性的系统值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffects">
      <summary>获取一个值，该值指示是否启用了所有 用户界面 (UI) 效果。</summary>
      <returns>如果启用了所有 UI 效果，则为 true；如果禁用了这些效果，则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffectsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.UIEffects" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeColor">
      <summary>获取颜色主题名。</summary>
      <returns>颜色主题名。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeName">
      <summary>获取主题名。</summary>
      <returns>主题名。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight">
      <summary>获取一个值，该值指示垂直滚动条上箭头位图的高度（以像素为单位）。</summary>
      <returns>位图的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight">
      <summary>获取一个值，该值指示垂直滚动条上滚动块的高度（以像素为单位）。</summary>
      <returns>滚动块的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidth">
      <summary>获取一个值，该值指示垂直滚动条的宽度（以像素为单位）。</summary>
      <returns>滚动条的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeight">
      <summary>获取一个值，该值指示虚拟屏幕的高度（以像素为单位）。</summary>
      <returns>虚拟屏幕的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeft">
      <summary>获取一个值，该值指示虚拟屏幕左边的坐标。</summary>
      <returns>以像素为单位的屏幕坐标。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeftKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTop">
      <summary>获取一个值，该值指示虚拟屏幕的上部坐标。</summary>
      <returns>以像素为单位的屏幕坐标。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTopKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidth">
      <summary>获取一个值，该值指示虚拟屏幕的宽度（以像素为单位）。</summary>
      <returns>虚拟屏幕的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
      <summary>获取一个值，该值指示鼠标滚轮转动时所滚动的行数。</summary>
      <returns>行数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLinesKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeight">
      <summary>获取一个值，该值指示窗口标题栏中按钮的高度（以像素为单位）。</summary>
      <returns>标题按钮的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidth">
      <summary>获取一个值，该值指示窗口标题栏中按钮的宽度（以像素为单位）。</summary>
      <returns>标题按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeight">
      <summary>获取一个值，该值指示标题区域的高度（以像素为单位）。</summary>
      <returns>标题区域的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCornerRadius">
      <summary>获取窗口角的半径。</summary>
      <returns>窗口拐角的圆度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassBrush">
      <summary>获取绘制玻璃窗口框架的画笔。</summary>
      <returns>绘制玻璃窗口框架的画笔。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassColor">
      <summary>获取用于绘制玻璃窗口框架的颜色。</summary>
      <returns>用于绘制玻璃窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowNonClientFrameThickness">
      <summary>获取窗体非工作区的大小。</summary>
      <returns>窗口非工作区的大小，以与设备无关的单位为单位（1/96th 每英寸）。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowResizeBorderThickness">
      <summary>获取窗口周围重设定边框的大小。</summary>
      <returns>窗口周围调整边框的大小，以与设备无关的单位为单位（1/96th 每英寸）。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkArea">
      <summary>获取主监视器上工作区域的尺寸。</summary>
      <returns>接收工作区域坐标（表示为虚拟屏幕坐标）的 RECT 结构。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkAreaKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WorkArea" /> 属性的 <see cref="T:System.Windows.ResourceKey" />。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExpression.TemplateBindingExtension">
      <summary>获取 <see cref="T:System.Windows.TemplateBindingExtension" /> 此表达式实例的对象。</summary>
      <returns>此表达式实例模板绑定扩展。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Converter">
      <summary>获取或设置源和绑定的目标之间进行解释的转换器。</summary>
      <returns>转换器实现。 此值默认为 null ，并通常提供作为绑定的可选参数。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.ConverterParameter">
      <summary>获取或设置要传递给转换器参数。</summary>
      <returns>正在绑定的参数为所引用的转换器实现。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Property">
      <summary>获取或设置绑定到的属性。</summary>
      <returns>所绑定的依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.TemplateKey.Assembly">
      <summary>获取或设置包含模板定义的程序集。</summary>
      <returns>在其中定义该模板的程序集。</returns>
    </member>
    <member name="P:System.Windows.TemplateKey.DataType">
      <summary>获取或设置为其设计模板的类型。</summary>
      <returns>
        <see cref="T:System.Type" /> ，它指定使用模板来显示，或一个字符串，指定的对象类型 XML 标记名称 XML 数据，该模板用于显示。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>获取或设置预定义部件的名称。</summary>
      <returns>预定义部件的名称。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>获取或设置此属性所标识的已命名部件的类型。</summary>
      <returns>此属性所标识的已命名部件的类型。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>获取或设置该状态所属的组的名称。</summary>
      <returns>名称 <see cref="T:System.Windows.VisualStateGroup" /> 属于状态。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>获取或设置该控件可以在的状态的名称。</summary>
      <returns>控件可处于状态的名称。</returns>
    </member>
    <member name="P:System.Windows.ThemeDictionaryExtension.AssemblyName">
      <summary>获取或设置一个字符串，该字符串设置特定的命名约定来确定哪个字典应用于特定主题。</summary>
      <returns>程序集名称字符串。</returns>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
      <summary>一般，不是特定于主题，资源的位置。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionaryLocation" /> 的泛型 <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
      <summary>主题特定资源的位置。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionaryLocation" /> 特定主题的 <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>获取或设置的宽度，以像素为单位的边框的底边。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示的宽度，以像素为单位的此实例的边框的底边 <see cref="T:System.Windows.Thickness" />。 一个像素等于 1/96 英寸。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>获取或设置边框左侧的宽度（以像素为单位）。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Thickness" /> 的这一实例的边框左侧的宽度（以像素为单位）。 一像素等于 1/96 英寸。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>获取或设置的宽度，以像素为单位的边框的右侧。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示的宽度，以像素为单位的此实例的边框的右侧 <see cref="T:System.Windows.Thickness" />。 一个像素等于 1/96 英寸。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>获取或设置的宽度，以像素为单位的顶边的边框。</summary>
      <returns>一个 <see cref="T:System.Double" /> 表示的宽度，以像素为单位的此实例的边框的左上侧 <see cref="T:System.Windows.Thickness" />。 一个像素等于 1/96 英寸。 默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Trigger.Property">
      <summary>获取或设置返回的值进行比较的属性 <see cref="P:System.Windows.Trigger.Value" /> 触发器的属性。 比较是引用相等性检查。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyProperty" /> 返回该元素的属性值。 默认值为 null。</returns>
      <exception cref="T:System.ArgumentException">一个 <see cref="T:System.Windows.Style" /> 不能包含 <see cref="T:System.Windows.Trigger" /> ，指 <see cref="T:System.Windows.Style" /> 属性。</exception>
      <exception cref="T:System.InvalidOperationException">之后 <see cref="T:System.Windows.Trigger" /> 是在使用中，不能修改。</exception>
    </member>
    <member name="P:System.Windows.Trigger.Setters">
      <summary>获取一套 <see cref="T:System.Windows.Setter" /> 对象，描述要应用当满足指定的条件的属性值。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Trigger.SourceName">
      <summary>获取或设置与导致关联的 setter 要应用的属性对象的名称。</summary>
      <returns>默认属性是 null。 如果此属性为 null, ，则 <see cref="P:System.Windows.Trigger.Property" /> 方面此样式或模板被应用于 （样式化的父级或模板化父级） 的元素计算属性。</returns>
      <exception cref="T:System.InvalidOperationException">之后 <see cref="T:System.Windows.Trigger" /> 是在使用中，不能修改。</exception>
    </member>
    <member name="P:System.Windows.Trigger.Value">
      <summary>获取或设置要与该元素的属性值进行比较的值。 比较是引用相等性检查。</summary>
      <returns>默认值为 null。 另请参见异常部分。</returns>
      <exception cref="T:System.ArgumentException">仅加载时间 <see cref="T:System.Windows.Markup.MarkupExtension" />支持。</exception>
      <exception cref="T:System.ArgumentException">不支持表达式，例如绑定。</exception>
      <exception cref="T:System.InvalidOperationException">之后 <see cref="T:System.Windows.Trigger" /> 是在使用中，不能修改。</exception>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Count">
      <summary>获取集合中的项数。</summary>
      <returns>集合中包含的项的数目。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.IsReadOnly">
      <summary>获取一个值，指示集合是否为只读集合。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的项。</summary>
      <param name="index">要获取或设置项的从零开始索引。</param>
      <returns>
        <see cref="T:System.Windows.TriggerAction" /> 位于指定索引处的对象。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果对 true 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <returns>如果 true 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不能在代码中直接使用。</summary>
      <param name="index">要获取或设置项的从零开始索引。</param>
      <returns>位于指定索引处的对象。</returns>
    </member>
    <member name="P:System.Windows.TriggerBase.EnterActions">
      <summary>获取要在触发器对象变为活动状态时应用的 <see cref="T:System.Windows.TriggerAction" /> 对象的集合。 此属性不适用于 <see cref="T:System.Windows.EventTrigger" /> 类。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.TriggerBase.ExitActions">
      <summary>获取要在触发器对象变为非活动状态时应用的 <see cref="T:System.Windows.TriggerAction" /> 对象的集合。 此属性不适用于 <see cref="T:System.Windows.EventTrigger" /> 类。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.TriggerCollection.IsSealed">
      <summary>获取一个值，该值指示此集合是否是只读的不能更改。</summary>
      <returns>true 如果此集合是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.BaseValueSource">
      <summary>获取一个值的 <see cref="T:System.Windows.BaseValueSource" /> 枚举，它将进行相应报告依赖项属性系统提供的值的源。</summary>
      <returns>枚举的一个值。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsAnimated">
      <summary>获取一个值，声明该属性是否正在进行动画处理。</summary>
      <returns>true 如果该属性进行动画处理;，否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCoerced">
      <summary>获取一个值，声明此值是否是从应用于依赖属性的 <see cref="T:System.Windows.CoerceValueCallback" /> 实现中生成的。</summary>
      <returns>如果此值是从应用于依赖属性的 <see cref="T:System.Windows.CoerceValueCallback" /> 实现中生成的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCurrent">
      <summary>获取是否设置值 <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> 方法。</summary>
      <returns>true 如果设置值 <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> 方法; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsExpression">
      <summary>获取一个值，声明此值是否源于计算的表达式。 这可能是 <see cref="T:System.Windows.Data.BindingExpression" /> 支持一个绑定或内部的表达式，如支持的那些 DynamicResource 标记扩展。</summary>
      <returns>true 如果值来自计算的表达式;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> 的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 由表示的状态中时，它定义控件的外观 <see cref="T:System.Windows.VisualState" />。</summary>
      <returns>定义该控件的外观，由表示的状态中时的情节提要 <see cref="T:System.Windows.VisualState" />。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>获取正在转换状态的元素。</summary>
      <returns>正在转换状态，如果该元素 <see cref="T:System.Windows.VisualStateGroup" /> 处于 <see cref="T:System.Windows.Controls.ControlTemplate" />; 否则为 null。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>获取元素转换到或已转换为的状态。</summary>
      <returns>元素转换到或已转换为的状态。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>获取元素转换到或从已转换的状态。</summary>
      <returns>元素转换到或从已转换的状态。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.StateGroupsRoot">
      <summary>获取包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</summary>
      <returns>包含的根元素 <see cref="T:System.Windows.VisualStateManager" />。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>获取 <see cref="T:System.Windows.VisualState" /> ，当前应用于控件。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> ，当前应用于控件。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>获取或设置 <see cref="T:System.Windows.VisualStateGroup" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> 的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>获取的相互排斥的集合 <see cref="T:System.Windows.VisualState" /> 对象。</summary>
      <returns>互相排斥的集合 <see cref="T:System.Windows.VisualState" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>获取的集合 <see cref="T:System.Windows.VisualTransition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.VisualTransition" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>获取或设置 <see cref="T:System.Windows.VisualStateManager" /> 控件的状态间转换的对象。</summary>
      <returns>控件的状态间转换的可视状态管理器。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.VisualStateManager.VisualStateGroups">
      <summary>获取或设置的集合 <see cref="T:System.Windows.VisualStateGroup" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>获取或设置的名称 <see cref="T:System.Windows.VisualState" /> 从转换。</summary>
      <returns>名称 <see cref="T:System.Windows.VisualState" /> 从转换。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>获取或设置从一个状态转到另一个所需的时间。</summary>
      <returns>从一个状态转到另一个所需的时间。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>获取或设置使用的自定义数学公式状态间转换。</summary>
      <returns>自定义的数学公式用于对状态之间转换。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 转换时将发生这种情况。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> 转换时将发生这种情况。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>获取或设置的名称 <see cref="T:System.Windows.VisualState" /> 转换到。</summary>
      <returns>要转换到的 <see cref="T:System.Windows.VisualState" /> 的名称。</returns>
    </member>
    <member name="P:System.Windows.Window.AllowsTransparency">
      <summary>获取或设置一个值，该值指示窗口的工作区是否支持透明度。</summary>
      <returns>true 如果窗口支持透明度;否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.AllowsTransparency" /> 更改后显示窗口。</exception>
      <exception cref="T:System.InvalidOperationException">该窗口具有 <see cref="P:System.Windows.Window.WindowStyle" /> 以外的其他任何对象的值 <see cref="F:System.Windows.WindowStyle.None" />。</exception>
    </member>
    <member name="P:System.Windows.Window.DialogResult">
      <summary>获取或设置对话框结果值，即从返回的值 <see cref="M:System.Windows.Window.ShowDialog" /> 方法。</summary>
      <returns>一个 <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.DialogResult" /> 在通过调用打开一个窗口前设置 <see cref="M:System.Windows.Window.ShowDialog" />。- 或 -<see cref="P:System.Windows.Window.DialogResult" /> 通过调用打开的窗口上设置 <see cref="M:System.Windows.Window.Show" />。</exception>
    </member>
    <member name="P:System.Windows.Window.Icon">
      <summary>获取或设置窗口的图标。</summary>
      <returns>
        <see cref="T:System.Windows.Media.ImageSource" /> 对象，表示图标。</returns>
    </member>
    <member name="P:System.Windows.Window.IsActive">
      <summary>获取一个值，该值指示窗口是否处于活动状态。</summary>
      <returns>true 如果该窗口处于活动状态，则否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Window.Left">
      <summary>获取或设置窗口的左边缘，相对于桌面的位置。</summary>
      <returns>窗口的位置中的逻辑单元左边缘 (1/96th 每英寸)。</returns>
    </member>
    <member name="P:System.Windows.Window.LogicalChildren">
      <summary>获取窗口的逻辑子元素的枚举器。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 窗口的逻辑子元素。</returns>
    </member>
    <member name="P:System.Windows.Window.OwnedWindows">
      <summary>获取此窗口的所有者窗口的集合。</summary>
      <returns>一个 <see cref="T:System.Windows.WindowCollection" /> ，其中包含对此窗口的所有者窗口的引用。</returns>
    </member>
    <member name="P:System.Windows.Window.Owner">
      <summary>获取或设置 <see cref="T:System.Windows.Window" /> 拥有这 <see cref="T:System.Windows.Window" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Window" /> 对象，表示此所有者 <see cref="T:System.Windows.Window" />。</returns>
      <exception cref="T:System.ArgumentException">窗口尝试拥有其自身- 或 -尝试相互拥有两个窗口。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.Owner" /> 显示使用的可见窗口设置属性 <see cref="M:System.Windows.Window.ShowDialog" />- 或 -<see cref="P:System.Windows.Window.Owner" /> 属性设置为一个以前未显示的窗口。</exception>
    </member>
    <member name="P:System.Windows.Window.ResizeMode">
      <summary>获取或设置调整大小模式。</summary>
      <returns>一个 <see cref="T:System.Windows.ResizeMode" /> 值，该值指定调整大小模式。</returns>
    </member>
    <member name="P:System.Windows.Window.RestoreBounds">
      <summary>最小化或最大化之前获取的大小和窗口的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Rect" /> ，指定的大小和窗口的位置在前最小化或最大化。</returns>
    </member>
    <member name="P:System.Windows.Window.ShowActivated">
      <summary>获取或设置一个值，指示首次显示时，将激活窗口。</summary>
      <returns>true 如果首次显示; 时，将激活窗口否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Window.ShowInTaskbar">
      <summary>获取或设置一个值，该值指示窗口是否具有任务栏按钮。</summary>
      <returns>true 如果窗口具有任务栏按钮;否则为 false。 窗口中托管的浏览器中时不适用。</returns>
    </member>
    <member name="P:System.Windows.Window.SizeToContent">
      <summary>获取或设置一个值，该值指示窗口是否自动调整自身大小以适应其内容大小。</summary>
      <returns>一个 <see cref="T:System.Windows.SizeToContent" /> 值。 默认值为 <see cref="F:System.Windows.SizeToContent.Manual" />。</returns>
    </member>
    <member name="P:System.Windows.Window.TaskbarItemInfo">
      <summary>获取或设置 Windows 7 任务栏缩略图 <see cref="T:System.Windows.Window" />。</summary>
      <returns>Windows 7 任务栏缩略图 <see cref="T:System.Windows.Window" />。</returns>
    </member>
    <member name="P:System.Windows.Window.Title">
      <summary>获取或设置窗口的标题。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含窗口的标题。</returns>
    </member>
    <member name="P:System.Windows.Window.Top">
      <summary>获取或设置窗口的上边缘，相对于桌面的位置。</summary>
      <returns>使用逻辑单位 （1/96 英寸） 的窗口的顶部位置。</returns>
    </member>
    <member name="P:System.Windows.Window.Topmost">
      <summary>获取或设置一个值，该值指示是否在最顶层的 z 顺序中将显示一个窗口。</summary>
      <returns>true 如果窗口为最顶层元素否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowStartupLocation">
      <summary>获取或设置窗口首次显示时的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.WindowStartupLocation" /> 值，该值指定当首次显示一个窗口的顶部/左侧位置。 默认值为 <see cref="F:System.Windows.WindowStartupLocation.Manual" />。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowState">
      <summary>获取或设置一个值，该值指示窗口是还原、 最小化，还是最大化。</summary>
      <returns>一个 <see cref="T:System.Windows.WindowState" /> ，它确定是还原、 最小化，还是最大化窗口。 默认值是 <see cref="F:System.Windows.WindowState.Normal" /> （还原）。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowStyle">
      <summary>获取或设置窗口的边框样式。</summary>
      <returns>一个 <see cref="T:System.Windows.WindowStyle" /> ，它指定窗口的边框样式。 默认值为 <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.Count">
      <summary>获取的数 <see cref="T:System.Windows.Window" /> 中所含对象 <see cref="T:System.Windows.WindowCollection" />。</summary>
      <returns>数 <see cref="T:System.Windows.Window" /> 中所含对象 <see cref="T:System.Windows.WindowCollection" />。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.IsSynchronized">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.WindowCollection" /> 对象是线程安全。</summary>
      <returns>true 如果对象是线程安全的; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.Item(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的指定索引处的对象。</summary>
      <param name="index">指定的索引 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</param>
      <returns>
        <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.SyncRoot">
      <summary>获取可用于同步对集合的访问的对象。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="T:Microsoft.Win32.CommonDialog">
      <summary>用于显示通用的抽象基类 Win32 对话框。</summary>
    </member>
    <member name="T:Microsoft.Win32.FileDialog">
      <summary>一个抽象基类，用于封装文件对话框（包括 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）的通用功能。</summary>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlace">
      <summary>表示将项记入 <see cref="T:Microsoft.Win32.FileDialog" /> 自定义区域列表。</summary>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlaces">
      <summary>在文件对话框中定义自定义区域的已知的的文件夹。</summary>
    </member>
    <member name="T:Microsoft.Win32.OpenFileDialog">
      <summary>表示通用对话框中，用户可以指定一个或多个要打开的文件的文件名。</summary>
    </member>
    <member name="T:Microsoft.Win32.SaveFileDialog">
      <summary>表示通用对话框，用户可以指定要保存为文件的文件名。<see cref="T:Microsoft.Win32.SaveFileDialog" /> 无法在部分信任下执行的应用程序使用。</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>提供用于与设计器进行通信的附加的属性。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Annotation">
      <summary>表示在一个用户的批注 Microsoft Annotations Framework。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAction">
      <summary>指定出现的操作 <see cref="T:System.Windows.Annotations.Annotation" /> 作者、 定位点和货物的资源。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Added">
      <summary>该组件已添加到批注。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Removed">
      <summary>该组件已从批注中移除。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Modified">
      <summary>在批注中修改了该组件。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs">
      <summary> 为 <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> 事件由引发 <see cref="T:System.Windows.Annotations.Annotation" /> 类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationDocumentPaginator">
      <summary>提供了 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 打印文档以及其关联的批注。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationHelper">
      <summary>提供实用工具方法和用于创建和删除突出显示、 墨迹手写便笺和粘滞便笺批注的文本命令。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResource">
      <summary>表示 <see cref="T:System.Windows.Annotations.Annotation" /> 的内容定位点或 cargo 资源。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> 和 <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> 或 <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> 引发的事件 <see cref="T:System.Windows.Annotations.Annotation" /> 类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationService">
      <summary>提供了核心服务的 Microsoft Annotations Framework 用于管理和显示的用户注释。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocator">
      <summary>表示一组有序的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素，这些元素用于标识内容的项。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorBase">
      <summary>表示一个对象，它标识内容的项。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorGroup">
      <summary>表示一组有序的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 元素，这些元素用于标识内容的项。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorPart">
      <summary>表示一组名称/值对，这些名称/值对用于标识内容的项。</summary>
    </member>
    <member name="T:System.Windows.Annotations.IAnchorInfo">
      <summary>匹配的批注与对应的批注对象提供的功能。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.AnnotationStore">
      <summary>当在派生类中重写时，表示写入和读取用户批注的数据存储区。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentAction">
      <summary>指定执行的操作 <see cref="T:System.Windows.Annotations.Annotation" /> 中 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Added">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> 添加到存储。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> 从存储中删除。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件由引发 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 类。</summary>
      <param name="sender">源 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 的事件。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.Storage.XmlStreamStore">
      <summary>表示用于写入和读取用户批注的 XML 数据存储区。</summary>
    </member>
    <member name="T:System.Windows.Annotations.TextAnchor">
      <summary>表示选定批注定位到的内容。</summary>
    </member>
    <member name="T:System.Windows.Application">
      <summary>封装 Windows Presentation Foundation (WPF) 应用程序。</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
      <summary>指定附加属性具有扩展至逻辑树中子元素的可浏览范围。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Button" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>表示一个基类，用于公开元素派生自 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.Calendar" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.CheckBox" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ComboBox" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContentTextAutomationPeer">
      <summary>表示一个基类，可公开 <see cref="T:System.Windows.Automation.TextPattern" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.ContextMenu" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DataGrid" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DataGridCell" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DataGridCell" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer">
      <summary>向 UI 自动化公开 <see cref="T:System.Windows.Controls.DataGrid" /> 中的 <see cref="T:System.Windows.Controls.DataGridColumn" /> 的 <see cref="P:System.Windows.Controls.DataGridColumn.Header" />。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DataGridRow" /> 类型。 内存中实际上可能存在也可能不存在 <see cref="T:System.Windows.Controls.DataGridRow" />。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DataGridRow" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.DatePicker" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DateTimeAutomationPeer">
      <summary>向 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 和 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="F:System.Windows.Automation.ControlType.Document" /> 控件类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.DocumentViewer" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Expander" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FixedPageAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Documents.FixedPage" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Frame" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.FrameworkContentElement" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.FrameworkElement" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.GridSplitter" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.GridView" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.GridView" /> 中的单元格。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.GridView" /> 类型中 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 的集合中的数据项公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.GroupBox" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupItemAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.GroupItem" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Documents.Hyperlink" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Image" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.InkCanvas" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.InkPresenter" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>公开中的数据项 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合与 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.ItemsControl" /> 类型 UI 自动化。 </summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.IViewAutomationPeer">
      <summary>允许的自定义的视图 <see cref="T:System.Windows.Controls.ListView" /> 派生的 <see cref="T:System.Windows.Controls.ViewBase" /> 来实现特定于自定义视图的自动化的对等功能。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.LabelAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Label" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ListBox" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ListBox" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的项。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.ListBox" /> 中数据项的 <see cref="T:System.Windows.UIElement" /> 子树公开到 UI 自动化。 </summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListViewAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ListView" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.MediaElement" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Menu" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuItemAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.MenuItem" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.PasswordBox" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ProgressBar" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.RadioButton" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.RichTextBox" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.ScrollViewer" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的项。 </summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.SeparatorAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Separator" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Slider" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.TabControl" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.TabItem" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.UIElement" /> 中数据项的子树 <see cref="T:System.Windows.Controls.TabControl" /> 到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Documents.Table" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableCellAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Documents.TableCell" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Automation.TextPattern" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.TextBlock" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.TextBox" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextElementAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Documents.TextElement" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolBarAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.ToolBar" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolTipAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.ToolTip" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.TreeView" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer">
      <summary>向 UI 自动化 公开包含数据项的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类型。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.UserControlAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.UserControl" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer">
      <summary>将 <see cref="T:System.Windows.Controls.Viewport3D" /> 类型公开到 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.WindowAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Window" /> 类型 UI 自动化。</summary>
    </member>
    <member name="T:System.Windows.Baml2006.Baml2006Reader">
      <summary>处理优化 BAML 形式的 XAML，并生成 XAML 节点流。</summary>
    </member>
    <member name="T:System.Windows.BaseValueSource">
      <summary>标识特定依赖属性值的属性系统源。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Unknown">
      <summary>源未知。 这是默认值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Default">
      <summary>源是由属性元数据定义的默认值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Inherited">
      <summary>源是通过属性值继承得到的值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyle">
      <summary>源来自默认样式中的资源库。 默认样式来自当前主题。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyleTrigger">
      <summary>源来自默认样式中的触发器。 默认样式来自当前主题。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Style">
      <summary>源来自非主题样式的样式资源库。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.TemplateTrigger">
      <summary>源是某个模板中基于触发器的值，该模板来自非主题样式。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.StyleTrigger">
      <summary>源是非主题样式基于触发器的值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ImplicitStyleReference">
      <summary>源是一个隐式样式引用（样式基于检测到的类型或基类型）。 仅为 Style 属性本身返回该值，而不会为通过此类样式的资源库或触发器设置的属性返回该值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplate">
      <summary>源基于元素所使用的父模板。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplateTrigger">
      <summary>源是一个基于触发器的值，该值来自创建元素的父模板。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Local">
      <summary>源是本地设置的值。</summary>
    </member>
    <member name="T:System.Windows.ColorConvertedBitmapExtension">
      <summary>实现标记扩展，可以实现 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 创建。 一个 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 没有嵌入的配置文件，而是基于源和目标值的配置文件。</summary>
    </member>
    <member name="T:System.Windows.ColumnSpaceDistribution">
      <summary>描述如何将分发中分列式流内容的空间。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Left">
      <summary>之前的第一列分配空间。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Right">
      <summary>之后的最后一列分配空间。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Between">
      <summary>在所有列之间平均分配空间。</summary>
    </member>
    <member name="T:System.Windows.ComponentResourceKey">
      <summary>定义或引用基于外部程序集，以及一个附加标识符中的类名称的资源键。</summary>
    </member>
    <member name="T:System.Windows.Condition">
      <summary>表示条件 <see cref="T:System.Windows.MultiTrigger" /> 和 <see cref="T:System.Windows.MultiDataTrigger" />, ，这将更改应用于基于一组条件的属性值。</summary>
    </member>
    <member name="T:System.Windows.ConditionCollection">
      <summary>表示 <see cref="T:System.Windows.Condition" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.Controls.AccessText">
      <summary>指定一条下划线开头的字符，用作访问密钥。</summary>
    </member>
    <member name="T:System.Windows.Controls.AddingNewItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.AdornedElementPlaceholder">
      <summary>表示中使用的元素 <see cref="T:System.Windows.Controls.ControlTemplate" /> 来指定相对于其他元素中放置修饰的控制 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.AlternationConverter">
      <summary>通过将整数索引作为应用于的对象的列表和从对象转换整数。</summary>
    </member>
    <member name="T:System.Windows.Controls.BooleanToVisibilityConverter">
      <summary>表示将间来回转换布尔值转换器 <see cref="T:System.Windows.Visibility" /> 枚举值。</summary>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>在另一个元素四周绘制边框和/或背景。</summary>
    </member>
    <member name="T:System.Windows.Controls.BorderGapMaskConverter">
      <summary>表示一个转换器，它将 <see cref="T:System.Windows.Controls.GroupBox" /> 控件的维度转换到 <see cref="T:System.Windows.Media.VisualBrush" /> 中。</summary>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>表示 Windows 按钮控件，该按钮对 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件做出反应。</summary>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>表示控件使用户能够通过使用可视月历显示来选择日期。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>表示 <see cref="T:System.Windows.Controls.Calendar" /> 中的非可选日期的集合。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>表示一个范围中的日期范围 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>指定是否 <see cref="T:System.Windows.Controls.Calendar" /> 显示月、 年或十年。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示一个月。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示一年。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示一个十年。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>指定是否可以在选择单个或多个日期 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>您可以选择一个日期。 使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 属性来检索所选的日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>可以选择单个日期范围。 使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性来检索所选的日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>您可以选择多个非连续范围的日期。 使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性来检索所选的日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>不允许选择。</summary>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>定义一个区域，可在其中使用相对于 <see cref="T:System.Windows.Controls.Canvas" /> 区域的坐标以显式方式来定位子元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.CharacterCasing">
      <summary>指定手动键入的字符的大小写 <see cref="T:System.Windows.Controls.TextBox" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Normal">
      <summary>键入的字符 <see cref="T:System.Windows.Controls.TextBox" /> 不予以转换。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Lower">
      <summary>键入的字符 <see cref="T:System.Windows.Controls.TextBox" /> 转换为小写形式。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Upper">
      <summary>键入的字符 <see cref="T:System.Windows.Controls.TextBox" /> 转换为大写形式。</summary>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>表示一个控件，用户可以选择和清除。</summary>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>表示用于处理 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附件事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>指定何时 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 应引发事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>指定 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 按钮按下并释放时，应引发事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>指定 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 只要按下按钮时应引发事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>指定 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 鼠标悬停在控件上时，应引发事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>定义将应用于 <see cref="T:System.Windows.Controls.Grid" /> 元素的特定于列的属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>提供对 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象的有序强类型集合的访问。</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>表示带有下拉列表的选择控件，通过单击控件上的箭头可显示或隐藏下拉列表。</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>在 <see cref="T:System.Windows.Controls.ComboBox" /> 内实现可选择的项。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>表示一段单独的任何类型的内容的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>显示的内容 <see cref="T:System.Windows.Controls.ContentControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContextMenu">
      <summary>表示使控件能够公开特定于控件的上下文的功能的弹出菜单。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventArgs">
      <summary>上下文菜单事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 和 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件，以及等效的 <see cref="T:System.Windows.ContentElement" /> 事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuService">
      <summary>提供用于显示的系统实现 <see cref="T:System.Windows.Controls.ContextMenu" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>表示类的基类 用户界面 (UI) 元素，使用 <see cref="T:System.Windows.Controls.ControlTemplate" /> 来定义其外观。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>指定可视结构和行为方面 <see cref="T:System.Windows.Controls.Control" /> ，可以跨多个控件实例共享。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataErrorValidationRule">
      <summary>表示一个规则，该规则检查由源对象的 <see cref="T:System.ComponentModel.IDataErrorInfo" /> 实现所引发的错误。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGrid">
      <summary>表示可自定义的网格中显示数据的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridBoundColumn">
      <summary>用作基类，可以将绑定到的数据源中的属性的列 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCell">
      <summary>表示的单元格 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellClipboardEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> 和 <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellInfo">
      <summary>表示有关中的特定单元的信息 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellsPanel">
      <summary>表示一个面板，它可以进行布局的单元格和列的数据网格中的标头。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 列，该列承载 <see cref="T:System.Windows.Controls.CheckBox" /> 中其单元格的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCellContent">
      <summary>封装的值和位置 <see cref="T:System.Windows.Controls.DataGrid" /> 单元格中，用于将内容复制到剪贴板时。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCopyMode">
      <summary>定义一些常量，指定用户是否可以将数据从复制 <see cref="T:System.Windows.Controls.DataGrid" /> 控件添加到剪贴板以及是否包括列标题值。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.None">
      <summary>禁用了剪贴板支持。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader">
      <summary>用户可以将选定的单元格的文本值复制到剪贴板中，并且不包括列标头值。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.IncludeHeader">
      <summary>用户可以将选定的单元格的文本值复制到剪贴板，还包括列标题值。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 列。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> 和 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridComboBoxColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 列，该列承载 <see cref="T:System.Windows.Controls.ComboBox" /> 中其单元格的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditAction">
      <summary>定义一些常量，指定是否要编辑取消或提交。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
      <summary>正在取消编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
      <summary>正在提交编辑。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditingUnit">
      <summary>定义常数，指定在单元格级别或行级别上是否启用编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Cell">
      <summary>启用单元格编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Row">
      <summary>启用行编辑。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
      <summary>定义一些常量，指定在网格线的可见性 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.All">
      <summary>这两个水平和垂直网格线均可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal">
      <summary>仅水平网格线是可见的。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.None">
      <summary>没有网格线是可见的。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Vertical">
      <summary>仅垂直网格线是可见的。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
      <summary>定义一些常量，指定行和列标题的可见性 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
      <summary>行和列标题可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
      <summary>只有列标题可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
      <summary>仅行标题可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
      <summary>无标题可见。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHyperlinkColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 列，该列承载 <see cref="T:System.Uri" /> 中其单元格的元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLength">
      <summary>表示内的元素的长度 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthConverter">
      <summary>将各种类型的实例的实例与 <see cref="T:System.Windows.Controls.DataGridLength" /> 类。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthUnitType">
      <summary>定义一些常量，指定如何在元素 <see cref="T:System.Windows.Controls.DataGrid" /> 调整大小。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Auto">
      <summary>大小取决于单元格和列标题的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Pixel">
      <summary>大小为以像素为单位表示的固定的值。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells">
      <summary>大小取决于单元格的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader">
      <summary>大小取决于列标题的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Star">
      <summary>大小是加权的比例的可用空间。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRow">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 行。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowClipboardEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />、<see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> 和 <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
      <summary>定义一些常量，指定何时 <see cref="T:System.Windows.Controls.DataGrid" /> 显示行详细信息。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>行详细信息部分不显示任何行。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible">
      <summary>对于所有的行都显示行详细信息部分。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>仅为选定的行显示行详细信息部分。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> 和 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionMode">
      <summary>定义一些常量，指定是否由支持一个或多项选择 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Single">
      <summary>中的只有一项 <see cref="T:System.Windows.Controls.DataGrid" /> 可以一次选择。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Extended">
      <summary>中的多项 <see cref="T:System.Windows.Controls.DataGrid" /> 可以同时选择。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionUnit">
      <summary>定义一些常量，指定是否单元格、 行或这两种，用于在所选内容 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.Cell">
      <summary>仅单元格是可选的。 单击单元格选择的单元格。 单击行或列标题没有任何影响。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.FullRow">
      <summary>仅完整的行是选择的。 单击单元格或行标题，可以选择整行。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.CellOrRowHeader">
      <summary>单元格和行是选择的。 单击一个单元格可以选择仅的单元格。 单击行标题可以选择整行。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 的 <see cref="T:System.Windows.Controls.DataGrid" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTemplateColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 托管模板指定内容在其单元格的列。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridTextColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 承载在其单元格中的文本内容的列。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataTemplateSelector">
      <summary>提供一种方式，用于根据数据对象和数据绑定元素来选择 <see cref="T:System.Windows.DataTemplate" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>表示允许用户选择一个日期的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>指定的日期格式 <see cref="T:System.Windows.Controls.DatePicker" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>指定应使用未缩写的星期和月份名称显示日期。 此值显示是否等同于返回的字符串的字符串 <see cref="M:System.DateTime.ToLongDateString" /> 方法。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>指定应使用缩写的星期和月份名称显示日期。 此值显示是否等同于返回的字符串的字符串 <see cref="M:System.DateTime.ToShortDateString" /> 方法。</summary>
    </member>
    <member name="T:System.Windows.Controls.Decorator">
      <summary>提供基本类，如应用效果上或单个子元素周围的元素的 <see cref="T:System.Windows.Controls.Border" /> 或 <see cref="T:System.Windows.Controls.Viewbox" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.DefinitionBase">
      <summary>定义支持 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 和 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 类使用的共享大小组所需的功能。 这是一个抽象类。</summary>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>指定 <see cref="T:System.Windows.Controls.DockPanel" /> 内子元素的 <see cref="T:System.Windows.Controls.Dock" /> 位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 左侧的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 顶部的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 右侧的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 底部的子元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.DockPanel">
      <summary>定义一个区域，从中可以按相对位置水平或垂直排列各个子元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.DocumentViewer">
      <summary>表示一个文档查看控件可以承载对分页 <see cref="T:System.Windows.Documents.FixedDocument" /> 内容，例如 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ExceptionValidationRule">
      <summary>表示用于检查绑定源属性更新过程中抛出的异常的规则。</summary>
    </member>
    <member name="T:System.Windows.Controls.ExpandDirection">
      <summary>在其中指定的方向 <see cref="T:System.Windows.Controls.Expander" /> 控件打开。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Down">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件向下打开。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Up">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件打开。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Left">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件向左打开。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Right">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 右侧，控件将打开。</summary>
    </member>
    <member name="T:System.Windows.Controls.Expander">
      <summary>表示一种控件，该控件显示具有可折叠内容显示窗口的标题。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentPageViewer">
      <summary>表示用于在每次显示一页内容的固定的查看模式下查看流内容的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReader">
      <summary>提供用于查看流内容，对多种查看模式的内置支持的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReaderViewingMode">
      <summary>指定查看模式为 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 应显示一次内容一页。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 应显示两页内容一次，类似于打开的书。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 应显示连续滚动模式中的内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentScrollViewer">
      <summary>提供用于在连续滚动模式中查看流内容的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Frame">
      <summary>框架是一种支持导航的内容控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>定义由列和行组成的灵活的网格区域。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridResizeBehavior">
      <summary>指定的行或列通过调整 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment">
      <summary>重新分配空间的值基于 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 和 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.CurrentAndNext">
      <summary>对于水平 <see cref="T:System.Windows.Controls.GridSplitter" />, ，为指定的行之间重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一步是其下方的行。 对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />, ，为指定的列之间重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一步是向右的列。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndCurrent">
      <summary>对于水平 <see cref="T:System.Windows.Controls.GridSplitter" />, ，为指定的行之间重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一步其上面的行。 对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />, ，为指定的列之间重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" /> 和向左的下一列。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndNext">
      <summary>对于水平 <see cref="T:System.Windows.Controls.GridSplitter" />, ，之间的行的上方和下方为指定的行重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" />。 对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />, ，为指定的列的左侧和右侧的列之间重新分配空间 <see cref="T:System.Windows.Controls.GridSplitter" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridResizeDirection">
      <summary>指定是否 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件重新分配空间之间的行或列之间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Auto">
      <summary>重新分配空间的值为基础 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" />, ，<see cref="P:System.Windows.FrameworkElement.VerticalAlignment" />, ，<see cref="P:System.Windows.FrameworkElement.ActualWidth" />, ，和 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 属性 <see cref="T:System.Windows.Controls.GridSplitter" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Columns">
      <summary>列之间重新分配空间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Rows">
      <summary>行之间重新分配空间。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>表示重新分布 <see cref="T:System.Windows.Controls.Grid" /> 控件的列间距或行间距的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridView">
      <summary>表示 <see cref="T:System.Windows.Controls.ListView" /> 控件的以列形式显示数据项的视图模式。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumn">
      <summary>表示显示数据的列。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnCollection">
      <summary>表示 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeader">
      <summary>表示 <see cref="T:System.Windows.Controls.GridViewColumn" /> 的列标题。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeaderRole">
      <summary>定义 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 控件的状态或角色。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Normal">
      <summary>列标题显示在其关联列的上方。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Floating">
      <summary>列标题是用于移动列的拖放操作的对象。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Padding">
      <summary>列标题是列标题行中的最后一个标题，用于填充。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewHeaderRowPresenter">
      <summary>表示定义列标题的行布局所用的对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewRowPresenter">
      <summary>表示指定数据的行布局所用的对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupBox">
      <summary>表示一个控件，该控件用于创建具有针对 用户界面 (UI) 内容的边框和标题的容器。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupItem">
      <summary>显示为组生成的可视子树的根。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupStyle">
      <summary>定义希望组查看每个级别的方式。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupStyleSelector">
      <summary>用于选择组样式作为父组和它的级别的函数委托。</summary>
      <param name="group">其样式未选择的组。</param>
      <param name="level">组级别。</param>
      <returns>适当的组样式。</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedContentControl">
      <summary>提供所有控件的包含单个内容并具有一个标头的基的实现。</summary>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>表示一个控件，其中包含多个项并具有标头。</summary>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationConstraints">
      <summary>指定控件的视区和缓存的大小。 使用此结构的 <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> 接口。</summary>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes">
      <summary>表示控件的标头，以像素为单位和使用逻辑单位的所需的大小。 使用此结构的 <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> 接口。</summary>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes">
      <summary>表示控件的项所需的大小以 device-independent units (1/96th inch per unit) 和使用逻辑单位。</summary>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>表示用于显示图像的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 的 <see cref="T:System.Windows.Controls.DataGrid" /> 事件的方法。</summary>
      <param name="sender">事件的源。</param>
      <param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvas">
      <summary>定义接收并显示墨迹笔画的区域。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasClipboardFormat">
      <summary>指定的格式， <see cref="T:System.Windows.Controls.InkCanvas" /> 将接受从剪贴板。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受墨迹序列化格式 (ISF)。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Text">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受文本。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Xaml">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受"可扩展应用程序标记语言"(XAML) 格式。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasEditingMode">
      <summary>指定的编辑模式 <see cref="T:System.Windows.Controls.InkCanvas" /></summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.None">
      <summary>指示不执行任何操作，当笔将数据发送到 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Ink">
      <summary>指示上显示墨迹 <see cref="T:System.Windows.Controls.InkCanvas" /> 笔时将数据发送到它。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.GestureOnly">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 响应手势，并不会接收墨迹。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.InkAndGesture">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 响应手势，并接收墨迹。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Select">
      <summary>指示触笔上选择笔画和元素 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint">
      <summary>指示笔清除笔划的一部分，当笔与笔画相交。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke">
      <summary>指示笔清除整个笔划，当笔与笔画相交。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 的 <see cref="T:System.Windows.Controls.InkCanvas" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs">
      <summary>将提供数据供 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 的 <see cref="T:System.Windows.Controls.InkCanvas" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 和 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventHandler">
      <summary>表示用于处理在发生更改时引发的两个事件的方法 <see cref="T:System.Windows.Controls.InkCanvas" />: <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件，或 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionHitResult">
      <summary>用标识选择装饰器的各个部分 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.None">
      <summary>选择装饰器的任何部分。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopLeft">
      <summary>选择装饰器左上方控点。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Top">
      <summary>选择装饰器上部中间句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopRight">
      <summary>选择装饰器右上方控点。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Right">
      <summary>选择装饰器的右边缘上中间句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomRight">
      <summary>选择装饰器右下方控点。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Bottom">
      <summary>选择装饰器低中间句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomLeft">
      <summary>选择装饰器左下方控点。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Left">
      <summary>选择装饰器的左边缘中间句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Selection">
      <summary>选择装饰器的边界内的区域。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 的 <see cref="T:System.Windows.Controls.InkCanvas" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>在图面上呈现墨迹。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>包含构成 <see cref="T:System.Windows.Controls.ItemsControl" /> 的内容的项的列表。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>生成 用户界面 (UI)（代表其主机），例如一个 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplate">
      <summary>为生成的容器提供模板 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateKey">
      <summary>提供的资源键 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateSelector">
      <summary>使您能够选择 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 中每个项 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>表示用于呈现的项的集合的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>指定面板的 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 的项的布局为创建 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>项控件的模板中用于指定在控件中的位置的可视化树的位置 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 由定义 <see cref="T:System.Windows.Controls.ItemsControl" /> 要添加。</summary>
    </member>
    <member name="T:System.Windows.Controls.Label">
      <summary>表示控件的文本标签，并提供访问密钥支持。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>包含可选择的项的列表。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>表示中选择的项目 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListView">
      <summary>表示用于显示数据项列表的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListViewItem">
      <summary>表示 <see cref="T:System.Windows.Controls.ListView" /> 控件中的一个项。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>表示包含音频和/或视频的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaState">
      <summary>指定可以对 <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 和 <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 属性应用于 <see cref="T:System.Windows.Controls.MediaElement" /> 的状态。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Manual">
      <summary>用于手动控制 <see cref="T:System.Windows.Controls.MediaElement" /> 的状态。 可以使用交互式方法（如 <see cref="M:System.Windows.Controls.MediaElement.Play" /> 和 <see cref="M:System.Windows.Controls.MediaElement.Pause" />）。 当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配了有效媒体源时，媒体会预先缓冲，但不会播放。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Play">
      <summary>用于播放媒体的状态。 . 当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配了有效媒体源时，媒体会预先缓冲，从而自动播放。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Close">
      <summary>用于关闭媒体的状态。 释放所有媒体资源（包括视频内存）。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Pause">
      <summary>用于暂停媒体的状态。 当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配了有效媒体源时，媒体会预先缓冲，但会保持暂停。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Stop">
      <summary>用于停止媒体的状态。 当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配了有效媒体源时，媒体会预先缓冲，但不会播放。 不释放媒体资源。</summary>
    </member>
    <member name="T:System.Windows.Controls.Menu">
      <summary> 表示一个 Windows 菜单控件，该控件可用于按层次组织与命令和事件处理程序关联的元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuItem">
      <summary>表示内的可选项 <see cref="T:System.Windows.Controls.Menu" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuItemRole">
      <summary> 定义不同的角色， <see cref="T:System.Windows.Controls.MenuItem" /> 可以有。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelItem">
      <summary> 可调用命令的顶级菜单项。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelHeader">
      <summary> 顶级菜单的标头。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuItem">
      <summary> 可调用命令的子菜单中的菜单项。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuHeader">
      <summary> 子菜单的标头。</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuScrollingVisibilityConverter">
      <summary>表示一个数据绑定转换器来处理滚动菜单中的重复按钮的可见性。</summary>
    </member>
    <member name="T:System.Windows.Controls.NotifyDataErrorValidationRule">
      <summary>表示一个用于实现数据源引发的错误检查规则 <see cref="T:System.ComponentModel.INotifyDataErrorInfo" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary> 定义控件或布局可具有的不同方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary> 控件或布局应为水平方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary> 控件或布局应为垂直方向。</summary>
    </member>
    <member name="T:System.Windows.Controls.OverflowMode">
      <summary> 指定如何 <see cref="T:System.Windows.Controls.ToolBar" /> 项放在主工具栏面板中，溢出面板中。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.AsNeeded">
      <summary> 在主面板和溢出面板，具体取决于可用空间之间移动项。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Always">
      <summary> 溢出面板中永久地放置项。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Never">
      <summary> 绝不允许项溢出。</summary>
    </member>
    <member name="T:System.Windows.Controls.Page">
      <summary>封装一页的内容，可以导航到并且由承载 Windows Internet Explorer, ，<see cref="T:System.Windows.Navigation.NavigationWindow" />, ，和 <see cref="T:System.Windows.Controls.Frame" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.PageRange">
      <summary>指定范围的页面。</summary>
    </member>
    <member name="T:System.Windows.Controls.PageRangeSelection">
      <summary>指定是否处理所有的页面或有限范围内的操作，通常打印。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.AllPages">
      <summary>所有页。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.UserPages">
      <summary>用户指定的页范围。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.CurrentPage">
      <summary>当前页。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.SelectedPages">
      <summary>所选的页面。</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>为所有 <see cref="T:System.Windows.Controls.Panel" /> 元素提供基类。 使用 <see cref="T:System.Windows.Controls.Panel" /> 元素放置和排列 Windows Presentation Foundation (WPF) 应用程序中的子对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.PanningMode">
      <summary>指定如何 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.None">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 没有响应触摸屏输入。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 仅水平滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 仅垂直滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.Both">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 水平和垂直滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 执行滚动操作使得用户移动手指时首先水平。  如果用户移垂直第一，移动将被视为鼠标事件。  之后 <see cref="T:System.Windows.Controls.ScrollViewer" /> 开始向下滚动，它将水平和垂直滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 执行滚动操作使得用户移动手指时先垂直。  如果用户移首先水平，移动将被视为鼠标事件。  之后 <see cref="T:System.Windows.Controls.ScrollViewer" /> 开始向下滚动，它将水平和垂直滚动。</summary>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>表示用于输入和处理密码的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
      <summary>介绍了一种方法，依据自动 <see cref="T:System.Windows.Controls.ToolTip" /> 是否定位于 <see cref="T:System.Windows.Controls.Slider" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
      <summary>不自动 <see cref="T:System.Windows.Controls.ToolTip" /></summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" /> 显示自动 <see cref="T:System.Windows.Controls.ToolTip" /> 的上边缘 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。 对于垂直 <see cref="T:System.Windows.Controls.Slider" /> 显示自动 <see cref="T:System.Windows.Controls.ToolTip" /> 在左边缘的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" /> 显示自动 <see cref="T:System.Windows.Controls.ToolTip" /> 的下边缘处 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。 对于垂直 <see cref="T:System.Windows.Controls.Slider" /> 显示自动 <see cref="T:System.Windows.Controls.ToolTip" /> 的右边缘 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.BulletDecorator">
      <summary>表示一个布局控件，该控件将项目符号与另一个可视对象对齐。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>表示所有基类 <see cref="T:System.Windows.Controls.Button" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>在上所表示的月份或年份 <see cref="T:System.Windows.Controls.Calendar" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>表示在某一天 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>表示针对当前所显示的月份或年份 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
      <summary>定义 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的自定义放置参数。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
      <summary>表示为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件提供自定义定位的一种方法。</summary>
      <param name="popupSize">
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的 <see cref="T:System.Windows.Size" />。</param>
      <param name="targetSize">
        <see cref="T:System.Windows.Size" /> 的 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。</param>
      <param name="offset">根据 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和<see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值计算得到的 <see cref="T:System.Windows.Point" />。</param>
      <returns>针对与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 相关的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的可能 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 位置数组。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>使用的模板中 <see cref="T:System.Windows.Controls.DataGrid" /> 其中的单元格为要添加的控件的可视化树中指定的位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>表示单个 <see cref="T:System.Windows.Controls.DataGrid" /> 列标题。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>使用的模板中 <see cref="T:System.Windows.Controls.DataGrid" /> 以指定要添加列标题的位置的控件的可视化树中的位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>使用的模板中 <see cref="T:System.Windows.Controls.DataGrid" /> 以指定要添加行详细信息的位置的控件的可视化树中的位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>表示单个 <see cref="T:System.Windows.Controls.DataGrid" /> 行标头。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>使用的模板中 <see cref="T:System.Windows.Controls.DataGrid" /> 其中的行是要添加的控件的可视化树中指定的位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>表示的文本输入 <see cref="T:System.Windows.Controls.DatePicker" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentPageView">
      <summary>表示分页 <see cref="T:System.Windows.Documents.DocumentPage" /> 的视区。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
      <summary>提供一个基类，用于显示的查看者固定或流内容 (由表示 <see cref="T:System.Windows.Documents.FixedDocument" /> 或 <see cref="T:System.Windows.Documents.FlowDocument" />, 分别)。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>提供以下信息 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 用户完成拖动操作使用的鼠标时发生的事件 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>提供以下信息 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件而出现了当用户拖动的一个或多个次 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用鼠标。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>提供以下信息 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 当用户拖动时发生的事件 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 使用鼠标...</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>指定哪一项生成将发生的方向。<see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> 通过使用 <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>指定以生成在一个向前方向的项。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>指定以生成在向后方向的项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 用于描述由管理的项的位置 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
      <summary>使用 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 以指示其项生成的状态。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
      <summary>生成器未尝试生成内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
      <summary>生成器正在生成容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
      <summary>生成器已完成生成容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
      <summary>生成器已完成生成容器，但遇到了一个或多个错误。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
      <summary>表示定义的不同列中显示不同的数据项的位置的数据行的布局的类的基类。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IContainItemStorage">
      <summary>提供项面板的属性包实现。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo">
      <summary>提供的属性显示分层数据的控件，通过它与通信 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>由负责生成的类实现的接口 用户界面 (UI) 内容代表一台主机。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>扩展 <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> 接口以重用它所生成的 UI 内容。 负责生成代表主机的用户界面 (UI) 内容的类实现此接口。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件内的主要可滚动区域。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>表示将处理的方法  <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>定义提供有关布局元素的状态的附加信息的方法。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MenuBase">
      <summary>表示定义供用户选择的选项的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MultiSelector">
      <summary>允许选择多个项的控件提供一个抽象类。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>描述在何处放置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 屏幕上显示的控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件相对于窗口左上角的屏幕和定义的某个偏移量 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值。 如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会自身以与边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 相对于窗口左上角的控件 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 和定义的某个偏移量 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值。 如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会重新定位自身以与屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控制该控件将其上边缘的下边缘与对齐其中 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> ，并将其左边的缘与左边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，控件会重新定位自身，以便其下边缘与的上边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会本身以便其上边缘与屏幕上边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件上居中位置 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会重新定位自身以与屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 对齐，左边的缘的右边缘的控件 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> ，并将其上边缘与的上边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕右边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，控件会重新定位自身，以便其左边的缘与左边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕左边的缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，控件会重新定位自身，以便其左边的缘与屏幕左边缘对齐。 如果屏幕上或下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会自身以与遮盖的屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件相对于窗口左上角的屏幕和定义的某个偏移量 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值。 如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，控件扩展中定义的轴方向相反 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 或 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />=。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 相对于窗口左上角的控件 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 和定义的某个偏移量 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值。 如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, 、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 从来自定义的轴方向相反的方向扩展 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 或 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />。 如果相反的屏幕边缘也遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，该控件然后将与此屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>位置的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 对齐上, 边缘的边框的鼠标的下边缘，并将其左边的缘与鼠标的边界框的左边缘对齐的控件。 如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，它重新定位自身以与鼠标的边界框的上边缘对齐。 如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会重新定位自身以与屏幕上边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 相对于鼠标光标的和由定义的某个偏移量的提示的控件 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值。 如果屏幕水平或垂直边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，它将打开以相反方向从遮盖的边缘。 如果相反的屏幕边缘也遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，然后将与进行遮盖屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>一个 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 来将其右边缘与左边缘对齐控件 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> ，并将其上边缘与的上边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕左边的缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, 、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 重新定位自身，以便其左边的缘与右边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕右边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，该控件的右边缘与屏幕右边对齐。 如果屏幕上或下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，则控件会重新定位自身以与遮盖的屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>中的位置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 来将下边缘与的上边缘对齐控件 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> ，并将其左边的缘与左边缘对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，控件会重新定位自身，以便其上边缘的下边缘与对齐 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。 如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，该控件的下边缘与较低的屏幕边缘对齐。 如果左侧或右侧屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />, ，然后重新定位自身以符合遮盖的屏幕。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
      <summary>位置和重新定位行为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 由定义的控件  <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 指定的委托 <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>表示具有内容的弹出窗口。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupAnimation">
      <summary>描述 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在打开时如何显示动画。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在显示时不呈现动画。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件会逐渐显示或淡出。 可通过随时间增加 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 窗口的不透明度来创建此效果。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件向下或向上滑入到位。 默认情况下，<see cref="T:System.Windows.Controls.Primitives.Popup" /> 向下滑。 不过，如果屏幕未提供 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 向下滑的足够空间，则它将改为向上滑。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件从其父级的左上角滚动。 如果屏幕未提供足够的空间以允许 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 默认行为，则 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 改为从右下角滚动。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
      <summary>描述为了增加可见的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 量，而需要朝哪个方向移动 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件根据默认的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 行为更改位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件通过先沿屏幕的水平轴移动，再沿屏幕的垂直轴移动来更改位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件通过先沿屏幕的垂直轴移动，再沿屏幕的水平轴移动来更改位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>表示具有特定范围内的值的元素。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>表示控件引发其 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 重复中按下，则它将被释放之前的时间的事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ResizeGrip">
      <summary>表示 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的一种实现，该控件使 <see cref="T:System.Windows.Window" /> 能改变其自身的大小。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>表示提供滚动条的控件，该滚动条具有一个滑动 <see cref="T:System.Windows.Controls.Primitives.Thumb" />，其位置对应于一个值。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>将提供数据供 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 时发生的事件时 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 移动。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>表示用于处理 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动时发生的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>描述导致的行为 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 拖动到新位置，现在不再所拖动的用户。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 位置 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，按 CTRL + HOME 键时，会发生这种移动。 此移动对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" /> 混排 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 和 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" /> 按水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动指定的距离，所确定的值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, ，对于水平左侧 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 或对于垂直向上 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，是上面的页按钮时发生这种移动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 按下时，或 PAGE UP 键，按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，会发生这种移动的页左侧的按钮 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动指定的距离，所确定的值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />, ，对于水平右侧 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 或向下对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，是下面的页按钮时发生这种移动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 按下时，或 PAGE DOWN 键，按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，会发生这种移动的页右侧的按钮 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 位置 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，按 CTRL + END 键时，会发生这种移动。 此移动对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" /> 混排 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 和 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" /> 按水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动一小段距离，所确定的值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, ，对于水平左侧 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 或对于垂直向上 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，会发生这种移动时上限 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 情况下按下或向上箭头键，按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，会发生这种移动时左侧 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动一小段距离，所确定的值 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />, ，对于水平右侧 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 或向下对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，这种移动时发生越低 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 情况下按下或向下箭头键，按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，会发生这种移动时右 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 按下时，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动到新位置，因为在用户选择 滚动至 的快捷菜单中 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。 此移动对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" />。 若要查看的快捷菜单，用鼠标右键单击鼠标时在指针位于 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 是拖放和导致 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件。 一个 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 这样的事件 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 可能出现超过一次时 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 中拖动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid">
      <summary>可以指定单元格就地保存该视图滚动时面板。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>表示允许用户选择从其子元素的项的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBar">
      <summary>表示应用程序窗口中的水平栏中显示项和信息的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBarItem">
      <summary>表示的项 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>处理的布局 <see cref="T:System.Windows.Controls.TabItem" /> 上的对象 <see cref="T:System.Windows.Controls.TabControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TextBoxBase">
      <summary>一个为文本编辑控件，包括提供功能的抽象基类 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>表示可以由用户拖动的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBar">
      <summary>表示一个控件，该控件为 <see cref="T:System.Windows.Controls.Slider" /> 控件绘制一组刻度线。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
      <summary>指定的位置 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 相对于 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
      <summary>刻度条位于左侧的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
      <summary>刻度条放置上面 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
      <summary>刻度条放置到右侧 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
      <summary>刻度条放置下面 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickPlacement">
      <summary>对于 <see cref="T:System.Windows.Controls.Slider" /> 控件实现的 <see cref="T:System.Windows.Controls.Primitives.Track" />，指定该控件中刻度线的位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
      <summary>未显示刻度线。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 上方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 左侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 下方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 右侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 上方和下方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线显示在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 左侧和右侧。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>基类，控件可以切换状态，如 <see cref="T:System.Windows.Controls.CheckBox" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
      <summary>用于排列溢出 <see cref="T:System.Windows.Controls.ToolBar" /> 项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
      <summary>排列 <see cref="T:System.Windows.Controls.ToolBar" /> 项内 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Track">
      <summary>表示控件的基元，处理的位置和大小 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件和两个 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件用于设置 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.UniformGrid">
      <summary>提供了一种方法来排列在网格中的所有单元格具有相同的大小的其中一个网格中的内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.PrintDialog">
      <summary>调用标准 Microsoft Windows 打印对话框中，用于配置 <see cref="T:System.Printing.PrintTicket" /> 和 <see cref="T:System.Printing.PrintQueue" /> 根据用户输入，然后打印文档。</summary>
    </member>
    <member name="T:System.Windows.Controls.PrintDialogException">
      <summary>在打开，访问，也可以使用的过程中出现错误条件时引发的异常 PrintDialog。</summary>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>指示操作的进度。</summary>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>表示一个按钮，可以选择，但不是会清除，由用户。<see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 属性 <see cref="T:System.Windows.Controls.RadioButton" /> 可以通过单击它，设置，但它可以只以编程方式清除。</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>表示对 <see cref="T:System.Windows.Documents.FlowDocument" /> 对象进行操作的丰富编辑控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>定义将应用于 <see cref="T:System.Windows.Controls.Grid" /> 元素的特定于行的属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>提供对 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象的有序强类型集合的访问。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>指定的可见性 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的可滚动的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 不即使不会出现在视区无法显示的所有内容。 内容的维度设置为相应的维度的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 父级。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的宽度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的高度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 出现和维度的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 视区无法显示的所有内容时应用于内容。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的宽度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的高度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 不即使不会出现在视区无法显示的所有内容。 维度的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 不应用于内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 始终显示。 维度的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 应用于内容。 对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的宽度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。 对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />, ，内容的高度设置为 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventArgs">
      <summary>描述了滚动状态的更改，并包括 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 事件的必需参数。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>显示的内容 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollUnit">
      <summary>指定的类型使用的单元 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 测量的 device-independent units (1/96th inch per unit)。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 面板中显示的项方面度量。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>表示可包含其他可视元素的可滚动区域。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 的 <see cref="T:System.Windows.Controls.DataGrid" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>表示 <see cref="T:System.Windows.Controls.Calendar" /> 中一组选中的日期。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>定义的所选内容行为 <see cref="T:System.Windows.Controls.ListBox" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>用户可以选择一次只有一个项目。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>用户可以选择多个项，而无需保持下修改键。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>用户可以在按住 SHIFT 键的同时选择多个连续的项。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectiveScrollingOrientation">
      <summary>指定的方向， <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> 面板可以滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.None">
      <summary>面板中不滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Horizontal">
      <summary>面板沿水平方向滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Vertical">
      <summary>面板在垂直方向滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Both">
      <summary>面板将在水平和垂直方向滚动。</summary>
    </member>
    <member name="T:System.Windows.Controls.Separator">
      <summary> 用于分隔项控件中的项的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>表示一个控件，该控件可让用户通过沿 <see cref="T:System.Windows.Controls.Primitives.Track" /> 移动 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 控件从一个值范围中进行选择。</summary>
    </member>
    <member name="T:System.Windows.Controls.SoundPlayerAction">
      <summary>表示播放轻型音频 <see cref="T:System.Windows.TriggerAction" /> 用于播放.wav 文件。</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellCheck">
      <summary>为文本编辑控件（如 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />）提供实时拼写检查功能。</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellingError">
      <summary>表示编辑控件（例如 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />）中拼写错误的单词。</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellingReform">
      <summary>指定使用拼写检查器的文本编辑控件的拼写改革规则 (即 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />)。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.PreAndPostreform">
      <summary>使用从之前和之后拼写改革的拼写规则。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Prereform">
      <summary>使用从拼写改革之前的拼写规则。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Postreform">
      <summary>使用拼写改革之后的拼写规则。</summary>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>将子元素排列成水平或垂直的一行。</summary>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteControl">
      <summary>表示一个控件，该控件允许用户在文档中附加键入的文本或手写的批注。</summary>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteType">
      <summary>指定是否 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 接受文本或手写内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Text">
      <summary>文本的粘滞便笺。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Ink">
      <summary>墨迹手写便笺。</summary>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>描述如何对内容应用缩放，并限制对已命名像素类型的缩放。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>内容仅在小于父级时扩展。 如果内容较大，则不执行缩放。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>内容仅在大于父级时缩放。 如果内容较小，则不会执行任何扩展。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>内容将根据 <see cref="T:System.Windows.Media.Stretch" /> 模式进行拉伸以适应父级。</summary>
    </member>
    <member name="T:System.Windows.Controls.StyleSelector">
      <summary>使您能够根据自定义逻辑应用样式。</summary>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>表示包含多个共享相同的空间在屏幕上的项的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>表示内的可选项 <see cref="T:System.Windows.Controls.TabControl" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>提供一个轻型控件，用于显示少量流内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>表示一个控件，该控件可用于显示或编辑无格式文本。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChange">
      <summary>包含有关发生的更改的信息 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
      <summary>使用户能够快速访问通过键入的字符串的前缀的一组中的项。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolBar">
      <summary>提供为一组命令或控件的容器。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolBarTray">
      <summary>表示处理的布局的容器 <see cref="T:System.Windows.Controls.ToolBar" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>表示一个控件，该控件可创建一个弹出窗口，以便在界面中显示元素的信息。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventArgs">
      <summary>提供工具提示打开或关闭时所发生事件的事件信息。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventHandler">
      <summary>表示用于处理在工具提示打开和关闭时发生的路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>表示一项服务，该服务提供用于控制工具提示的显示和行为的属性和事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>表示一个控件，该控件在树结构(其中的项可以展开和折叠)中显示分层数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>在 <see cref="T:System.Windows.Controls.TreeView" /> 控件中实现可选择的项。</summary>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>表示 <see cref="T:System.Windows.UIElement" /> 子元素的有序集合。</summary>
    </member>
    <member name="T:System.Windows.Controls.UndoAction">
      <summary>如何撤消堆栈导致或受到文本更改的影响。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.None">
      <summary>此更改将不会影响撤消堆栈根本 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Merge">
      <summary>此更改将合并到上一个撤消单元 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Undo">
      <summary>此更改是对 undo （） 调用的结果 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Redo">
      <summary>此更改是对 Redo() 的调用的结果 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Clear">
      <summary>此更改将清除撤消堆栈 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Create">
      <summary>此更改将创建新的撤消单元 </summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>提供创建的控件的简单方法。</summary>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>提供支持数据验证的方法和附加属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>表示一个验证错误，该错误在 <see cref="T:System.Windows.Controls.ValidationRule" /> 报告验证错误时由绑定引擎创建，或者通过 <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> 方法显式创建。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>描述是否 <see cref="T:System.Windows.Controls.ValidationError" /> 添加对象或将其清除。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>一个新 <see cref="T:System.Windows.Controls.ValidationError" /> 检测到对象。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>现有 <see cref="T:System.Windows.Controls.ValidationError" /> 对象已被清除。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>提供 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的相关信息。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationResult">
      <summary>表示返回的结果 <see cref="T:System.Windows.Controls.ValidationRule" />。<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> 方法，该值指示是否将选中的值传递 <see cref="T:System.Windows.Controls.ValidationRule" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationRule">
      <summary>提供创建自定义规则的一个方式，旨在检查用户输入的有效性。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationStep">
      <summary>指定何时 <see cref="T:System.Windows.Controls.ValidationRule" /> 运行。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.RawProposedValue">
      <summary>运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 任何转换之前。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue">
      <summary>运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 的值将转换后。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.UpdatedValue">
      <summary>运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 更新源之后。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.CommittedValue">
      <summary>运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 已提交到源值之后。</summary>
    </member>
    <member name="T:System.Windows.Controls.ViewBase">
      <summary>表示定义 <see cref="T:System.Windows.Controls.ListView" /> 控件中数据外观的视图的基类。</summary>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>定义一个内容装饰器，以便拉伸或缩放单一子项使其填满可用的控件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Viewport3D">
      <summary>呈现 <see cref="T:System.Windows.Controls.Viewport3D" /> 元素的 2-D 布局范围内包含的 3-D 内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLength">
      <summary>表示的度量值 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthConverter">
      <summary>将对象转换间来回 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthUnit">
      <summary>指定的类型使用的单元 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 测量的 device-independent units (1/96th inch per unit)。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 面板中显示的项方面度量。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 方面一个页面，它等同于面板的视区的大小度量。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>指定的方法 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 用于管理虚拟化其子项。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>创建并放弃项容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>重用项容器。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>提供了一个框架，用于 <see cref="T:System.Windows.Controls.Panel" /> 虚拟化其子数据集合的元素。 这是一个抽象类。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>在水平或垂直的一行中排列并显示内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>承载 HTML 文档并在其之间导航。 启用 WPF 托管代码和 HTML 脚本之间的互操作性。</summary>
    </member>
    <member name="T:System.Windows.Controls.WrapPanel">
      <summary>定位子元素按顺序排列，从左到右，将内容断开到下一行包含框的边缘。 后续排序按照按顺序从上到下或从右到左，具体取决于值 <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>表示矩形的角的半径。</summary>
    </member>
    <member name="T:System.Windows.CornerRadiusConverter">
      <summary>其他类型的实例之间来回进行转换 <see cref="T:System.Windows.CornerRadius" />。</summary>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>提供对绑定定义的高级访问，该绑定连接绑定目标对象（通常为 WPF 元素）的属性和任何数据源（例如数据库、XML 文件，或包含数据的任何对象）。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>定义的共性 <see cref="T:System.Windows.Data.Binding" />, ，<see cref="T:System.Windows.Data.PriorityBinding" />, ，和 <see cref="T:System.Windows.Data.MultiBinding" /> 类。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.Binding" /> 的单个实例的信息。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>表示类的基类 <see cref="T:System.Windows.Data.BindingExpression" />, ，<see cref="T:System.Windows.Data.PriorityBindingExpression" />, ，和 <see cref="T:System.Windows.Data.MultiBindingExpression" />。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingGroup">
      <summary>包含绑定的集合和 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，用于验证对象。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingListCollectionView">
      <summary>表示实现 <see cref="T:System.ComponentModel.IBindingList" /> 的集合的 <see cref="T:System.Windows.Data.CollectionView" />，例如 Microsoft ActiveX Data Objects (ADO) 数据视图。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>描述绑定中数据流的方向。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>导致更改源属性或目标属性时自动更新另一方。 此类型的绑定适用于可编辑窗体或其他完整交互式的 UI 方案。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>在更改绑定源（源）时更新绑定目标（目标）。 如果绑定的控件为隐式只读，则此类型的绑定适用。 例如，你可能绑定到股票代码等源。 或者可能是未向目标属性提供控件接口来进行更改，例如表的数据绑定背景色。 如果无需监视目标属性的更改，则使用 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定模式可避免 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 绑定模式的系统开销。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>在应用程序启动或数据上下文更改时，更新绑定目标。 如果你在适合使用当前状态的快照或数据实际为静态数据的位置使用数据，则此类型的绑定适合。 如果你想使用源属性中的某个值来初始化目标属性，且提前不知道数据上下文，则此类型的绑定也有用。 这是实质上是 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定的一种简化形式，它在源值不更改的情况下提供更好的性能。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWayToSource">
      <summary>在目标属性更改时，更新源属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.Default">
      <summary>使用绑定目标的默认 <see cref="P:System.Windows.Data.Binding.Mode" /> 值。 每个依赖属性的默认值都不同。 通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。 确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>提供用于操作绑定的静态方法，包括 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingStatus">
      <summary>描述绑定的状态。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Unattached">
      <summary>绑定尚未附加到其目标属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Inactive">
      <summary>尚未激活绑定。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Active">
      <summary>已成功激活绑定。 这意味着绑定已附加到其绑定目标（目标）属性，并且已找到绑定源（源），解析了 Path 和/或 XPath，并开始传输值。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Detached">
      <summary>此绑定已从它的目标属性中分离。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <summary>绑定正在等待异步操作完成。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.PathError">
      <summary>绑定无法解析源路径。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <summary>绑定无法成功返回源值以更新目标值。 有关更多信息，请参阅 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 中的备注部分。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <summary>绑定无法将值发送到源属性。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionContainer">
      <summary>保留现有的集合结构，如 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 或 <see cref="T:System.Data.DataSet" />，以在 <see cref="T:System.Windows.Data.CompositeCollection" /> 中使用。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionRegisteringEventArgs">
      <summary>为 <see cref="E:System.Windows.Data.BindingOperations.CollectionRegistering" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionSynchronizationCallback">
      <summary>表示将进行同步的跨线程访问集合的方法。</summary>
      <param name="collection">要在创建它的一个以外的线程上访问的集合。</param>
      <param name="context">用于同步集合的对象。</param>
      <param name="accessMethod">对集合执行操作方法的委托。</param>
      <param name="writeAccess">true 如果 <paramref name="accessMethod" /> 写入集合; 否则为 false。</param>
    </member>
    <member name="T:System.Windows.Data.CollectionView">
      <summary>表示用于对数据集合进行分组、排序、筛选和导航的视图。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>表示根据 <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> 由 <see cref="T:System.Windows.Data.CollectionView" /> 对象创建的组。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <summary>为 <see cref="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> 类的 可扩展应用程序标记语言 (XAML) 代理。</summary>
    </member>
    <member name="T:System.Windows.Data.CompositeCollection">
      <summary>允许将多个集合和项作为一个列表显示。</summary>
    </member>
    <member name="T:System.Windows.Data.DataChangedEventManager">
      <summary>提供了 <see cref="T:System.Windows.WeakEventManager" /> 实现，以便您可以使用"弱事件侦听器"模式将附加的侦听器 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Data.DataTransferEventArgs">
      <summary>封装数据传输事件的参数。</summary>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>提供与相关联的信息和事件数据 <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>表示用来处理 <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>表示一个可用于提供自定义逻辑来选择方法 <see cref="T:System.ComponentModel.GroupDescription" /> 基于父组和它的级别。</summary>
      <param name="group">父组中。</param>
      <param name="level">程度 <paramref name="group" />。</param>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 选择基于父组和它的级别。</returns>
    </member>
    <member name="T:System.Windows.Data.IMultiValueConverter">
      <summary>提供在 <see cref="T:System.Windows.Data.MultiBinding" /> 中应用自定义逻辑的方法。</summary>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>提供将自定义逻辑应用于绑定的方法。</summary>
    </member>
    <member name="T:System.Windows.Data.ListCollectionView">
      <summary>表示实现 <see cref="T:System.Collections.IList" /> 的集合的集合视图。</summary>
    </member>
    <member name="T:System.Windows.Data.MultiBinding">
      <summary>描述附加到单个绑定目标属性的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合。</summary>
    </member>
    <member name="T:System.Windows.Data.MultiBindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.MultiBinding" /> 的单个实例的实例信息。</summary>
    </member>
    <member name="T:System.Windows.Data.ObjectDataProvider">
      <summary>包装和创建可以用作绑定源的对象。</summary>
    </member>
    <member name="T:System.Windows.Data.PriorityBinding">
      <summary>描述附加到单个绑定目标属性的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合，该属性从成功生成值的集合中的第一个绑定接收其值。</summary>
    </member>
    <member name="T:System.Windows.Data.PriorityBindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.PriorityBinding" /> 的单个实例的实例信息。</summary>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>描述使用属性名作为条件对项进行分组。</summary>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>实现一个标记扩展，该扩展描述相对于绑定目标位置的绑定源位置。</summary>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>描述与绑定目标的位置相对的绑定源位置。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <summary>允许在当前显示的数据项列表中绑定上一个数据项（不是包含数据项的控件）。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>引用应用了模板的元素，其中此模板中存在数据绑定元素。 这类似于设置 <see cref="T:System.Windows.TemplateBindingExtension" />，且仅在 <see cref="T:System.Windows.Data.Binding" /> 位于模板内部时适用。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>引用正在其上设置绑定的元素，并允许你将该元素的一个属性绑定到同一元素的其他属性上。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <summary>引用数据绑定元素的父链中的上级。 这可用于绑定到特定类型的上级或其子类。 若要指定 <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 和/或 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />，这就是应使用的模式。</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <summary>表示处理绑定源值更新过程中引发的异常的方法。 它必须与 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 一起使用。</summary>
      <param name="bindExpression">出现异常的对象。</param>
      <param name="exception">遇到的异常。</param>
      <returns>通常为下列某项的对象：值说明null将忽略任何异常。 默认行为 (如果没有任何 <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) 是创建 <see cref="T:System.Windows.Controls.ValidationError" /> 与该异常并将其添加到 <see cref="P:System.Windows.Controls.Validation.Errors" /> 绑定元素的集合。任何对象若要创建 <see cref="T:System.Windows.Controls.ValidationError" /> 对象 <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> 将设置为该对象。<see cref="T:System.Windows.Controls.ValidationError" /> 对象添加到 <see cref="P:System.Windows.Controls.Validation.Errors" /> 绑定元素的集合。一个 <see cref="T:System.Windows.Controls.ValidationError" /> 对象若要设置 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象作为 <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />。<see cref="T:System.Windows.Controls.ValidationError" /> 对象添加到 <see cref="P:System.Windows.Controls.Validation.Errors" /> 绑定元素的集合。</returns>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>描述绑定源更新的计时。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>绑定目标属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。 大多数依赖属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>每当绑定目标属性发生更改时，都会更新绑定源。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <summary>每当绑定目标元素失去焦点时，都会更新绑定源。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>仅在调用 <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> 方法时更新绑定源。</summary>
    </member>
    <member name="T:System.Windows.Data.ValueConversionAttribute">
      <summary>表示允许值转换器的作者指定转换器的实现中涉及的数据类型的特性。</summary>
    </member>
    <member name="T:System.Windows.Data.ValueUnavailableException">
      <summary>通过引发的异常 <see cref="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" /> 值不可用时的方法。</summary>
    </member>
    <member name="T:System.Windows.Data.XmlDataProvider">
      <summary>允许以声明方式访问数据绑定的 XML 数据。</summary>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMapping">
      <summary>声明 uniform resource identifier (URI) 和前缀之间的映射。</summary>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <summary>表示 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>介绍数据对象的可视结构。</summary>
    </member>
    <member name="T:System.Windows.DataTemplateKey">
      <summary>表示的资源键 <see cref="T:System.Windows.DataTemplate" /> 类。</summary>
    </member>
    <member name="T:System.Windows.DataTrigger">
      <summary>表示一个应用属性值或执行操作时，如果绑定的数据满足指定的条件的触发器。</summary>
    </member>
    <member name="T:System.Windows.DeferrableContent">
      <summary>表示可以推迟保留在流的形式的 BAML 中的内容。</summary>
    </member>
    <member name="T:System.Windows.DeferrableContentConverter">
      <summary>将转换到的流 <see cref="T:System.Windows.DeferrableContent" /> 实例。</summary>
    </member>
    <member name="T:System.Windows.DependencyPropertyHelper">
      <summary>提供一个帮助器方法 (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />)，用于报告依赖属性的有效值的属性系统源。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryDiagnostics">
      <summary>支持的泛型和主题枚举 <see cref="T:System.Windows.ResourceDictionary" /> 实例，并且侦听加载和卸载提供通知基础结构 <see cref="T:System.Windows.ResourceDictionary" /> 实例。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryInfo">
      <summary>表示有关的信息 <see cref="T:System.Windows.ResourceDictionary" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> 和 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs">
      <summary>为 <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.DialogResultConverter">
      <summary>将转换 <see cref="P:System.Windows.Window.DialogResult" /> 属性，它是 <see cref="T:System.Nullable`1" /> 类型的值 <see cref="T:System.Boolean" />, 、 与其他类型。</summary>
    </member>
    <member name="T:System.Windows.Documents.Adorner">
      <summary>表示修饰 <see cref="T:System.Windows.UIElement" /> 的 <see cref="T:System.Windows.FrameworkElement" /> 的抽象类。</summary>
    </member>
    <member name="T:System.Windows.Documents.AdornerDecorator">
      <summary>为可视化树中的子元素提供 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <exception cref="T:System.ArgumentException">试图将多个子级添加到 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</exception>
    </member>
    <member name="T:System.Windows.Documents.AdornerLayer">
      <summary>表示用于呈现装饰器的图面。</summary>
    </member>
    <member name="T:System.Windows.Documents.AnchoredBlock">
      <summary>一个抽象类，提供有关基本 <see cref="T:System.Windows.Documents.Inline" /> 使用元素的锚定 <see cref="T:System.Windows.Documents.Block" /> 流内容的元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>为所有块级别流内容元素提供基类的抽象类。</summary>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.Block" /> 元素的集合。<see cref="T:System.Windows.Documents.BlockCollection" /> 定义 <see cref="T:System.Windows.Documents.FlowDocument" />、<see cref="T:System.Windows.Documents.Section" />、<see cref="T:System.Windows.Documents.ListItem" />、<see cref="T:System.Windows.Documents.TableCell" />、<see cref="T:System.Windows.Documents.Floater" /> 和 <see cref="T:System.Windows.Documents.Figure" /> 元素允许的子内容。</summary>
    </member>
    <member name="T:System.Windows.Documents.BlockUIContainer">
      <summary>一个数据块级别流内容元素，从而使 <see cref="T:System.Windows.UIElement" /> 元素 (即 <see cref="T:System.Windows.Controls.Button" />) 要嵌入 （托管） 在流内容中。</summary>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>一个内联级流内容元素，该元素使内容使用粗体的字体粗细进行呈现。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentReference">
      <summary>提供访问权限以引用 <see cref="T:System.Windows.Documents.FixedDocument" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentReferenceCollection">
      <summary>定义的排序的列表 <see cref="T:System.Windows.Documents.DocumentReference" /> 元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
      <summary>请勿使用。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
      <summary>表示绘图、 图表或文档中的图表。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
      <summary>表示列表或大纲中的项。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
      <summary>表示在文档中的项的列表。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
      <summary>标识元素下的层次结构中的某个元素 <see cref="T:System.Windows.Documents.FixedPage" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
      <summary>表示在文档中的段落。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
      <summary>表示文档中的内容的部分。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
      <summary>一个 XML 元素中的标记 XML Paper Specification (XPS) 文档。 </summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
      <summary>标识的开始或结束组成一个或多个情景 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
      <summary>表示一篇文章中的全部或部分 XPS 文档。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
      <summary>表示一组的一个或多个 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
      <summary>表示一个表中的单元格。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
      <summary>表示一组表中的一个或多个行。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
      <summary>表示一个或多个表的单元格的行。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
      <summary>表示在文档中的表。</summary>
    </member>
    <member name="T:System.Windows.Documents.EditingCommands">
      <summary>提供一组标准编辑相关的命令。</summary>
    </member>
    <member name="T:System.Windows.Documents.Figure">
      <summary>用来承载图形内联级别的流内容元素。  一个 图 是流的一部分内容可以独立自定义从主要内容流中的放置属性替换 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedDocument">
      <summary>用于托管对用户文本选择、键盘导航和搜索具有读访问权限的可移植、高保真和格式固定的文档。</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedDocumentSequence">
      <summary>承载定义一系列固定文档的一个或多个 <see cref="T:System.Windows.Documents.DocumentReference" /> 元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedPage">
      <summary>为固定格式的高保真页面提供内容。</summary>
    </member>
    <member name="T:System.Windows.Documents.Floater">
      <summary>提供用于承载一个浮标的内联级别的流内容元素。 一个 浮标 显示图像和其他内容中的主要内容流并行 <see cref="T:System.Windows.Documents.FlowDocument" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.FlowDocument">
      <summary>用高级文档功能（如分页和列）承载流内容和设置流内容格式。</summary>
    </member>
    <member name="T:System.Windows.Documents.FrameworkRichTextComposition">
      <summary>  表示一种组合，与文本输入相关。 此类可用于查找撰写或结果字符串的文本位置。</summary>
    </member>
    <member name="T:System.Windows.Documents.FrameworkTextComposition">
      <summary>表示一种组合，在文本输入事件的过程 <see cref="T:System.Windows.Controls.TextBox" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
      <summary> 为 <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" />  事件 <see cref="T:System.Windows.Documents.PageContent" />  类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>表示用于呈现固定文本的字形集。</summary>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>提供用于在流内容中承载超链接的功能的内联级别的流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>为所有内联流内容元素提供基类的抽象类。</summary>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.Inline" /> 元素的集合。<see cref="T:System.Windows.Documents.InlineCollection" /> 定义 <see cref="T:System.Windows.Documents.Paragraph" />、<see cref="T:System.Windows.Documents.Span" /> 和 <see cref="T:System.Windows.Controls.TextBlock" /> 元素允许的子内容。</summary>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>内联级别的流内容元素，从而使 <see cref="T:System.Windows.UIElement" /> 元素 (即 <see cref="T:System.Windows.Controls.Button" />) 要嵌入 （托管） 在流内容中。</summary>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>提供将导致内容以倾斜字体样式呈现的内联级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>一个内联流内容元素，该元素导致换行符在流内容中出现。</summary>
    </member>
    <member name="T:System.Windows.Documents.LinkTarget">
      <summary>表示可从其他文档或同一文档中的其他位置链接到的页面上的元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.LinkTargetCollection">
      <summary>提供 <see cref="T:System.IO.Packaging.Package" /> 中所有 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的集合。</summary>
    </member>
    <member name="T:System.Windows.Documents.List">
      <summary>提供用于在未排序或未排序的列表提供内容的功能块级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItem">
      <summary>表示在排序中的特定内容项的流内容元素的或未经排序 <see cref="T:System.Windows.Documents.List" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItemCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.ListItem" /> 元素的集合。<see cref="T:System.Windows.Documents.ListItemCollection" /> 定义 <see cref="T:System.Windows.Documents.List" /> 元素允许的子内容。</summary>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>指定要在其中执行某些文本操作，如插入、 检索或导航文本相对于指定位置的逻辑方向 ( <see cref="T:System.Windows.Documents.TextPointer" />)。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>向后操作，或从右到左。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>向前移动，或从左到右。</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContent">
      <summary>提供有关 <see cref="T:System.Windows.Documents.FixedDocument" /> 中的 <see cref="T:System.Windows.Documents.FixedPage" /> 元素的信息。</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContentCollection">
      <summary>提供一组文档页面集合支持。</summary>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>用于将内容分组到一个段落中的块级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>旨在包含一连串格式化或非格式化文本的内联级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>用于对其他 <see cref="T:System.Windows.Documents.Block" /> 元素进行分组的块级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
      <summary>提供了一种方法创建的软件组件可以序列化的任何部分 Windows Presentation Foundation (WPF) 制造商的专用格式的应用程序的内容。 </summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
      <summary>提供有关安装插件序列化程序的信息。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerProvider">
      <summary>管理序列化的插件创建的使用 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 和 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />, ，由制造商拥有其自己的专有的序列化格式。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriter">
      <summary>定义实现插件文档输出序列化程序所需的抽象方法和事件。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
      <summary>定义实现插件文档序列化 <see cref="T:System.Windows.Media.Visual" /> 排序程序所需的抽象方法。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
      <summary>为 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
      <summary>表示处理的方法的 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> 事件 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" /> 事件 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> 事件 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
      <summary>指定的范围 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" /> 事件。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
      <summary>未指定输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>多个文档的顺序输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>单个文档输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>单个页面输出进度。</summary>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>对其他 <see cref="T:System.Windows.Documents.Inline" /> 流内容元素进行分组。</summary>
    </member>
    <member name="T:System.Windows.Documents.Table">
      <summary>提供基于网格的演示文稿（按行和列组织）的块级别流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableCell">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中内容单元格的流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableCellCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableCell" /> 对象的已排序的类型安全集合。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumn">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中的列的流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumnCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableColumn" /> 对象的已排序的类型安全集合。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRow">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中的行的流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableRow" /> 对象的已排序的类型安全集合。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroup">
      <summary>表示用于对 <see cref="T:System.Windows.Documents.Table" /> 中的 <see cref="T:System.Windows.Documents.TableRow" /> 元素进行分组的流内容元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroupCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableRowGroup" /> 对象的已排序的类型安全集合。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectResolver">
      <summary> 设置文本效果的文本容器中的一个帮助器类 </summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectTarget">
      <summary>使用而导致的 <see cref="T:System.Windows.Documents.TextEffectResolver" /> 来设置文本的效果。 这包括 <see cref="T:System.Windows.Media.TextEffect" /> 创建与 <see cref="T:System.Windows.DependencyObject" /> 到 <see cref="T:System.Windows.Media.TextEffect" /> 应设置。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>用作抽象 <see cref="T:System.Windows.Documents.Block" /> 和 <see cref="T:System.Windows.Documents.Inline" /> 类的基类的抽象类。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TextElement" /> 对象的已排序的类型安全集合。  这是一个泛型集合，可与从 <see cref="T:System.Windows.Documents.TextElement" /> 派生的指定类型的对象配合使用。</summary>
      <typeparam name="TextElementType">泛型集合的类型说明符。  可接受的类型限制为 <see cref="T:System.Windows.Documents.TextElement" /> 类型或者 <see cref="T:System.Windows.Documents.TextElement" /> 的派生类。</typeparam>
    </member>
    <member name="T:System.Windows.Documents.TextElementEditingBehaviorAttribute">
      <summary>指定如何 <see cref="T:System.Windows.Controls.RichTextBox" /> 应处理自定义文本元素。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>表示内的位置 <see cref="T:System.Windows.Documents.FlowDocument" /> 或 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextPointerContext">
      <summary>确定与相邻的内容类别 <see cref="T:System.Windows.Documents.TextPointer" /> 在指定的 <see cref="T:System.Windows.Documents.LogicalDirection" />。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.None">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 旁边的开头或结尾的内容。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.Text">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 旁边的文本。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 靠近嵌入 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 的开始标记与相邻 <see cref="T:System.Windows.Documents.TextElement" />。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 旁边的结束标记 <see cref="T:System.Windows.Documents.TextElement" />。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextRange">
      <summary>表示两个区域之间的内容选择 <see cref="T:System.Windows.Documents.TextPointer" /> 位置。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>封装的选择状态 <see cref="T:System.Windows.Controls.RichTextBox" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>提供对一组丰富的 OpenType 版式属性的访问。</summary>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>一个内联级别的流内容元素，该元素使内容以带有下划线的文本效果呈现。</summary>
    </member>
    <member name="T:System.Windows.Documents.ZoomPercentageConverter">
      <summary>实现用于转换的类型转换器 <see cref="T:System.Double" /> (用作值 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" />) 与其他类型。</summary>
    </member>
    <member name="T:System.Windows.DynamicResourceExtension">
      <summary>实现标记扩展支持动态资源引用 ў XAML。</summary>
    </member>
    <member name="T:System.Windows.DynamicResourceExtensionConverter">
      <summary>将从解析到的 XAML 转换 <see cref="T:System.Windows.DynamicResourceExtension" /> 并支持从 XAML 进行动态资源引用。</summary>
    </member>
    <member name="T:System.Windows.EventSetter">
      <summary>以某种样式表示事件资源库。 事件资源库可调用指定的事件处理程序来响应事件。</summary>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>表示一个触发器，该触发器应用一组操作以响应一个事件。</summary>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>将提供数据供  <see cref="T:System.Windows.Controls.Image" /> 和 <see cref="T:System.Windows.Controls.MediaElement" /> 失败事件。</summary>
    </member>
    <member name="T:System.Windows.ExitEventArgs">
      <summary>事件参数 <see cref="E:System.Windows.Application.Exit" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.ExitEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Application.Exit" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.FigureHorizontalAnchor">
      <summary>描述图形在水平方向的位置引用。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageLeft">
      <summary>锚定在页面区域的左侧图。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageCenter">
      <summary>锚定在页面区域的中心中的数字。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageRight">
      <summary>锚定页区域右侧图。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentLeft">
      <summary>锚定在页面内容区域的左侧图。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentCenter">
      <summary>锚定的页面内容区域中心中的数字。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentRight">
      <summary>锚定到页面内容区域的右图。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnLeft">
      <summary>锚定到左边的列内容区域图。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnCenter">
      <summary>锚定的图中列的内容区域的中心。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnRight">
      <summary>锚定到列的内容区域的右图。</summary>
    </member>
    <member name="T:System.Windows.FigureLength">
      <summary>描述的高度或宽度 <see cref="T:System.Windows.Documents.Figure" />。</summary>
    </member>
    <member name="T:System.Windows.FigureLengthConverter">
      <summary>其他类型的实例之间来回进行转换 <see cref="T:System.Windows.FigureLength" />。</summary>
    </member>
    <member name="T:System.Windows.FigureUnitType">
      <summary>描述与宽度或高度的单位类型 <see cref="T:System.Windows.FigureLength" />。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Auto">
      <summary>时，默认值 <see cref="T:System.Windows.FigureLength" /> 这将创建宽度或高度的值未指定 <see cref="T:System.Windows.Documents.Figure" /> 该计算不受限制。注意 ︰ 时 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Auto" />, 、 <see cref="P:System.Windows.FigureLength.Value" /> 属性 <see cref="T:System.Windows.FigureLength" /> 设置为 1。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Pixel">
      <summary>宽度或高度的值 <see cref="T:System.Windows.Documents.Figure" /> 表示以像素为单位 （每英寸 96 像素为单位）。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Column">
      <summary>宽度或高度的值 <see cref="T:System.Windows.Documents.Figure" /> 表示为一小部分 (包括秒的小数部分更高版本，然后 1) 的列的宽度 <see cref="T:System.Windows.Documents.Figure" /> 中。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Content">
      <summary>宽度或高度的值 <see cref="T:System.Windows.Documents.Figure" /> 表示为一小部分 (包括秒的小数部分更高版本，然后 1) 的内容宽度的 <see cref="T:System.Windows.Documents.Figure" />。 注意 ︰ 注意 ︰ 时 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Content" />, 、 <see cref="P:System.Windows.FigureLength.Value" /> 属性 <see cref="T:System.Windows.FigureLength" /> 必须设置为介于 0 和 1。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Page">
      <summary>宽度或高度的值 <see cref="T:System.Windows.Documents.Figure" /> 表示为一小部分 (包括秒的小数部分更高版本，然后 1) 的页面宽度的 <see cref="T:System.Windows.Documents.Figure" /> 中。 注意 ︰ 注意 ︰ 时 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Page" />, 、 <see cref="P:System.Windows.FigureLength.Value" /> 属性 <see cref="T:System.Windows.FigureLength" /> 必须设置为介于 0 和 1。</summary>
    </member>
    <member name="T:System.Windows.FigureVerticalAnchor">
      <summary> 描述图形在垂直方向的参考的点。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageTop">
      <summary> 锚定到顶部的页面区域图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageCenter">
      <summary> 锚定到在页面区域的中心图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageBottom">
      <summary> 锚定到在页面区域的下图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentTop">
      <summary> 锚定到页面内容区域的顶部图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentCenter">
      <summary> 锚定到页面内容区域的中心图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentBottom">
      <summary> 锚定到页面内容区域的下图。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ParagraphTop">
      <summary> 锚定的当前段落页首图。</summary>
    </member>
    <member name="T:System.Windows.FontSizeConverter">
      <summary>和其他类型表示形式之间进行转换字体大小值。</summary>
    </member>
    <member name="T:System.Windows.FrameworkCompatibilityPreferences">
      <summary>包含指定应用程序相对于在 PresentationFramework 程序集中的 WPF 功能的行为方式的属性。</summary>
    </member>
    <member name="T:System.Windows.FrameworkContentElement">
      <summary>
        <see cref="T:System.Windows.FrameworkContentElement" /> 是 <see cref="T:System.Windows.ContentElement" /> 基类的 WPF 框架级别的实现和扩展。<see cref="T:System.Windows.FrameworkContentElement" /> 增加了针对下列各项的支持：附加输入 APIs（包括工具提示和上下文菜单）、storyboard、用于数据绑定的数据上下文、格式支持和逻辑树帮助程序 APIs。</summary>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>为 Windows Presentation Foundation (WPF) 元素提供一套 WPF 框架级别的属性、事件和方法。 此类表示所提供的 WPF 框架级别实现基于 <see cref="T:System.Windows.UIElement" /> 定义的 WPF 核心级别 APIs。</summary>
    </member>
    <member name="T:System.Windows.FrameworkElementFactory">
      <summary>支持创建模板。</summary>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadata">
      <summary>为依赖属性报告或应用元数据（从而专门添加特定于框架的属性系统特征）。</summary>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadataOptions">
      <summary>指定框架级属性行为中与 Windows Presentation Foundation (WPF) 属性系统中的特定依赖属性相关的类型。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.None">
      <summary>未指定任何选项；依赖属性使用 Windows Presentation Foundation (WPF) 属性系统的默认行为。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
      <summary>更改此依赖属性的值会影响布局组合的测量过程。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
      <summary>更改此依赖属性的值会影响布局组合的排列过程。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
      <summary>更改此依赖属性的值会影响父元素上的测量过程。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
      <summary>更改此依赖属性的值会影响父元素上的排列过程。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
      <summary>更改此依赖属性的值会影响呈现或布局组合的某一方面（不是测量或排列过程）。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits">
      <summary>此依赖属性的值将由子元素继承。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.OverridesInheritanceBehavior">
      <summary>此依赖属性的值跨越分隔的树以实现属性值继承。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable">
      <summary>不允许将数据绑定到此依赖属性。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
      <summary>此依赖属性上的数据绑定的 <see cref="T:System.Windows.Data.BindingMode" /> 默认为 <see cref="F:System.Windows.Data.BindingMode.TwoWay" />。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Journal">
      <summary>此依赖属性的值应由日记记录进程或在由 Uniform resource identifiers (URIs) 导航时进行保存或存储。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender">
      <summary>此依赖属性值上的子属性不会影响呈现的任何方面。</summary>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>启用树的实例化 <see cref="T:System.Windows.FrameworkElement" /> 和/或 <see cref="T:System.Windows.FrameworkContentElement" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>表示显式支持 <see cref="F:System.Windows.GridUnitType.Star" /> 单位类型的元素长度。</summary>
    </member>
    <member name="T:System.Windows.GridLengthConverter">
      <summary>将其他类型的实例与 <see cref="T:System.Windows.GridLength" /> 实例进行来回转换。</summary>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>描述 <see cref="T:System.Windows.GridLength" /> 对象包含的值的种类。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>该大小由内容对象的大小属性确定。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>该值表示为一个像素。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>该值表示为可用空间的加权比例。</summary>
    </member>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>表示支持 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的 <see cref="T:System.Windows.DataTemplate" />，例如 <see cref="T:System.Windows.Controls.TreeViewItem" /> 或 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>指示某个元素相对于父元素的已分配的布局槽水平轴上的显示位置。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>元素的父元素的布局槽左对齐方式。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>元素的父元素的布局槽的中心对齐。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>元素与父元素的布局槽的右侧对齐。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>拉伸以填充整个布局槽的父元素。</summary>
    </member>
    <member name="T:System.Windows.IFrameworkInputElement">
      <summary>声明框架元素的名称范围协定。</summary>
    </member>
    <member name="T:System.Windows.InheritanceBehavior">
      <summary>指示用于属性值继承、 查找资源和 RelativeSource FindAncestor 查找查询的当前模式。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.Default">
      <summary>属性值继承查找将查询的当前元素并继续到页面根遍历元素树。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNow">
      <summary>属性值继承查找将不会查询当前的元素或任何进一步。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNext">
      <summary>当前元素，但不是任何进一步将查询属性值继承查找。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNow">
      <summary>属性值继承查找将不会查询当前的元素或任何进一步。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNext">
      <summary>当前元素，但不是任何进一步将查询属性值继承查找。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNow">
      <summary>属性值继承查找将不会查询当前的元素或任何进一步。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNext">
      <summary>当前元素，但不是任何进一步将查询属性值继承查找。</summary>
    </member>
    <member name="T:System.Windows.Input.CommandConverter">
      <summary>将转换 <see cref="T:System.Windows.Input.ICommand" /> 对象与其他类型。</summary>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigation">
      <summary>提供可设定焦点的对象之间的逻辑和方向导航。</summary>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>当发生逻辑和方向导航时焦点指定更改的可能值。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
      <summary>每个元素收到键盘焦点时，只要它是导航停止位。  导航离开包含元素，当达到一条边。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>对容器及其所有子元素作为一个整体只有一次都接收焦点。 第一个子树或或最后一个具有焦点的元素在组中接收到焦点</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>根据不同的对导航的方向，焦点将返回到第一项或最后一项时达到的结尾或容器开头。  焦点能使使用逻辑导航的容器。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.None">
      <summary>在此容器内允许没有键盘导航。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
      <summary>根据不同的对导航的方向，焦点返回到第一项或最后一项时的结尾或容器的开始到达时，但不会转移过去的开头或结尾的容器。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>Tab 键索引被视为仅在此容器内的本地子树上，其行为类似 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" /> 之后。</summary>
    </member>
    <member name="T:System.Windows.Interop.ActiveXHost">
      <summary>将 ActiveX 控件托管为 Windows Presentation Foundation (WPF) 内容中的一个元素。</summary>
    </member>
    <member name="T:System.Windows.Interop.BrowserInteropHelper">
      <summary>提供有关在其中的浏览器环境的信息的帮助器类 XAML 浏览器应用程序 (XBAP) 承载应用程序。</summary>
    </member>
    <member name="T:System.Windows.Interop.DocObjHost">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，但不可直接在代码中使用。</summary>
    </member>
    <member name="T:System.Windows.Interop.DynamicScriptObject">
      <summary>使来自调用 XAML 浏览器应用程序 (XBAP) 承载该应用程序的 HTML 窗口。 </summary>
    </member>
    <member name="T:System.Windows.Interop.HwndHost">
      <summary>在 Windows Presentation Foundation (WPF) 内容内将 Win32 窗口承载为元素。 </summary>
    </member>
    <member name="T:System.Windows.Interop.IErrorPage">
      <summary>定义之间的交互 Windows Presentation Foundation (WPF) 应用程序承载内容和已解释的互操作程序 Windows Presentation Foundation (WPF) 可执行文件和主机提供的错误页。 </summary>
    </member>
    <member name="T:System.Windows.Interop.IProgressPage">
      <summary>定义之间的交互 Windows Presentation Foundation (WPF) 互操作的内容，另一个主机提供进度页面承载的应用程序。</summary>
    </member>
    <member name="T:System.Windows.Interop.WindowInteropHelper">
      <summary>可帮助之间进行互操作 Windows Presentation Foundation (WPF) 和 Win32 代码。 </summary>
    </member>
    <member name="T:System.Windows.LengthConverter">
      <summary>将为其他类型的实例的实例与 <see cref="T:System.Double" /> 表示对象的长度。</summary>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary> 描述每个行根据其中一种机制。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary> 堆栈高度由块元素行高度属性值确定。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary> 堆栈高度是正确对齐这些元素时，它包含在该行上的所有内联元素的最小值。</summary>
    </member>
    <member name="T:System.Windows.Localization">
      <summary>
        <see cref="T:System.Windows.Localization" /> 类定义对于本地化特性和注释的附加的属性。</summary>
    </member>
    <member name="T:System.Windows.LogicalTreeHelper">
      <summary>提供用于查询逻辑树中的对象的静态帮助器方法。</summary>
    </member>
    <member name="T:System.Windows.LostFocusEventManager">
      <summary>提供了 <see cref="T:System.Windows.WeakEventManager" /> 实现，以便您可以使用"弱事件侦听器"模式将附加的侦听器 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
      <summary>实现的类型转换器 <see cref="T:System.Windows.ComponentResourceKey" /> 故意有没有类型转换路径的对象。 类型转换器强制执行，并报告该行为。</summary>
    </member>
    <member name="T:System.Windows.Markup.DependencyPropertyConverter">
      <summary>从字符串到将转换 <see cref="T:System.Windows.DependencyProperty" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Markup.EventSetterHandlerConverter">
      <summary>将事件 setter 处理程序的字符串名称转换为委托表示形式。</summary>
    </member>
    <member name="T:System.Windows.Markup.IStyleConnector">
      <summary>提供的 WPF XAML 分析器在内部用来将附加事件以及事件在已编译的 XAML 中的 setter 的方法。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
      <summary>解析中类和属性的可本地化设置 binary XAML (BAML)。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
      <summary>表示在可本地化资源 BAML 流。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
      <summary>表示用于标识在可本地化的资源键 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
      <summary>包含 BAML 记录中所有可本地化的资源。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
      <summary>定义一个专用的枚举器，它可以枚举 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象的内容。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
      <summary>从 BAML 文件中提取资源，并生成 BAML 源的本地化的版本。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
      <summary>指定的错误情况，可能会遇到的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" />。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
      <summary>多个元素具有相同 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> 值。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
      <summary>本地化的 BAML 包含多个引用同一个元素。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
      <summary>元素的替换包含不完整的子占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
      <summary>XML 注释不具有正确的格式。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
      <summary>本地化注释文本中包含无效的属性。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
      <summary>本地化注释文本中包含无效的注释。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
      <summary>
        <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> 不对应的 BAML 源中的任何元素。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
      <summary>指示替换和源之间的不匹配。 替换必须包含源中的所有元素占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
      <summary>元素的内容的替换不能分析为 XML，因此无法识别替换中的任何格式设置标记。 替换而被应用以纯文本格式。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
      <summary>子元素不具有 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" />。 因此，它不能表示为父元素的内容字符串中的占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
      <summary>无法识别替换中的格式设置标记。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
      <summary>将提供必需的事件数据供 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
      <summary>表示用来处理 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
      <summary>表示可本地化性 BAML 中的元素的设置。</summary>
    </member>
    <member name="T:System.Windows.Markup.NamespaceMapEntry">
      <summary>提供的信息， <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 用于 XML 命名空间、 CLR 命名空间和包含该 CLR 命名空间的相关类型的程序集之间的映射。</summary>
    </member>
    <member name="T:System.Windows.Markup.ParserContext">
      <summary>提供所需的 XAML 分析器的上下文信息。</summary>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupWriter">
      <summary>提供将对象写入 XAML 格式的方法。</summary>
    </member>
    <member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
      <summary>实例之间进行转换 ResourceReferenceExpression 与其他类型。</summary>
    </member>
    <member name="T:System.Windows.Markup.RoutedEventConverter">
      <summary>将转换 <see cref="T:System.Windows.RoutedEvent" /> 从字符串的对象。</summary>
    </member>
    <member name="T:System.Windows.Markup.SetterTriggerConditionValueConverter">
      <summary>提供有关类型转换类似行为 <see cref="T:System.Windows.Setter" />, ，<see cref="T:System.Windows.Trigger" /> 和 <see cref="T:System.Windows.Condition" /> 处理的类型 <see cref="T:System.Windows.DependencyProperty" /> 值。 此转换器仅支持 ConvertFrom。</summary>
    </member>
    <member name="T:System.Windows.Markup.TemplateKeyConverter">
      <summary>实现的类型转换器 <see cref="T:System.Windows.TemplateKey" /> 故意有没有类型转换路径的对象。 类型转换器强制执行，并报告该行为。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
      <summary>为通过 XAML 设计器或其他调用者均要求高级序列化的 XAML 序列化提供服务。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlInstanceCreator">
      <summary>提供一种方式来存储更高版本的实例化的分析器记录的抽象类。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>表示从 WPF XAML 分析器的特定于分析器的异常的异常类。 在 XAML API 或 WPF XAML 分析器操作中使用此异常 .NET Framework 3.0 和 .NET Framework 3.5, ，或者通过调用的 WPF XAML 分析器特定用于 <see cref="T:System.Windows.Markup.XamlReader" /> API。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>读取 XAML 输入并创建使用 WPF 默认 XAML 读取器和关联的 XAML 对象编写器的对象图。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlTypeMapper">
      <summary>将 XAML 元素名映射到相应的 CLR <see cref="T:System.Type" /> 在程序集中。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriter">
      <summary>提供一个静态 <see cref="Overload:System.Windows.Markup.XamlWriter.Save" /> （多个重载） 方法，该方法可用于有限的 XAML 序列化到 XAML 标记提供运行时对象。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterMode">
      <summary>指定用于序列化 （如绑定声明） 的表达式的值的 XAML 编写器模式。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Expression">
      <summary>
        <see cref="T:System.Windows.Expression" /> 序列化。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Value">
      <summary>计算结果的值 <see cref="T:System.Windows.Expression" /> 序列化。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterState">
      <summary>介绍自定义 XAML 编写器可能的编写状态。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Starting">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> 已启动其操作。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Finished">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> 已完成其操作。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlAttributeProperties">
      <summary>封装的 XML 语言相关属性 <see cref="T:System.Windows.DependencyObject" />。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDictionary">
      <summary>表示一个字典，其中包含用于在 WPF 中的 XAML 命名空间的 xmlns 映射。</summary>
    </member>
    <member name="T:System.Windows.Media.AdornerHitTestResult">
      <summary>表示从调用返回的数据 <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)" /> 方法。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>一个触发器操作，该操作开始 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 并将其动画分配到目标对象和属性。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
      <summary>操作已由 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 操作应用的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
      <summary>使用离散插值将上一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值动画应用到其自身的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingThicknessKeyFrame">
      <summary>使你能够将缓动函数与 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 关键帧动画相关联的类。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
      <summary>使用线性插值将上一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值动画应用到其自身的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PauseStoryboard">
      <summary>暂停 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RemoveStoryboard">
      <summary>删除触发器操作 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ResumeStoryboard">
      <summary>支持用于恢复暂停的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SeekStoryboard">
      <summary>一个触发器操作，它可以查找（跳过）<see cref="T:System.Windows.Media.Animation.Storyboard" /> 活动期内的指定时间。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
      <summary>用于更改 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的速度的触发器操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
      <summary>将 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 前移到其填充期间末尾的触发操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
      <summary>使用样条内插将上一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值动画应用到其自身的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.StopStoryboard">
      <summary>将停止 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>一个容器时间线，该时间线为子动画提供对象和属性确定信息。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimation">
      <summary> 在指定的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 上使用线性内插对两个目标值之间的 <see cref="T:System.Windows.Thickness" /> 属性值进行动画处理。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
      <summary>抽象类，该类在实现时，进行动画处理 <see cref="T:System.Windows.Thickness" /> 值。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
      <summary> 根据一组 <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> 对 <see cref="T:System.Windows.Thickness" /> 属性的值进行动画处理。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
      <summary>一个抽象类，它在实现后使用自己的目标值和 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的内插方法来定义动画段。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
      <summary>表示 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>定义一组影响的元素中显示文本的方式的附加属性。</summary>
    </member>
    <member name="T:System.Windows.MediaScriptCommandRoutedEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> 和 <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>显示消息框。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>指定在消息框显示的按钮。 使用作为参数的 <see cref="Overload:System.Windows.MessageBox.Show" /> 方法。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>该消息框显示 确定 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>该消息框显示 确定 和 取消 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNoCancel">
      <summary>该消息框显示 是, ，否, ，和 取消 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNo">
      <summary>该消息框显示 是 和 否 按钮。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxImage">
      <summary>指定消息框中显示的图标。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.None">
      <summary>显示无图标。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Hand">
      <summary>消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Question">
      <summary>消息框包含一个符号，该符号包含一个圆圈，圆圈中为问号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Exclamation">
      <summary>消息框包含一个符号，该符号包含一个黄色背景三角形，三角形中为感叹号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Asterisk">
      <summary>消息框包含一个符号，该符号在圆圈中包含小写字母 i。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Stop">
      <summary>消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Error">
      <summary>消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Warning">
      <summary>消息框包含一个符号，该符号包含一个黄色背景三角形，三角形中为感叹号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Information">
      <summary>消息框包含一个符号，该符号在圆圈中包含小写字母 i。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxOptions">
      <summary>指定用于消息框中的特殊的显示选项。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.None">
      <summary>不设置任何选项。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.ServiceNotification">
      <summary>即使用户未登录到计算机，将在当前处于活动状态的桌面上显示消息框。 指定消息框中显示从 Microsoft .NET Framework windows 服务应用程序，以便通知事件的用户。 </summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.DefaultDesktopOnly">
      <summary>在交互式窗口工作站的默认桌面上显示消息框。 指定消息框中显示从 Microsoft .NET Framework windows 服务应用程序，以便通知事件的用户。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RightAlign">
      <summary>消息框文本和标题栏标题为右对齐。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RtlReading">
      <summary>所有文本、 按钮、 图标和标题栏将都显示从右到左。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>指定在用户单击哪个消息框按钮。<see cref="T:System.Windows.MessageBoxResult" /> 返回由 <see cref="Overload:System.Windows.MessageBox.Show" /> 方法。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>消息框中不返回任何结果。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>消息框的结果值 确定。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>消息框的结果值 取消。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>消息框的结果值 是。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>消息框的结果值 否。</summary>
    </member>
    <member name="T:System.Windows.MultiDataTrigger">
      <summary>表示一个应用属性值或绑定的数据满足一组条件时执行操作的触发器。</summary>
    </member>
    <member name="T:System.Windows.MultiTrigger">
      <summary>表示一个应用属性值或一组条件满足时执行操作的触发器。</summary>
    </member>
    <member name="T:System.Windows.Navigation.CustomContentState">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> 能够而无需重新加载每个后续导航的源内容导航的一段单独的源内容的不同状态。</summary>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>为 FragmentNavigation 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>表示将处理的方法 FragmentNavigation 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.IProvideCustomContentState">
      <summary>由需要将自定义状态添加到内容的导航历史记录条目，然后内容导航离开类实现。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntry">
      <summary>表示后或向前导航历史记录中的项。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryListConverter">
      <summary>此类型或成员支持 Microsoft .NET 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryPosition">
      <summary>指定与当前内容相关的内容片段的导航历史记录中的位置。<see cref="T:System.Windows.Navigation.JournalEntryPosition" /> 通过使用 <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" />。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
      <summary>内容位于相对于当前的内容后退导航历史记录中。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
      <summary>内容是当前的内容。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
      <summary>内容是与当前内容相关的正向导航历史记录中。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> 合并后退导航历史记录和前进导航历史记录 (如由 <see cref="T:System.Windows.Controls.Frame" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" />) 合并为单一的 Windows Internet Explorer 7-样式导航菜单。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>指定是否 <see cref="T:System.Windows.Controls.Frame" /> 使用它自己的日志。<see cref="T:System.Windows.Navigation.JournalOwnership" /> 通过使用 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>指示是否此 <see cref="T:System.Windows.Controls.Frame" /> 将创建并使用自己的日记取决于其父级。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> 维护自己的日记。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> 使用内容树中，下一个可用导航宿主的日志，如果可用。 否则，导航历史记录不会维护有关 <see cref="T:System.Windows.Controls.Frame" />。</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>表示将处理的方法 LoadCompleted 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>表示将处理 Navigated 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>为 Navigating 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>表示将处理 Navigating 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>为无法取消的导航事件提供数据，这些事件包括 <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />、<see cref="E:System.Windows.Navigation.NavigationWindow.Navigated" /> 和 <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>将提供数据供 NavigationFailed 事件。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>表示将处理的方法 NavigationFailed 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>指定将替换 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode" /> 属性所用的 <see cref="T:System.Windows.Navigation.NavigationMode" /> 的导航类型。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>将导航到新内容。 调用 Navigate 方法或设置 Source 属性时将发生这种情况。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>将向后导航到后退导航历史记录中的最新内容。 调用 GoBack 方法时将发生这种情况。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>将导航到前进导航历史记录中的最新内容。 调用 GoForward 方法时将发生这种情况。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>将重新加载当前内容。 调用 Refresh 方法时将发生这种情况。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Application.NavigationProgress" /> 和 <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
      <summary>表示将处理的方法 NavigationProgress 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>包含方法、 属性和事件，以支持导航。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>表示将处理的方法 NavigationStopped 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationUIVisibility">
      <summary>指定是否 <see cref="T:System.Windows.Controls.Frame" /> 显示其导航镶边。<see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> 通过使用 <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
      <summary>当导航镶边是可见 <see cref="T:System.Windows.Controls.Frame" /> 使用自己的日记 (请参阅 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" />)。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
      <summary>导航镶边是可见的。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
      <summary>导航镶边不可见。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationWindow">
      <summary>表示支持内容导航的窗口。</summary>
    </member>
    <member name="T:System.Windows.Navigation.PageFunction`1">
      <summary>表示一种特殊类型的网页，它使您可以将导航到页面以类似的方式与调用方法。</summary>
      <typeparam name="T">类型值 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回到调用方。</typeparam>
    </member>
    <member name="T:System.Windows.Navigation.PageFunctionBase">
      <summary>一个抽象基类，它是所有页函数类的父级。</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Documents.Hyperlink" /> 类的 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventArgs`1">
      <summary>为 <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> 事件提供数据。</summary>
      <typeparam name="T">返回值的类型。</typeparam>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventHandler`1">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> 事件 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
      <typeparam name="T">事件类型说明符。</typeparam>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>将转换间来回 <see cref="T:System.Nullable`1" /> 类型 (使用 <see cref="T:System.Boolean" /> 类型的泛型约束)。</summary>
    </member>
    <member name="T:System.Windows.PowerLineStatus">
      <summary>指示系统电源是否处于联机状态，或指示系统电源状态未知。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Offline">
      <summary>系统电源不在。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Online">
      <summary>系统电源已打开。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Unknown">
      <summary>无法确定系统电源的状态。</summary>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>实现一个数据结构，用于将某个属性描述为另一个属性或所属类型下的路径。 属性路径用于对象的数据绑定，并用于动画的情节提要和时间线。</summary>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>提供的类型转换器 <see cref="T:System.Windows.PropertyPath" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.ReasonSessionEnding">
      <summary>指定为其结束用户会话的原因。 使用 <see cref="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Logoff">
      <summary>会话正在结束，因为用户注销。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Shutdown">
      <summary>会话正在结束，因为用户关闭 Windows。</summary>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventArgs">
      <summary>为 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.ResizeMode">
      <summary>指定是否可以调整窗口的大小，并且，如果是这样，如何可以调整它。 使用 <see cref="P:System.Windows.Window.ResizeMode" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.NoResize">
      <summary>不能调整窗口的大小。最小化 和 最大化 按钮不显示在标题栏中。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanMinimize">
      <summary>一个窗口仅可以最小化和还原。最小化 和 最大化 按钮是显示，但仅限于 最小化 按钮才可用。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResize">
      <summary>可以调整窗口的大小。最小化 和 最大化 按钮都显示并启用。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResizeWithGrip">
      <summary>可以调整窗口的大小。最小化 和 最大化 按钮都显示并启用。 大小调整手柄将显示在窗口的右下角。</summary>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>提供一个哈希表/字典实现，其中包含组件所使用的 WPF 资源以及 WPF 应用程序的其他元素。 </summary>
    </member>
    <member name="T:System.Windows.ResourceDictionaryLocation">
      <summary>指定主题资源字典所在的位置。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.None">
      <summary>主题字典不存在。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.SourceAssembly">
      <summary>定义受应用主题的类型的程序集中存在主题字典。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.ExternalAssembly">
      <summary>主题字典存在于外部定义受应用主题的类型的一个集。</summary>
    </member>
    <member name="T:System.Windows.ResourceKey">
      <summary>提供对各种资源键的一个抽象基类。</summary>
    </member>
    <member name="T:System.Windows.ResourceReferenceKeyNotFoundException">
      <summary>当在分析或序列化标记扩展资源期间找不到资源引用键时引发的异常。</summary>
    </member>
    <member name="T:System.Windows.Resources.ContentTypes">
      <summary>支持 可扩展应用程序标记语言 (XAML) 为内容类型和资源。</summary>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>将存储在中使用的流资源信息 Windows Presentation Foundation (WPF), ，如图像。</summary>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>提供有关依赖属性值更改的数据（由特定的路由事件报告），其中包含发生更改的属性的旧值和新值。</summary>
      <typeparam name="T">发生更改的依赖属性的类型。</typeparam>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>表示将处理跟踪属性值更改的各个路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。 特定事件定义会使用与委托实现的类型参数约束匹配的约束的类型参数，将 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 约束为某种类型。</param>
      <typeparam name="T">在其中报告了值更改的属性值的类型。</typeparam>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventArgs">
      <summary>包含事件参数 <see cref="E:System.Windows.Application.SessionEnding" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Application.SessionEnding" /> 事件。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">一个 <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> 与事件参数对象。</param>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>表示一个资源库，应用属性值。</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Setter.Property" /> 属性不能为 null。</exception>
      <exception cref="T:System.ArgumentException">如果指定 <see cref="P:System.Windows.Setter.Property" /> 是只读属性。</exception>
      <exception cref="T:System.ArgumentException">如果指定 <see cref="P:System.Windows.Setter.Value" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>表示值的 setter 类的基类。</summary>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>表示 <see cref="T:System.Windows.SetterBase" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>绘制椭圆形。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>在两个点之间绘制直线。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>绘制一系列相互连接的直线和曲线。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>绘制多边形，它是由一系列相互连接的线条构成的闭合形状。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>绘制一系列相互连接的直线。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>绘制矩形。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>为 <see cref="T:System.Windows.Shapes.Ellipse" />、<see cref="T:System.Windows.Shapes.Polygon" /> 和 <see cref="T:System.Windows.Shapes.Rectangle" /> 之类的形状元素提供基类。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItem">
      <summary>表示 <see cref="T:System.Windows.Shell.JumpPath" /> 和 <see cref="T:System.Windows.Shell.JumpTask" /> 类的基类。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemRejectionReason">
      <summary>介绍为什么 <see cref="T:System.Windows.Shell.JumpItem" /> 无法通过 Windows 外壳程序添加到跳转列表。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.None">
      <summary>未指定原因。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.InvalidItem">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItem" /> 引用了无效的文件路径，或者操作系统不支持跳转列表。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
      <summary>应用程序未注册为处理的文件扩展名 <see cref="T:System.Windows.Shell.JumpItem" />。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
      <summary>项目之前已处于跳转列表，但已被用户删除。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRejectedEventArgs">
      <summary>为 <see cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRemovedEventArgs">
      <summary>为 <see cref="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpList">
      <summary>表示的项和作为菜单上显示的任务列表 Windows 7 任务栏按钮。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpPath">
      <summary>表示一个链接到的文件，将显示在 Windows 7 任务栏跳转列表。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpTask">
      <summary>表示一种快捷方式中的应用程序 Windows 7 任务栏跳转列表。</summary>
    </member>
    <member name="T:System.Windows.Shell.NonClientFrameEdges">
      <summary>指定表示窗口框架的哪些边不归客户端的常数。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.None">
      <summary>所有边所都拥有的客户端 (值 = 0)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Left">
      <summary>不由客户端拥有的左边的缘 (值 = 1)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Top">
      <summary>不由客户端拥有的上边缘 (值 = 2)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Right">
      <summary>不由客户端拥有的右边缘 (值 = 4)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Bottom">
      <summary>不由客户端拥有的下边缘 (值 = 8)。</summary>
    </member>
    <member name="T:System.Windows.Shell.ResizeGripDirection">
      <summary>指定指示输入元素的大小调整手柄行为方向的常量。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.None">
      <summary>不指定任何调整大小行为。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopLeft">
      <summary>调整窗口的大小从其左上角。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Top">
      <summary>调整窗口的大小从其上边缘。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopRight">
      <summary>调整窗口的大小从其右上角。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Right">
      <summary>调整窗口的大小距其右边缘。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomRight">
      <summary>调整窗口的大小从其右下角。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Bottom">
      <summary>距其底边缘调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomLeft">
      <summary>调整窗口的大小从其左下角。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Left">
      <summary>Windows 调整距其左边缘。</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemInfo">
      <summary>表示有关任务栏缩略图的显示方式的信息。</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemProgressState">
      <summary>指定在 Windows 任务栏中的进度指示器的状态。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.None">
      <summary>没有进度指示器显示在任务栏按钮。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Indeterminate">
      <summary>闪烁的绿色指示器显示在任务栏按钮。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Normal">
      <summary>绿色的进度指示器显示在任务栏按钮。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Error">
      <summary>红色的进度指示器显示在任务栏按钮。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Paused">
      <summary>黄色的进度指示器显示在任务栏按钮。</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfo">
      <summary>表示有关中的按钮的显示方式的信息 Windows 7 任务栏缩略图。</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfoCollection">
      <summary>表示与 <see cref="T:System.Windows.Window" /> 关联的 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 对象的集合。</summary>
    </member>
    <member name="T:System.Windows.Shell.WindowChrome">
      <summary>表示描述为窗口的非工作区的自定义的对象。</summary>
    </member>
    <member name="T:System.Windows.ShutdownMode">
      <summary>指定应用程序如何将关闭。 使用 <see cref="P:System.Windows.Application.ShutdownMode" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnLastWindowClose">
      <summary>最后一个窗口关闭时，应用程序将关闭或 <see cref="M:System.Windows.Application.Shutdown" /> 调用。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnMainWindowClose">
      <summary>当主窗口关闭时，应用程序将关闭或 <see cref="M:System.Windows.Application.Shutdown" /> 调用。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnExplicitShutdown">
      <summary>应用程序关闭时，才 <see cref="M:System.Windows.Application.Shutdown" /> 调用。</summary>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>提供与相关的数据 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>包含的参数 <see cref="E:System.Windows.Application.Startup" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>表示用于处理的方法 <see cref="E:System.Windows.Application.Startup" /> 事件。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.StaticResourceExtension">
      <summary>实现支持静态 （XAML 加载时） 资源的标记扩展插件从 XAML 进行的引用。</summary>
    </member>
    <member name="T:System.Windows.Style">
      <summary>启用的属性、 资源和事件处理程序的一种类型的实例之间共享。</summary>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>表示一个特性，应用于类定义，并确定 <see cref="P:System.Windows.Style.TargetType" />的类型的属性 <see cref="T:System.Windows.Style" />。</summary>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>包含与系统显示元素相对应的系统颜色、系统画笔和系统资源键。</summary>
    </member>
    <member name="T:System.Windows.SystemCommands">
      <summary>定义路由的命令所共有的窗口管理。</summary>
    </member>
    <member name="T:System.Windows.SystemFonts">
      <summary>包含公开有关字体的系统资源的属性。</summary>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>包含可用来查询系统设置的属性。</summary>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>描述的运行时实例 <see cref="T:System.Windows.TemplateBindingExtension" />。</summary>
    </member>
    <member name="T:System.Windows.TemplateBindingExpressionConverter">
      <summary>用于构造从标记扩展的类型转换器 <see cref="T:System.Windows.TemplateBindingExpression" /> 在序列化过程的实例。</summary>
    </member>
    <member name="T:System.Windows.TemplateBindingExtension">
      <summary>实现标记扩展来支持在模板属性的值和其他公开的属性的值之间的绑定上模板化控件。</summary>
    </member>
    <member name="T:System.Windows.TemplateBindingExtensionConverter">
      <summary>用于构造的类型转换器 <see cref="T:System.Windows.TemplateBindingExtension" /> 从序列化期间实例。</summary>
    </member>
    <member name="T:System.Windows.TemplateContent">
      <summary>实现与 XAML 读取器和编写器推迟内容交互时使用模板的录制和播放逻辑。</summary>
    </member>
    <member name="T:System.Windows.TemplateContentLoader">
      <summary>实现 <see cref="T:System.Xaml.XamlDeferringLoader" /> 为了延迟加载为 WPF XAML 中的模板定义的 XAML 内容。</summary>
    </member>
    <member name="T:System.Windows.TemplateKey">
      <summary>作为一个数据模板的资源键使用时，允许在查找过程中参与的数据模板。</summary>
    </member>
    <member name="T:System.Windows.TemplateKey.TemplateType">
      <summary>介绍使用的模板的不同类型 <see cref="T:System.Windows.TemplateKey" />。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.DataTemplate">
      <summary>类型属于 <see cref="T:System.Windows.DataTemplate" />。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.TableTemplate">
      <summary>类型属于 TableTemplate。 此类型已过时。</summary>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>表示一个特性，应用于类定义，以标识用于模板化的已命名部件的类型。</summary>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>指定控件可处于某种状态，并且 <see cref="T:System.Windows.VisualState" /> 在控件的预期 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
    </member>
    <member name="T:System.Windows.ThemeDictionaryExtension">
      <summary>实现，应用程序作者可自定义控件样式的标记扩展基于当前的系统主题。</summary>
    </member>
    <member name="T:System.Windows.ThemeInfoAttribute">
      <summary>指定的主题字典存储的程序集的位置。</summary>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>描述矩形边框的粗细。 四个 <see cref="T:System.Double" /> 值分别描述矩形的 <see cref="P:System.Windows.Thickness.Left" />、<see cref="P:System.Windows.Thickness.Top" />、<see cref="P:System.Windows.Thickness.Right" /> 和 <see cref="P:System.Windows.Thickness.Bottom" /> 边。</summary>
    </member>
    <member name="T:System.Windows.ThicknessConverter">
      <summary>将其他类型的实例与 <see cref="T:System.Windows.Thickness" /> 的实例进行来回转换。</summary>
    </member>
    <member name="T:System.Windows.Trigger">
      <summary>表示一个触发器，它按条件应用属性值或执行操作。</summary>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>描述为触发器执行的操作。</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>表示 <see cref="T:System.Windows.TriggerAction" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>表示用于指定内的条件值的基类 <see cref="T:System.Windows.Style" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>表示 <see cref="T:System.Windows.TriggerBase" /> 对象集合。</summary>
    </member>
    <member name="T:System.Windows.ValueSource">
      <summary>报告从 <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /> 返回的信息。</summary>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>介绍如何子元素是垂直定位或在父级的布局槽内拉伸。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>子元素的父元素的布局槽顶部对齐。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>子元素的父布局槽的中心对齐。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>子元素的父元素的布局槽底部对齐。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>子元素将拉伸以填充父元素的布局槽。</summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>当处于特定状态时，表示控件的可视外观。</summary>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 和 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>包含互相排斥 <see cref="T:System.Windows.VisualState" /> 对象和 <see cref="T:System.Windows.VisualTransition" /> 用来将其从一个状态移到另一个对象。</summary>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>管理状态和控件的状态之间的转换的逻辑。</summary>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>表示当控件从一个状态转换到另一个时出现的可视行为。</summary>
    </member>
    <member name="T:System.Windows.Window">
      <summary>提供创建、 配置、 显示和管理的窗口和对话框生存期的能力。</summary>
    </member>
    <member name="T:System.Windows.WindowCollection">
      <summary>表示 <see cref="T:System.Windows.Window" /> 对象集合。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
      <summary>指定的位置， <see cref="T:System.Windows.Window" /> 时首次打开中显示。 使用 <see cref="P:System.Windows.Window.WindowStartupLocation" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
      <summary>启动位置 <see cref="T:System.Windows.Window" /> 在内的代码中设置或使用默认 Windows 位置。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
      <summary>启动位置 <see cref="T:System.Windows.Window" /> 是屏幕，其中包含鼠标光标的中心。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterOwner">
      <summary>启动位置 <see cref="T:System.Windows.Window" /> 的中心 <see cref="T:System.Windows.Window" /> 拥有，具体由 <see cref="P:System.Windows.Window.Owner" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.WindowState">
      <summary>指定一个窗口是否是最小化、 最大化窗口、 或还原。 使用 <see cref="P:System.Windows.Window.WindowState" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
      <summary>还原窗口中。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
      <summary>窗口已最小化。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
      <summary>该窗口最大化。</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
      <summary>指定的边框类型， <see cref="T:System.Windows.Window" /> 具有。 使用 <see cref="P:System.Windows.Window.WindowStyle" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
      <summary>仅在客户端区域可见-不显示标题栏和边框。 一个 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 与 <see cref="P:System.Windows.Window.WindowStyle" /> 的 <see cref="F:System.Windows.WindowStyle.None" /> 仍将显示导航 用户界面 (UI)。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
      <summary>具有单个边框的窗口。 这是默认值。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ThreeDBorderWindow">
      <summary>一个带有窗口 3-D 边框。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ToolWindow">
      <summary>固定的工具窗口。</summary>
    </member>
    <member name="T:System.Windows.WrapDirection">
      <summary>指定内容可环绕对象的允许方向。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.None">
      <summary>不会流入对象周围的内容。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Left">
      <summary>仅环绕对象左侧的内容。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Right">
      <summary>仅排列对象的右侧的内容。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Both">
      <summary>该对象的两面周围的内容。</summary>
    </member>
  </members>
</doc>