<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DynamicData.Design</name>
  </assembly>
  <members>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor" /> 通过使用指定的集合类型的类。</summary>
      <param name="type">若要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor.CreateCollectionItemType">
      <summary>获取要编辑的集合的类型。</summary>
      <returns>若要编辑的集合的类型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可用控件值的集合。</summary>
      <param name="context">一个对象，提供此类型转换器的上下文信息。</param>
      <returns>一个包含可用的控件的名称的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示是否返回的控件名称是所有可能的值的独占列表。</summary>
      <param name="context">提供为此类型转换器的上下文信息的对象。</param>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示此转换器是否支持可以从集合中选择的控件名称的标准集。</summary>
      <param name="context">提供为此类型转换器的上下文信息的对象。</param>
      <returns>总是为 true。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicDataManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.Design.DynamicDataManagerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicDataManagerDesigner.GetDesignTimeHtml">
      <summary>生成用于呈现关联的 HTML 标记 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件在设计时。</summary>
      <returns>用于呈现关联的 HTML 标记  <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件在设计时。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.Design.DynamicFieldDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateField">
      <summary>创建一个空的 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象。</summary>
      <returns>一个空的字段的对象。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>创建一个新 <see cref="T:System.Web.DynamicData.DynamicField" /> 通过使用指定的数据字段信息的对象。</summary>
      <param name="fieldSchema">包含的数据字段的结构的架构信息。</param>
      <returns>一个新的字段对象。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>创建 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 字段中为指定的数据字段。</summary>
      <param name="dataControlField">数据字段对象。</param>
      <param name="dataBoundControl">包含数据字段对象的数据绑定控件。</param>
      <returns>新的模板字段。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>获取字段编辑器中的数据字段显示的名称。</summary>
      <param name="dataControlField">数据字段对象。</param>
      <returns>显示字段编辑器中的数据字段的名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.GetTemplateContent(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>获取模板字段的内容。</summary>
      <param name="dataControlField">数据字段对象。</param>
      <param name="mode">指定的数据字段的显示模式。</param>
      <returns>模板字段的内容。</returns>
    </member>
    <member name="M:System.Web.DynamicData.Design.DynamicFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>获取一个值，该值指示是否在字段编辑器中启用数据字段。</summary>
      <param name="parent">正在编辑其数据控件字段的数据绑定控件。</param>
      <returns>true 如果在字段编辑器; 中启用数据字段 false 如果数据字段将不显示在字段编辑器。</returns>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicDataManagerDesigner.ActionLists">
      <summary>获取 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicFieldDesigner.DefaultNodeText">
      <summary>获取字段编辑器中的数据字段显示的默认文本。</summary>
      <returns>显示字段编辑器中的数据字段的默认文本。</returns>
    </member>
    <member name="P:System.Web.DynamicData.Design.DynamicFieldDesigner.UsesSchema">
      <summary>获取一个值，该值指示是否使用架构信息要加载的数据字段。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="T:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor">
      <summary>提供的数据的控件集合的组件编辑器 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</summary>
    </member>
    <member name="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter">
      <summary>创建数据控件的用户可选择集合。</summary>
    </member>
    <member name="T:System.Web.DynamicData.Design.DynamicDataManagerDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.DynamicData.Design.DynamicFieldDesigner">
      <summary>在可视化设计器提供设计时支持 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象。</summary>
    </member>
  </members>
</doc>