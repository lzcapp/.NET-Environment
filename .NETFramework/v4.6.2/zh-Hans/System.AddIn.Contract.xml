<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.AddIn.Contract</name>
  </assembly>
  <members>
    <member name="F:System.AddIn.Contract.Automation.RemoteFieldData.Attributes">
      <summary>表示字段的属性指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteFieldData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteFieldData.FieldType">
      <summary>表示类型的字段的值指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteFieldData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteFieldData.MemberData">
      <summary>表示字段的成员数据此 <see cref="T:System.AddIn.Contract.Automation.RemoteFieldData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMemberData.DeclaringType">
      <summary>这表示来声明该成员的类型 <see cref="T:System.AddIn.Contract.Automation.RemoteMemberData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMemberData.Name">
      <summary>表示该成员的名称指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteMemberData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMethodData.Attributes">
      <summary>表示方法的属性指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMethodData.MemberData">
      <summary>表示该方法的成员数据此 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMethodData.Parameters">
      <summary>表示该方法的参数信息指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteMethodData.ReturnParameter">
      <summary>表示信息的方法的返回值指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.Attributes">
      <summary>表示方法参数的特性的此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.DefaultValue">
      <summary>表示方法参数的默认值指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.IsByRef">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述方法参数通过引用传递。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.IsParameterArray">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述方法参数可以具有可变数量的参数。</summary>
      <returns>true 如果数据是一个参数数组;否则为 false。</returns>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.Name">
      <summary>表示方法参数的名称指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.ParameterType">
      <summary>表示类型的方法参数或返回值指示此 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteParameterData.Position">
      <summary>表示方法参数的位置该 <see cref="T:System.AddIn.Contract.Automation.RemoteParameterData" /> 描述相对于其他参数的方法。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.Attributes">
      <summary>表示属性的特性指示此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.CanRead">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 介绍可读属性。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.CanWrite">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 描述可写属性。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.IndexParameters">
      <summary>表示属性的索引参数指示此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.MemberData">
      <summary>表示属性的成员数据此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemotePropertyData.PropertyType">
      <summary>表示属性的类型指示此 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.ArrayRank">
      <summary>指示远程数组的秩 （也就是说，维度数） 键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyName">
      <summary>表示的完整名称的程序集，其中包含远程键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.AssemblyQualifiedName">
      <summary>表示远程名称键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述，由包含类型的程序集的名称限定。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.Attributes">
      <summary>表示属性的远程类型此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.BaseType">
      <summary>表示基类型的远程类型此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.ElementType">
      <summary>表示远程数组中的元素的类型键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.FullName">
      <summary>表示远程名称键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述，由命名空间限定。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.IsArray">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述数组类型。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.IsByRef">
      <summary>指示是否此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述通过引用传递的类型。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.MemberData">
      <summary>表示成员数据的远程类型此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Automation.RemoteTypeData.TypeCode">
      <summary>表示远程类型键入此 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry.Key">
      <summary>表示键/值中的键相匹配该 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" /> 表示。</summary>
    </member>
    <member name="F:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry.Value">
      <summary>表示键/值中的值相匹配该 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" /> 表示。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.DimensionLengths">
      <summary>表示一个数组，其中包含的每个维度的可序列化长度数组此 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.DimensionLowerBounds">
      <summary>表示包含较低的数组绑定的每个维度的可序列化数组的 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.ElementIndexes">
      <summary>表示一个数组，包含父数组，其中包含可序列化对象的索引指示此 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.IsArray">
      <summary>指示是否 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述可序列化数组。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.IsArrayElement">
      <summary>指示是否 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述中可序列化数组的元素。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.MemberName">
      <summary>表示可序列化对象的成员名称此 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.ObjectId">
      <summary>表示可序列化对象的 ID 此 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="F:System.AddIn.Contract.SerializableObjectData.ParentId">
      <summary>表示可序列化对象的父对象的 ID 此 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> 描述。</summary>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteDelegateContract.InvokeDelegate(System.AddIn.Contract.Collections.IRemoteArgumentArrayContract)">
      <summary>调用该委托此 <see cref="T:System.AddIn.Contract.Automation.IRemoteDelegateContract" /> 标识。</summary>
      <param name="args">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> ，它指定委托参数。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它指定已调用委托的返回值。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetAddMethod">
      <summary>返回用于添加事件处理程序的方法的委托对事件 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 表示方法，用于添加事件处理程序委托对事件 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetMemberData">
      <summary>返回有关事件的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemoteMemberData" /> ，它提供有关事件的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteEventInfoContract.GetRemoveMethod">
      <summary>返回用于删除事件处理程序的方法程序委托从此事件 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 表示用于删除事件处理程序方法程序委托从此事件 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetFieldData">
      <summary>返回有关字段的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 标识。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemoteFieldData" /> ，它提供有关字段的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract)">
      <summary>返回字段的值指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 标识。</summary>
      <param name="obj">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识包含该字段的对象。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它指定的字段值。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteFieldInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument,System.Int32)">
      <summary>设置字段的值这 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 表示。</summary>
      <param name="obj">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识包含该字段的对象。</param>
      <param name="value">一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它指定的字段值。</param>
      <param name="localeId">字段中将使用任何特定于区域设置的类型转换为区域设置 ID。</param>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData">
      <summary>返回有关方法的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> ，它提供有关方法的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <summary>调用该方法指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识。</summary>
      <param name="target">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> ，它标识包含要调用的方法的对象。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何调用该方法。</param>
      <param name="parameters">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> ，指定方法的参数; null 如果方法不具有任何参数。</param>
      <param name="localeId">此方法将使用的任何区域设置特定的区域设置 ID 类型转换的参数或返回值。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它指定调用的方法的返回值。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType">
      <summary>返回 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> ，指定的当前类型 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> ，指定的当前类型 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
      <summary>由当前标识的对象强制转换 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 为指定的类型。</summary>
      <param name="canonicalName">要将对象转换为的类型规范的名称。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示强制转换运算的结果。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetGetMethod">
      <summary>返回 get 属性访问器此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 表示 get 属性访问器此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识; null 如果属性不具有 get 取值函数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetPropertyData">
      <summary>返回有关属性的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemotePropertyData" /> ，它提供有关属性的信息指示此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetSetMethod">
      <summary>返回 set 属性访问器此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 表示 set 属性访问器此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识; null 如果属性不具有 set 取值函数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.GetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <summary>返回属性的值指示此 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</summary>
      <param name="obj">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识包含该属性的对象。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何调用该属性。</param>
      <param name="index">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />  ，它指定索引的属性; 的索引值 null 如果该属性未编制索引。</param>
      <param name="localeId">要由属性执行的特定于区域设置转换中使用的区域设置 ID。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 指定属性值。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemotePropertyInfoContract.SetValue(System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.RemoteArgument@,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)">
      <summary>设置属性的值这 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 标识。</summary>
      <param name="target">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识包含该属性的对象。</param>
      <param name="value">一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 指定属性值。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何调用该属性。</param>
      <param name="index">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> ，它指定索引的属性; 的索引值 null 如果该属性未编制索引。</param>
      <param name="localeId">属性中将使用任何特定于区域设置的类型转换为区域设置 ID。</param>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
      <summary>返回当前的规范名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <returns>当前的规范名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
      <summary>返回 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 提供访问权限的指定事件的当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="name">事件的当前名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何进行搜索的事件。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> ，它提供到指定事件的访问，如果找到; 否则为 null。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 提供对当前的指定事件的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何进行搜索的事件。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 对象提供访问权限的事件的匹配指定的绑定约束; 否则为一个空 <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>返回 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 提供对当前的指定字段的访问 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="name">当前字段的名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何为该字段中搜索。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 提供访问权限指定的字段中，如果找到; 否则为 null。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 提供对当前的指定字段的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值用于指定要搜索的字段的方式。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 对象可访问的字段的匹配指定的绑定约束; 否则为一个空 <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
      <summary>返回由当前实现的接口 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="canonicalName">由当前实现的接口的规范名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> ，表示指定规范的接口将命名为指示此 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 实现。null 如果此 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 未实现指定规范名称的接口。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
      <summary>返回由当前实现的接口 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 这些对象表示由当前实现的所有接口 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.IContract" /> 提供对所有在当前类型的指定的成员的指定成员的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, ，使用指定的绑定约束。</summary>
      <param name="name">当前成员的名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。 该名称可表示多个具有相同名称的成员。</param>
      <param name="memberTypes">按位组合 <see cref="T:System.Reflection.MemberTypes" /> 值，该值指定要搜索的成员。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何搜索的成员。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.IContract" /> 这些对象表示的当前成员 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 具有指定的名称并且满足指定条件的 <paramref name="memberTypes" /> 和 <paramref name="bindingFlags" /> 参数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.IContract" /> 提供对在当前的所有成员的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 的匹配指定的绑定约束。</summary>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何搜索的成员。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.IContract" /> 提供对当前的成员的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 满足指定的绑定约束。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
      <summary>返回 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 提供对当前的指定方法的访问 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="name">当前方法的名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定   穓碝方法。</param>
      <param name="remoteTypes">
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 代表个数、 顺序和类型的方法的参数来获取的对象。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 找到; 否则为如果提供对指定的方法的访问 null。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 提供对当前的指定方法的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定   穓碝方法。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 提供对与指定的绑定约束匹配的方法访问的对象。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
      <summary>返回的集合 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 提供对当前的指定属性的访问的对象 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定如何为属性搜索。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 提供对与指定的绑定约束匹配的属性的访问的对象。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
      <summary>返回 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 提供访问权限的指定属性的当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="name">当前属性的名称 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 值，该值指定   穓碝方法。</param>
      <param name="remoteReturnType">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> ，它指定该属性的返回类型。</param>
      <param name="remoteTypes">
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 的 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 对象，表示指定的属性的参数。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 提供访问权限指定的属性，如果找到; 否则为 null。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
      <summary>返回有关对象的类型信息当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 标识。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 包含有关对象的信息，当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 标识。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
      <summary>调用指定的成员的当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />。</summary>
      <param name="name">要调用的成员的名称。</param>
      <param name="bindingFlags">按位组合 <see cref="T:System.Reflection.BindingFlags" /> 指定   穓碝该成员的值。</param>
      <param name="target">
        <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 对其调用指定的成员。</param>
      <param name="remoteArgs">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> ，其中包含要传递给要调用的成员的参数。</param>
      <param name="remoteArgModifiers">布尔值，用于指示数组是否每个 <paramref name="remoteArgs" /> 通过引用传递值。</param>
      <param name="localeId">要被调用的成员可能执行的特定于区域设置转换中使用的区域设置 ID。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，表示被调用成员的返回值。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IArrayContract`1.GetCount">
      <summary>返回在包含的元素数 <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 中包含的元素数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IArrayContract`1.GetItem(System.Int32)">
      <summary>返回指定索引处的元素。</summary>
      <param name="index">要返回的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IArrayContract`1.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IArrayContract`1.SetItem(System.Int32,`0)">
      <summary>指定索引处的元素替换为指定 <see cref="T:System.AddIn.Contract.IContract" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="value">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IArrayContract`1.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)">
      <summary>将 <see cref="T:System.AddIn.Contract.IContract" /> 添加到 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 中。</summary>
      <param name="item">要添加到 <see cref="T:System.AddIn.Contract.IContract" /> 的 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear">
      <summary>从 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 中移除所有元素。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.AddIn.Contract.IContract" /> 处于 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</summary>
      <param name="item">要在 <see cref="T:System.AddIn.Contract.IContract" /> 中定位的 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</param>
      <returns>true 如果指定 <see cref="T:System.AddIn.Contract.IContract" /> 处于 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />; 否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)">
      <summary>从目标数组的指定索引处开始，将整个 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 复制到兼容的一维数组。</summary>
      <param name="array">一维数组，它是从 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 中复制的元素的目标。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 -源 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 中的元素个数大于从 <paramref name="arrayIndex" /> 到目标数组末尾之间的可用空间。- 或 -类型 <paramref name="C" /> 无法自动转换为目标数组的类型。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount">
      <summary>返回在包含的元素数 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 中包含的元素数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly">
      <summary>返回一个值，该值指示是否 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 是只读的。</summary>
      <returns>如果 true 是只读的，则为 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />；否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)">
      <summary>从 <see cref="T:System.AddIn.Contract.IContract" /> 中移除第一次出现的特定 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</summary>
      <param name="item">要从 <see cref="T:System.AddIn.Contract.IContract" /> 移除的 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</param>
      <returns>如果成功移除了 <paramref name="item" />，则为 true；否则为 false。 如果在 false 中没有找到 <paramref name="item" />，则此方法也会返回 <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />。</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IEnumerableContract`1.GetEnumeratorContract">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
      <summary>返回 <see cref="T:System.AddIn.Contract.IContract" /> 集合中位于枚举数当前位置。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> 集合中位于枚举数当前位置。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
      <summary>将枚举数推进到集合的下一个元素。</summary>
      <returns>如果枚举数已成功地推进到下一个元素，则为 true；如果枚举数传递到集合的末尾，则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)">
      <summary>返回指定索引处的元素。</summary>
      <param name="index">要获取的元素的索引(索引从零开始)。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)">
      <summary>返回中的特定元素的索引 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />。</summary>
      <param name="item">要在 <see cref="T:System.AddIn.Contract.IContract" /> 中定位的 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />。</param>
      <returns>如果在列表中找到，则为 <paramref name="item" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)">
      <summary>将中的元素插入 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 中指定索引处。</summary>
      <param name="index">从零开始的索引，在其中插入 <paramref name="item" />。</param>
      <param name="item">
        <see cref="T:System.AddIn.Contract.IContract" /> 在中插入 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)">
      <summary>移除指定索引处的元素。</summary>
      <param name="index">要移除的元素的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)">
      <summary>替换指定索引处的元素。</summary>
      <param name="index">若要设置的元素位置的从零开始索引。</param>
      <param name="value">要设置指定索引处的元素。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)">
      <summary>返回指定索引处的元素。</summary>
      <param name="index">要返回的元素的从零开始的索引。</param>
      <returns>指定索引处的元素。</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)">
      <summary>指定索引处的元素替换为指定 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="value">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(System.AddIn.Contract.RemoteArgument)">
      <summary>添加 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 到末尾 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</summary>
      <param name="newItem">要添加到 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 的结尾处的 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</param>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear">
      <summary>从 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" /> 中移除所有元素。</summary>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(System.AddIn.Contract.RemoteArgument)">
      <summary>指示是否指定 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 处于 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</summary>
      <param name="item">要在 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 中定位的 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</param>
      <returns>如果在 true 中找到 <paramref name="item" />，则为 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />；否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(System.AddIn.Contract.RemoteArgument)">
      <summary>返回指定的第一个匹配项的从零开始索引 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 中 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</summary>
      <param name="item">要在 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 中定位的 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</param>
      <returns>第一个匹配项的从零开始索引 <paramref name="item" /> 中 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />, ，如果找到; 否则为-1。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(System.Int32,System.AddIn.Contract.RemoteArgument)">
      <summary>将插入 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 到 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" /> 中指定索引处。</summary>
      <param name="index">从零开始的索引，在其中插入 <paramref name="item" />。</param>
      <param name="item">要插入的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(System.AddIn.Contract.RemoteArgument)">
      <summary>移除指定的第一个匹配项 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 从 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" />。</summary>
      <param name="item">要移除的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</param>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(System.Int32)">
      <summary>移除 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract" /> 的指定索引处的元素。</summary>
      <param name="index">要移除的元素的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount">
      <summary>返回在包含的元素数 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" /> 中包含的元素数。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)">
      <summary>添加一个带有指定的键和值的元素 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />。</summary>
      <param name="key">用作要添加的元素的键的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</param>
      <param name="value">用作要添加的元素的键的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 中已存在具有相同键的元素。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear">
      <summary>从 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 中移除所有元素。</summary>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(System.AddIn.Contract.RemoteArgument)">
      <summary>指示是否 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 包含具有指定键的元素。</summary>
      <param name="key">要在 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 中定位的键。</param>
      <returns>如果 true 包含具有指定键的元素，则为 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />；否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract">
      <summary>返回 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract" /> 可用于循环访问中的元素 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract" /> 可用于循环访问中的元素 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(System.AddIn.Contract.RemoteArgument)">
      <summary>返回具有指定键的元素的值。</summary>
      <param name="key">要返回的值的键。</param>
      <returns>具有指定键的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys">
      <summary>返回 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" /> ，它包含的关键字 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 对象。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" /> ，它包含的关键字 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 对象。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues">
      <summary>返回 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" /> ，其中包含的值 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 对象。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract" /> ，其中包含的值 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 对象。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(System.AddIn.Contract.RemoteArgument)">
      <summary>从 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 中移除带有指定键的元素。</summary>
      <param name="key">要移除的元素的键。</param>
      <returns>如果成功找到并移除该元素，则为 true；否则为 false。 如果在 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 中没有找到 <paramref name="key" />，则此方法返回 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)">
      <summary>替换元素的值。</summary>
      <param name="key">要替换的值的键。</param>
      <param name="value">指定的元素的新值。</param>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract.GetEntry">
      <summary>返回的键和值的当前 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" /> ，其中包含的键和值的当前 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract" /> 位于前面的第一项 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 或之后的最后一项。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract.GetKey">
      <summary>返回当前的键 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 包含当前密钥 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract" /> 位于前面的第一项 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 或之后的最后一项。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract.GetValue">
      <summary>返回的当前值 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它包含当前值 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 条目。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract" /> 位于前面的第一项 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" /> 或之后的最后一项。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumerableContract.GetEnumeratorContract">
      <summary>返回一个可用于循环访问集合的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent">
      <summary>返回 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 集合中位于枚举数当前位置。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 集合中位于枚举数当前位置。</returns>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext">
      <summary>将枚举数推进到集合的下一个元素。</summary>
      <returns>如果枚举数已成功地推进到下一个元素，则为 true；如果枚举数传递到集合的末尾，则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry.#ctor(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)">
      <summary>初始化的实例 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" /> 具有指定的键和值结构。</summary>
      <param name="key">
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 包含在新密钥 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" />。</param>
      <param name="value">
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，包含在新的值 <see cref="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry" />。</param>
    </member>
    <member name="M:System.AddIn.Contract.IContract.AcquireLifetimeToken">
      <summary>指定的协定是访问客户端，直到客户端在撤消此协定。</summary>
      <returns>一个值，也称为生存期标记，用于标识已获取协定的客户端。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IContract.GetRemoteHashCode">
      <summary>返回的哈希代码 <see cref="T:System.AddIn.Contract.IContract" />。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IContract.QueryContract(System.String)">
      <summary>返回由该协定实现的协定。</summary>
      <param name="contractIdentifier">一个字符串，标识所请求的约定。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> ，表示客户端正在请求从当前协定; 一个协定 null 如果当前协定不支持请求的约定。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)">
      <summary>指示指定的协定是等同于此 <see cref="T:System.AddIn.Contract.IContract" />。</summary>
      <param name="contract">要与此比较的协定 <see cref="T:System.AddIn.Contract.IContract" />。</param>
      <returns>true 如果 <paramref name="contract" /> 是否等同于此 <see cref="T:System.AddIn.Contract.IContract" />; 否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IContract.RemoteToString">
      <summary>返回当前的字符串表示 <see cref="T:System.AddIn.Contract.IContract" />。</summary>
      <returns>当前的字符串表示 <see cref="T:System.AddIn.Contract.IContract" />。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)">
      <summary>指定的协定是不能再访问客户端。</summary>
      <param name="token">一个值，也称为生存期标记，用于标识正在调用协定的客户端。</param>
    </member>
    <member name="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent">
      <summary>返回集合中位于枚举数当前位置的对象。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> 集合中位于枚举数当前位置。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext">
      <summary>将枚举数推进到集合的下一个元素。</summary>
      <returns>如果枚举数已成功地推进到下一个元素，则为 true；如果枚举数传递到集合的末尾，则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IEnumeratorContract`1.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
      <exception cref="T:System.InvalidOperationException">创建枚举器后，已修改该集合。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.AssemblyLoaded(System.String)">
      <summary>外接程序执行器加载的外接程序程序集之后调用。</summary>
      <param name="assemblyName">已加载的程序集的名称。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.AssemblyLoadedFrom(System.String)">
      <summary>外接程序执行器从指定位置加载的外接程序程序集之后调用。</summary>
      <param name="assemblyFile">已加载的程序集的名称。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.AssemblyLoading(System.String)">
      <summary>外接程序执行器加载程序的外接程序程序集前立即调用。</summary>
      <param name="assemblyName">要加载的程序集的名称。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.AssemblyLoadingFrom(System.String)">
      <summary>之前调用外接程序执行器加载的外接程序程序集的指定位置。</summary>
      <param name="assemblyFile">要加载的程序集的名称。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.EntryPointStarted(System.AddIn.Contract.IContract)">
      <summary>在外接程序执行器实例化的外接程序程序集的入口点之后调用。</summary>
      <param name="entryPoint">
        <see cref="T:System.AddIn.Contract.IContract" /> ，表示已实例化的入口点。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.EntryPointStarting(System.String,System.String,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract)">
      <summary>之前调用外接程序执行器实例化中的外接程序程序集的入口点。</summary>
      <param name="assemblyName">外接程序程序集的名称。</param>
      <param name="startupClass">是外接程序程序集的入口点类的名称。</param>
      <param name="initArgs">
        <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> ，其中包含将传递到构造函数的参数 <paramref name="startupClass" />。</param>
    </member>
    <member name="M:System.AddIn.Contract.IExecutorExtensionContract.ExecutorCreated">
      <summary>外接程序加载器创建新的外接程序执行后调用。</summary>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.Add(`0)">
      <summary>将对象添加到 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="item">要添加的对象。</param>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.Clear">
      <summary>删除所有对象从 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.Contains(`0)">
      <summary>确定特定项目是否在 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="item">要在集合中查找的对象。</param>
      <returns>如果 true 位于集合中，则为 <paramref name="item" />；否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.GetCount">
      <summary>获取在项数 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <returns>集合中项的数目。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract">
      <summary>返回一个枚举数循环访问 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> 枚举器，用于循环访问集合。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly">
      <summary>确定是否 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是只读的。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)">
      <summary>返回指定索引处的项 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="index">要获取的项的索引（索引从零开始）。</param>
      <returns>指定索引处的项。</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)">
      <summary>返回中的特定项的索引 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 集合。</summary>
      <param name="item">集合中的一项。</param>
      <returns>指定的项的索引。</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)">
      <summary>中的指定索引处插入一项 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="index">从零开始的索引，在其中插入 <paramref name="item" />。</param>
      <param name="item">
        <see cref="T:System.AddIn.Contract.IContract" /> 对象，用于在插入 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是只读的。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.Remove(`0)">
      <summary>中移除的项从 <see cref="T:System.AddIn.Contract.IListContract`1" /> 指定类型的集合。</summary>
      <param name="item">要从集合中移除的项。</param>
      <returns>true 如果某项被删除;否则为 false。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)">
      <summary>移除中的指定索引处的项 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="index">要移除的项的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是只读的。</exception>
    </member>
    <member name="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)">
      <summary>设置中指定索引处的项 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <param name="index">在此处设置的项从零开始的索引。</param>
      <param name="item">要设置指定索引处的项。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于的返回值 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是只读的。</exception>
    </member>
    <member name="M:System.AddIn.Contract.INativeHandleContract.GetHandle">
      <summary>获取窗口的句柄 (Hwnd)。</summary>
      <returns>
        <see cref="T:System.IntPtr" /> 对象，它表示指向窗口的句柄的指针。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IProfferServiceContract.ProfferService(System.String,System.AddIn.Contract.IServiceProviderContract)">
      <summary>将服务添加到可以访问的客户端组件的服务集。</summary>
      <param name="serviceIdentifier">一个字符串，标识所提供的服务。</param>
      <param name="service">
        <see cref="T:System.AddIn.Contract.IServiceProviderContract" /> 实现所提供的服务。</param>
    </member>
    <member name="M:System.AddIn.Contract.IProfferServiceContract.RevokeService(System.String)">
      <summary>从组件提供的服务集内移除一项服务。</summary>
      <param name="serviceIdentifier">一个字符串，标识要撤消的服务。</param>
    </member>
    <member name="M:System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName">
      <summary>返回的对象类型的规范名称此 <see cref="T:System.AddIn.Contract.ISerializableObjectContract" /> 描述。</summary>
      <returns>对象的类型的规范名称此 <see cref="T:System.AddIn.Contract.ISerializableObjectContract" /> 描述。</returns>
    </member>
    <member name="M:System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData">
      <summary>返回可用于帮助对象反序列化的数据指示此 <see cref="T:System.AddIn.Contract.ISerializableObjectContract" /> 描述。</summary>
      <returns>一个 <see cref="T:System.AddIn.Contract.SerializableObjectData" /> ，其中包含有关对象的数据指示此 <see cref="T:System.AddIn.Contract.ISerializableObjectContract" /> 描述。</returns>
    </member>
    <member name="M:System.AddIn.Contract.IServiceProviderContract.QueryService(System.String,System.String)">
      <summary>返回由此实现的服务协定 <see cref="T:System.AddIn.Contract.IServiceProviderContract" />。</summary>
      <param name="serviceIdentifier">所请求服务的名称。</param>
      <param name="serviceContractIdentifier">正在请求的服务协定。</param>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> ，表示客户端正在从请求的服务协定 <see cref="T:System.AddIn.Contract.IServiceProviderContract" />; null 如果 <see cref="T:System.AddIn.Contract.IServiceProviderContract" /> 未实现请求的约定。</returns>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.AddIn.Contract.IContract" /> 参数。</summary>
      <param name="value">
        <see cref="T:System.AddIn.Contract.IContract" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.AddIn.Contract.IContract" /> 可以通过引用传递的参数。</summary>
      <param name="value">
        <see cref="T:System.AddIn.Contract.IContract" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 类使用指定 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 和 <see cref="T:System.TypeCode" /> 不按引用传递的参数。</summary>
      <param name="remoteArgKind">其中一个 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 值，该值指示是否 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示内部函数的类型，内部类型的数组 <see cref="T:System.AddIn.Contract.IContract" />, ，或 <see cref="F:System.Type.Missing" /> 值。</param>
      <param name="typeCode">一个 <see cref="T:System.TypeCode" /> ，它指定远程参数的基类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 或 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" />, ，和 <paramref name="typeCode" /> 是 <see cref="F:System.TypeCode.Object" /> 或 <see cref="F:System.TypeCode.Empty" />。- 或 -<paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" />，且 <paramref name="typeCode" /> 不是 <see cref="F:System.TypeCode.Empty" />。- 或 -<paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" />，且 <paramref name="typeCode" /> 不是 <see cref="F:System.TypeCode.Object" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 类使用指定 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 和 <see cref="T:System.TypeCode" /> 可以通过引用传递的参数。</summary>
      <param name="remoteArgKind">其中一个 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 值，该值指示是否 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示内部函数的类型，内部类型的数组 <see cref="T:System.AddIn.Contract.IContract" />, ，或 <see cref="F:System.Type.Missing" /> 值。</param>
      <param name="typeCode">一个 <see cref="T:System.TypeCode" /> ，它指定远程参数的基类型。</param>
      <param name="isByRef">true 如果远程参数由引用传递否则为 false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 或 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" />, ，和 <paramref name="typeCode" /> 是 <see cref="F:System.TypeCode.Object" /> 或 <see cref="F:System.TypeCode.Empty" />。- 或 -<paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" />，且 <paramref name="typeCode" /> 不是 <see cref="F:System.TypeCode.Empty" />。- 或 -<paramref name="remoteArgKind" /> 是 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" />，且 <paramref name="typeCode" /> 不是 <see cref="F:System.TypeCode.Object" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="remoteArgKind" /> 不是有效 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 值。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Array" /> 参数。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 可在过程中传递的参数或应用程序域边界。</param>
      <exception cref="T:System.ArgumentException">数组元素类型不是基类型 (即， <see cref="M:System.Type.GetTypeCode(System.Type)" /> 数组元素类型的方法将返回 <see cref="F:System.TypeCode.Object" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Array" /> 可以通过引用传递的参数。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="array" /> 是通过引用传递的参数，否则为 false。</param>
      <exception cref="T:System.ArgumentException">数组元素类型不是基类型 (即， <see cref="M:System.Type.GetTypeCode(System.Type)" /> 方法将返回 <see cref="F:System.TypeCode.Object" /> 为该数组元素类型)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Boolean" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Boolean" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Boolean" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Boolean" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Byte" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Byte" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Byte" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Byte" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Char" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Char" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Char" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Char" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.DateTime" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.DateTime" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.DateTime" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.DateTime" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.DBNull" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.DBNull" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.DBNull" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.DBNull" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Decimal" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Decimal" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Decimal" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Decimal" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Double" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Double" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Double" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Double" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int16" /> 参数。</summary>
      <param name="value">
        <see cref="T:System.Int16" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int16" /> 可以通过引用传递的参数。</summary>
      <param name="value">
        <see cref="T:System.Int16" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int32" /> 参数。</summary>
      <param name="value">
        <see cref="T:System.Int32" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int32" /> 可以通过引用传递的参数。</summary>
      <param name="value">
        <see cref="T:System.Int32" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int64" /> 参数。</summary>
      <param name="value">
        <see cref="T:System.Int64" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Int64" /> 可以通过引用传递的参数。</summary>
      <param name="value">
        <see cref="T:System.Int64" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.SByte" /> 参数。</summary>
      <param name="value">
        <see cref="T:System.SByte" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.SByte" /> 可以通过引用传递的参数。</summary>
      <param name="value">
        <see cref="T:System.SByte" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Single" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.Single" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.Single" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.Single" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.String" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.String" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.String" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.String" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt16" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt16" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt16" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt16" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt32" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt32" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt32" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt32" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt64" /> 参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt64" /> 可在过程中传递的参数或应用程序域边界。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示类 <see cref="T:System.UInt64" /> 可以通过引用传递的参数。</summary>
      <param name="value">一个 <see cref="T:System.UInt64" /> 可在过程中传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 如果 <paramref name="value" /> 是通过引用传递的参数，否则为 false。</param>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)">
      <summary>创建 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 不按引用传递的参数。</summary>
      <param name="value">将在进程之间传递的参数或应用程序域边界。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它表示指定的参数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Object" /> 和 <paramref name="value" /> 不是 <see cref="T:System.AddIn.Contract.IContract" />。- 或 -<see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Empty" /> 和 <paramref name="value" /> 未设置为 <see cref="F:System.Reflection.Missing.Value" />。- 或 -<paramref name="value" /> 未实现 <see cref="T:System.IConvertible" /> 接口和 <paramref name="value" /> 不是 <see cref="T:System.Array" />。- 或 -<paramref name="value" /> 是 <see cref="T:System.Array" /> ，其中包含与元素 <see cref="T:System.TypeCode" /> 值 <see cref="F:System.TypeCode.Object" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)">
      <summary>创建 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 可以通过引用传递的参数。</summary>
      <param name="value">将在进程之间传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 要传递 <paramref name="value" /> 参数通过引用; 否则为 false。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它表示指定的参数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Object" /> 和 <paramref name="value" /> 不是 <see cref="T:System.AddIn.Contract.IContract" />。- 或 -<see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Empty" /> 和 <paramref name="value" /> 未设置为 <see cref="F:System.Reflection.Missing.Value" />。- 或 -<paramref name="value" /> 未实现 <see cref="T:System.IConvertible" /> 接口和 <paramref name="value" /> 不是 <see cref="T:System.Array" />。- 或 -<paramref name="value" /> 是 <see cref="T:System.Array" /> ，其中包含与元素 <see cref="T:System.TypeCode" /> 值 <see cref="F:System.TypeCode.Object" />。</exception>
    </member>
    <member name="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)">
      <summary>创建 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 具有指定的类型代码且可通过引用传递的参数。</summary>
      <param name="value">将在进程之间传递的参数或应用程序域边界。</param>
      <param name="isByRef">true 若要通过引用传递参数否则为 false。</param>
      <param name="typeCodeToUse">一个 <see cref="T:System.TypeCode" /> ，该值指示的类型代码 <paramref name="value" />, ，如果 <paramref name="value" /> 不是 <see cref="T:System.Array" />。 否则为 <see cref="T:System.TypeCode" /> ，该值指示中的元素的类型代码 <paramref name="value" />。</param>
      <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" /> ，它表示指定的参数。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Object" />, ，<paramref name="value" /> 不是 <see cref="T:System.AddIn.Contract.IContract" />, ，和 <paramref name="value" /> 不是 null。- 或 -<see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 是 <see cref="F:System.TypeCode.Empty" /> 和 <paramref name="value" /> 不是 <see cref="F:System.Reflection.Missing.Value" />。- 或 -<paramref name="value" /> 未实现 <see cref="T:System.IConvertible" /> 接口， <paramref name="value" /> 不是 null, ，和 <paramref name="value" /> 不是 <see cref="T:System.Array" />。- 或 -<paramref name="value" /> 是 <see cref="T:System.Array" /> ，其中包含与元素 <see cref="T:System.TypeCode" /> 值 <see cref="F:System.TypeCode.Object" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.TypeCode" /> 的 <paramref name="value" /> 不是 <see cref="F:System.TypeCode.DBNull" /> 和 <paramref name="typeCodeToUse" /> 是 <see cref="F:System.TypeCode.DBNull" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="typeCodeToUse" /> 未指定有效的 <see cref="T:System.TypeCode" /> 值。</exception>
    </member>
    <member name="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor">
      <summary>初始化 <see cref="T:System.AddIn.Pipeline.AddInContractAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.AddIn.Pipeline.QualificationDataAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.AddIn.Pipeline.QualificationDataAttribute" /> 类的新实例。</summary>
      <param name="name">任何可作为键/值对中的键的标识符。</param>
      <param name="value">任何值。</param>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.ArrayValue">
      <summary>获取或设置 <see cref="T:System.Array" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Array" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; null 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性设置为 <see cref="F:System.TypeCode.Object" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.BooleanValue">
      <summary>获取或设置 <see cref="T:System.Boolean" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Boolean" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; false 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Boolean" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.ByteValue">
      <summary>获取或设置 <see cref="T:System.Byte" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Byte" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Byte" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.CharValue">
      <summary>获取或设置 <see cref="T:System.Char" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Char" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; <see cref="F:System.Char.MinValue" /> 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Char" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.ContractValue">
      <summary>获取或设置 <see cref="T:System.AddIn.Contract.IContract" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.AddIn.Contract.IContract" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; null 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Object" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.DateTimeValue">
      <summary>获取或设置 <see cref="T:System.DateTime" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.DateTime" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; <see cref="F:System.DateTime.MinValue" /> 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.DateTime" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.DBNullValue">
      <summary>获取或设置 <see cref="T:System.DBNull" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.DBNull" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; null 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.DBNull" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.DecimalValue">
      <summary>获取或设置 <see cref="T:System.Decimal" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Decimal" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Decimal" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.DoubleValue">
      <summary>获取或设置 <see cref="T:System.Double" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Double" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 如果 0.0 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Double" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.Int16Value">
      <summary>获取或设置 <see cref="T:System.Int16" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Int16" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Int16" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.Int32Value">
      <summary>获取或设置 <see cref="T:System.Int32" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Int32" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Int32" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.Int64Value">
      <summary>获取或设置 <see cref="T:System.Int64" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Int64" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Int64" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.IsByRef">
      <summary>获取或设置一个值，该值指示是否 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示通过引用传递的参数。</summary>
      <returns>true 如果 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示通过引用传递的参数，否则为 false。</returns>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.MissingValue">
      <summary>获取 <see cref="F:System.Type.Missing" /> 值。</summary>
      <returns>
        <see cref="F:System.Type.Missing" /> 值。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -检索此属性的值时 <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Empty" /> 值。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind">
      <summary>获取 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> ，该值指示的参数的种类， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>其中一个 <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> 值，该值指示是否 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示内部函数的类型，内部类型的数组 <see cref="T:System.AddIn.Contract.IContract" />, ，或 <see cref="F:System.Type.Missing" /> 值。</returns>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.SByteValue">
      <summary>获取或设置 <see cref="T:System.SByte" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.SByte" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.SByte" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.SingleValue">
      <summary>获取或设置 <see cref="T:System.Single" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.Single" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 如果 0.0 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.Single" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.StringValue">
      <summary>获取或设置 <see cref="T:System.String" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.String" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; null 如果的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.String" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.TypeCode">
      <summary>获取 <see cref="T:System.TypeCode" /> ，该值指示参数的基类型， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>一个 <see cref="T:System.TypeCode" /> ，该值指示参数的基类型， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</returns>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.UInt16Value">
      <summary>获取或设置 <see cref="T:System.UInt16" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.UInt16" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.UInt16" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.UInt32Value">
      <summary>获取或设置 <see cref="T:System.UInt32" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.UInt32" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.UInt32" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Contract.RemoteArgument.UInt64Value">
      <summary>获取或设置 <see cref="T:System.UInt64" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
      <returns>
        <see cref="T:System.UInt64" /> ， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示; 0 （零） 的值 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 尚未指定。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性未设置为 <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> 值。- 或 -<see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> 属性未设置为 <see cref="F:System.TypeCode.UInt64" /> 值。- 或 -设置此属性时 <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> 属性是 false。</exception>
    </member>
    <member name="P:System.AddIn.Pipeline.QualificationDataAttribute.Name">
      <summary>获取名称，它可作为键/值对的键。</summary>
      <returns>属性的分配的名称。</returns>
    </member>
    <member name="P:System.AddIn.Pipeline.QualificationDataAttribute.Value">
      <summary>获取键/值对的值。</summary>
      <returns>分配给该属性值。</returns>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteDelegateContract">
      <summary>定义一个协定，组件可用于访问跨应用程序域和进程边界的委托。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract">
      <summary>定义一个协定，组件可用于跨应用程序域和进程边界访问有关事件的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract">
      <summary>定义一个协定，组件可用于跨应用程序域和进程边界访问字段的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
      <summary>定义一个协定，组件可用于跨应用程序域和进程边界访问有关方法的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
      <summary>定义一个协定，组件可用于跨应用程序域和进程边界访问的对象。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract">
      <summary>定义一个协定，组件可用于跨应用程序域和进程边界访问有关属性的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
      <summary>定义一个协定，组件可用于访问类型信息和跨应用程序域和进程边界调用成员。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemoteFieldData">
      <summary>提供有关某个字段的类型的组件可跨应用程序域和进程边界访问的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemoteMemberData">
      <summary>提供有关成员的组件可以访问跨应用程序域和进程边界的类型的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemoteMethodData">
      <summary>提供了有关方法的类型的组件可跨应用程序域和进程边界访问的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemoteParameterData">
      <summary>提供有关参数或返回值属于组件可以访问跨应用程序域和进程边界的类型的方法的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemotePropertyData">
      <summary>提供有关组件可以访问跨应用程序域和进程边界的类型的属性的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Automation.RemoteTypeData">
      <summary>提供有关组件可以访问跨应用程序域和进程边界的类型的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IArrayContract`1">
      <summary>表示的泛型数组 <see cref="T:System.AddIn.Contract.IContract" /> 对象。</summary>
      <typeparam name="C">数组中元素的类型。<paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.Collections.ICollectionContract`1">
      <summary>表示的泛型集合 <see cref="T:System.AddIn.Contract.IContract" /> 对象。</summary>
      <typeparam name="C">集合中的元素类型。<paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IEnumerableContract`1">
      <summary>公开支持的泛型集合上进行简单迭代的枚举 <see cref="T:System.AddIn.Contract.IContract" /> 对象。</summary>
      <typeparam name="C">要枚举的对象的类型。<paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
      <summary>枚举的泛型集合的元素 <see cref="T:System.AddIn.Contract.IContract" /> 对象。</summary>
      <typeparam name="C">要枚举的对象的类型。<paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IListContract`1">
      <summary>表示的泛型集合 <see cref="T:System.AddIn.Contract.IContract" /> 可按照索引单独访问的对象。</summary>
      <typeparam name="C">列表中的对象的类型。<paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract">
      <summary>表示一组 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 对象。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract">
      <summary>表示一组 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 动态调整自身大小所需的对象。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract">
      <summary>表示 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 对象集合。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract">
      <summary>表示一套 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 作为存储的对象键/值对。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract">
      <summary>枚举中的元素 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumerableContract">
      <summary>公开支持的集合上进行简单迭代的枚举 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 对象。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
      <summary>枚举的集合中的元素 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 对象。</summary>
    </member>
    <member name="T:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry">
      <summary>定义中的键/值对 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract" />。</summary>
    </member>
    <member name="T:System.AddIn.Contract.IContract">
      <summary>表示独立更新的组件之间的通信所用的所有约定的基接口。</summary>
    </member>
    <member name="T:System.AddIn.Contract.IEnumeratorContract`1">
      <summary>枚举中的元素 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</summary>
      <typeparam name="T">要枚举的对象类型。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.IExecutorExtensionContract">
      <summary>定义一个宿主应用程序可实现来扩展外接程序执行器的接口。</summary>
    </member>
    <member name="T:System.AddIn.Contract.IListContract`1">
      <summary>表示由合同定义和用来在主机与外接程序之间传递该协定类型的集合类型的泛型列表。</summary>
      <typeparam name="T">协定类型的列表中的对象。</typeparam>
    </member>
    <member name="T:System.AddIn.Contract.INativeHandleContract">
      <summary>可以从本机代码窗口的句柄 (Hwnd) 访问。</summary>
    </member>
    <member name="T:System.AddIn.Contract.IProfferServiceContract">
      <summary>允许客户端提供自定义服务添加到组件在其实现该协定。</summary>
    </member>
    <member name="T:System.AddIn.Contract.ISerializableObjectContract">
      <summary>定义一个协定，提供有关可序列化对象的信息。</summary>
    </member>
    <member name="T:System.AddIn.Contract.IServiceProviderContract">
      <summary>定义从一个组件中检索的服务协定的机制。</summary>
    </member>
    <member name="T:System.AddIn.Contract.RemoteArgument">
      <summary>表示可以跨进程传递类型的实例和应用程序域边界。</summary>
    </member>
    <member name="T:System.AddIn.Contract.RemoteArgumentKind">
      <summary>指定的参数的种类， <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示。</summary>
    </member>
    <member name="F:System.AddIn.Contract.RemoteArgumentKind.Missing">
      <summary>
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示 <see cref="F:System.Type.Missing" /> 值。 这是 <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> 属性的默认值。</summary>
    </member>
    <member name="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic">
      <summary>
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示内部数据类型。</summary>
    </member>
    <member name="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray">
      <summary>
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示 <see cref="T:System.Array" /> ，其中包含元素的内部数据类型。</summary>
    </member>
    <member name="F:System.AddIn.Contract.RemoteArgumentKind.Contract">
      <summary>
        <see cref="T:System.AddIn.Contract.RemoteArgument" /> 表示 <see cref="T:System.AddIn.Contract.IContract" />。</summary>
    </member>
    <member name="T:System.AddIn.Contract.SerializableObjectData">
      <summary>提供有关可序列化对象的信息。</summary>
    </member>
    <member name="T:System.AddIn.Pipeline.AddInContractAttribute">
      <summary>将对象标识为管道的外接程序协定段。</summary>
    </member>
    <member name="T:System.AddIn.Pipeline.QualificationDataAttribute">
      <summary>为管线段提供开发人员指定的数据。</summary>
    </member>
  </members>
</doc>