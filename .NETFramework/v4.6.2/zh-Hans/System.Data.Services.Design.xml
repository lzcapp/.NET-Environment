<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Services.Design</name>
  </assembly>
  <members>
    <member name="E:System.Data.Services.Design.EntityClassGenerator.OnPropertyGenerated">
      <summary>生成一个属性时发生。</summary>
    </member>
    <member name="E:System.Data.Services.Design.EntityClassGenerator.OnTypeGenerated">
      <summary>当生成某个类型时出现。</summary>
    </member>
    <member name="M:System.Data.Services.BuildProvider.DataServiceBuildProvider.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.BuildProvider.DataServiceBuildProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.BuildProvider.DataServiceBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>生成 C# 或 Visual Basic 代码 WCF 数据服务 客户端应用程序基于数据服务返回的元数据。</summary>
      <param name="assemblyBuilder">用于生成程序集的容器。</param>
    </member>
    <member name="M:System.Data.Services.Design.EdmToObjectNamespaceMap.Add(System.String,System.String)">
      <summary>添加实体数据模型命名空间和对象之间的映射。</summary>
      <param name="edmNamespace">包含命名空间名称的字符串。</param>
      <param name="objectNamespace">包含对象命名空间的字符串。</param>
    </member>
    <member name="M:System.Data.Services.Design.EdmToObjectNamespaceMap.Clear">
      <summary>清除 <see cref="T:System.Data.Services.Design.EdmToObjectNamespaceMap" />。</summary>
    </member>
    <member name="M:System.Data.Services.Design.EdmToObjectNamespaceMap.Contains(System.String)">
      <summary>查询映射中是否包含在对象 <paramref name="edmNamespace" /> 参数。</summary>
      <param name="edmNamespace">字符串值，该值包含查询的映射对象。</param>
      <returns>true 如果找到该对象;否则为 false。</returns>
    </member>
    <member name="M:System.Data.Services.Design.EdmToObjectNamespaceMap.Remove(System.String)">
      <summary>删除由标识对象 <paramref name="edmNamespace" /> 参数。</summary>
      <param name="edmNamespace">包含映射对象的字符串值。</param>
      <returns>true 如果操作成功，则否则为 false。</returns>
    </member>
    <member name="M:System.Data.Services.Design.EdmToObjectNamespaceMap.TryGetObjectNamespace(System.String,System.String@)">
      <summary>测试是否通过标识的对象 <paramref name="objectNamespace" /> 和 <paramref name="edmNamespace" /> 由映射 <see cref="T:System.Data.Services.Design.EdmToObjectNamespaceMap" />。</summary>
      <param name="edmNamespace">包含命名空间名称的字符串值。</param>
      <param name="objectNamespace">标识对象的命名空间的字符串值</param>
      <returns>true 如果未返回映射;否则为 false。</returns>
    </member>
    <member name="M:System.Data.Services.Design.EntityClassGenerator.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Design.EntityClassGenerator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.Design.EntityClassGenerator.#ctor(System.Data.Services.Design.LanguageOption)">
      <summary>初始化 <see cref="T:System.Data.Services.Design.EntityClassGenerator" /> 类的新实例。</summary>
      <param name="languageOption">选择编程语言。</param>
    </member>
    <member name="M:System.Data.Services.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter,System.String)">
      <summary>由参数标识的开关生成数据模型的代码。</summary>
      <param name="sourceReader">XML 读取器对象。</param>
      <param name="targetWriter">文本编写器对象。</param>
      <param name="namespacePrefix">包含命名空间前缀的字符串。</param>
      <returns>在生成期间发生的架构错误的列表。</returns>
    </member>
    <member name="M:System.Data.Services.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.String)">
      <summary>为对象模型生成代码。</summary>
      <param name="sourceReader">XML 读取器对象。</param>
      <param name="targetFilePath">包含目标文件的路径的字符串。</param>
      <returns>在生成期间发生的架构错误的列表。</returns>
    </member>
    <member name="M:System.Data.Services.Design.PropertyGeneratedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Design.PropertyGeneratedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.Design.PropertyGeneratedEventArgs.#ctor(System.Data.Metadata.Edm.MetadataItem,System.String,System.CodeDom.CodeTypeReference)">
      <summary>初始化 <see cref="T:System.Data.Services.Design.PropertyGeneratedEventArgs" /> 类的新实例。</summary>
      <param name="propertySource">属性源。</param>
      <param name="backingFieldName">支持字段名称。</param>
      <param name="returnType">返回类型。</param>
    </member>
    <member name="M:System.Data.Services.Design.TypeGeneratedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Design.TypeGeneratedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.Design.TypeGeneratedEventArgs.#ctor(System.Data.Metadata.Edm.GlobalItem,System.CodeDom.CodeTypeReference)">
      <summary>初始化 <see cref="T:System.Data.Services.Design.TypeGeneratedEventArgs" /> 类的新实例。</summary>
      <param name="typeSource">类型源。</param>
      <param name="baseType">基类型。</param>
    </member>
    <member name="P:System.Data.Services.Design.EdmToObjectNamespaceMap.Count">
      <summary>获取包含映射的计数 <see cref="T:System.Data.Services.Design.EdmToObjectNamespaceMap" />。</summary>
      <returns>包含映射的项计数的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EdmToObjectNamespaceMap.EdmNamespaces">
      <summary>获取 edmNamespace 中的项 <see cref="T:System.Data.Services.Design.EdmToObjectNamespaceMap" /> 对象。</summary>
      <returns>字符串值，该值包含 EdmNamespace 项。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EdmToObjectNamespaceMap.Item(System.String)">
      <summary>获取标识命名空间 <paramref name="edmNamespace" /> 参数。</summary>
      <param name="edmNamespace">字符串值，该值包含 edmNamespace 名称。</param>
      <returns>EdmNamespace 对象。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EntityClassGenerator.EdmToObjectNamespaceMap">
      <summary>获取 EdmToObjectNamespaceMap 生成实体类中使用对象。</summary>
      <returns>EdmToObjectNamespaceMap 对象。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EntityClassGenerator.LanguageOption">
      <summary>获取在生成数据模型中使用的语言选项。</summary>
      <returns>语言选项。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EntityClassGenerator.UseDataServiceCollection">
      <summary>获取或设置是否代码生成应包含支持数据绑定所需的代码。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，该值是 true 必选的; 否则为数据绑定代码，则当 false。</returns>
    </member>
    <member name="P:System.Data.Services.Design.EntityClassGenerator.Version">
      <summary>获取和设置的版本 WCF 数据服务 ，生成的代码目标。</summary>
      <returns>一个 <see cref="T:System.Data.Services.Design.DataServiceCodeVersion" /> 值，该值指示生成的代码的版本。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.AdditionalAttributes">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>其他属性。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.AdditionalGetStatements">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>附加的 Get 语句。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.AdditionalSetStatements">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>其他 Set 语句。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.BackingFieldName">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>支持字段名称。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.PropertySource">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>属性源。</returns>
    </member>
    <member name="P:System.Data.Services.Design.PropertyGeneratedEventArgs.ReturnType">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>返回类型。</returns>
    </member>
    <member name="P:System.Data.Services.Design.TypeGeneratedEventArgs.AdditionalAttributes">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>其他属性。</returns>
    </member>
    <member name="P:System.Data.Services.Design.TypeGeneratedEventArgs.AdditionalInterfaces">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>附加接口。</returns>
    </member>
    <member name="P:System.Data.Services.Design.TypeGeneratedEventArgs.AdditionalMembers">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>其他成员。</returns>
    </member>
    <member name="P:System.Data.Services.Design.TypeGeneratedEventArgs.BaseType">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>基类型。</returns>
    </member>
    <member name="P:System.Data.Services.Design.TypeGeneratedEventArgs.TypeSource">
      <summary>此类不是以公共方式使用，用于生成强类型化的客户端对象与数据服务进行通信。</summary>
      <returns>类型源。</returns>
    </member>
    <member name="T:System.Data.Services.BuildProvider.DataServiceBuildProvider">
      <summary>生成 C# 或 Visual Basic 代码 WCF 数据服务 客户端应用程序基于数据服务返回的元数据。</summary>
    </member>
    <member name="T:System.Data.Services.Design.DataServiceCodeVersion">
      <summary>指定的版本 开放式数据协议 (OData) 针对生成的代码。 </summary>
    </member>
    <member name="F:System.Data.Services.Design.DataServiceCodeVersion.V1">
      <summary>生成针对 1.0 版的代码。</summary>
    </member>
    <member name="F:System.Data.Services.Design.DataServiceCodeVersion.V2">
      <summary>生成针对 2.0 版的代码。</summary>
    </member>
    <member name="T:System.Data.Services.Design.EdmToObjectNamespaceMap">
      <summary>使用由代码生成命令行工具和 Visual Studio 中的工具生成强类型化的客户端对象与数据服务进行通信。</summary>
    </member>
    <member name="T:System.Data.Services.Design.EntityClassGenerator">
      <summary>使用由代码生成命令行工具和 Visual Studio 中的工具生成强类型化的客户端对象与数据服务进行通信。</summary>
    </member>
    <member name="T:System.Data.Services.Design.LanguageOption">
      <summary>使用由代码生成命令行工具和 Visual Studio 中的工具生成强类型化的客户端对象与数据服务进行通信。</summary>
    </member>
    <member name="F:System.Data.Services.Design.LanguageOption.GenerateCSharpCode">
      <summary>生成 C# 代码。</summary>
    </member>
    <member name="F:System.Data.Services.Design.LanguageOption.GenerateVBCode">
      <summary>生成 Visual Basic 代码。</summary>
    </member>
    <member name="T:System.Data.Services.Design.PropertyGeneratedEventArgs">
      <summary>使用由代码生成命令行工具和 Visual Studio 中的工具生成强类型化的客户端对象与数据服务进行通信。</summary>
    </member>
    <member name="T:System.Data.Services.Design.TypeGeneratedEventArgs">
      <summary>使用由代码生成命令行工具和 Visual Studio 中的工具生成强类型化的客户端对象与数据服务进行通信。</summary>
    </member>
  </members>
</doc>