<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.Context</name>
  </assembly>
  <members>
    <member name="M:System.Reflection.Context.CustomReflectionContext.#ctor">
      <summary>初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
      <summary>新实例初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 与指定的反射上下文作为基的类。</summary>
      <param name="source">作为基的反射上下文。</param>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
      <summary>在派生类中重写时，为在此反射上下文中指定的类型提供附加属性的集合。</summary>
      <param name="type">要为其添加属性的类型。</param>
      <returns>指定类型的其他属性的集合。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
      <summary>创建一个对象，表示要添加到一个类型，以用于其中一个属性 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法。</summary>
      <param name="propertyType">要创建的属性的类型。</param>
      <param name="name">要创建的属性的名称。</param>
      <param name="getter">一个对象，表示该属性的 get 取值函数。</param>
      <param name="setter">一个对象，表示该属性的 set 取值函数。</param>
      <returns>表示该属性的对象。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>创建一个对象，表示要添加到一个类型，以用于其中一个属性 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法，并使用指定的自定义属性。</summary>
      <param name="propertyType">要创建的属性的类型。</param>
      <param name="name">要创建的属性的名称。</param>
      <param name="getter">一个对象，表示该属性的 get 取值函数。</param>
      <param name="setter">一个对象，表示该属性的 set 取值函数。</param>
      <param name="propertyCustomAttributes">要应用于属性的自定义特性的集合。</param>
      <param name="getterCustomAttributes">自定义特性应用于此属性的集合 get 取值函数。</param>
      <param name="setterCustomAttributes">自定义特性应用于此属性的集合 set 取值函数。</param>
      <returns>表示该属性的对象。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>当在派生类中重写时，为在此反射上下文中表示的指定成员提供自定义特性的列表。</summary>
      <param name="member">将返回其自定义特性的成员。</param>
      <param name="declaredAttributes">在其当前上下文中的成员特性的集合。</param>
      <returns>表示此反射上下文中指定的成员的自定义特性的集合。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>当在派生类中重写时，为在此反射上下文中表示的指定参数提供自定义特性列表。</summary>
      <param name="parameter">将返回其自定义特性的参数。</param>
      <param name="declaredAttributes">在其当前上下文中的参数特性的集合。</param>
      <returns>表示此反射上下文中指定的参数的自定义特性的集合。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
      <summary>获取表示形式，在此反射上下文中，从另一个反射上下文由对象表示程序集。</summary>
      <param name="assembly">要在此上下文中表示的程序集外部表示形式。</param>
      <returns>在此反射上下文中的程序集的表示形式。</returns>
    </member>
    <member name="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
      <summary>获取表示形式，在此反射上下文中的对象由另一个反射上下文中表示的类型。</summary>
      <param name="type">要在此上下文中表示的类型的外部表示形式。</param>
      <returns>在此反射上下文中类型的表示形式。</returns>
    </member>
    <member name="T:System.Reflection.Context.CustomReflectionContext">
      <summary>表示自定义的反射上下文。</summary>
    </member>
  </members>
</doc>