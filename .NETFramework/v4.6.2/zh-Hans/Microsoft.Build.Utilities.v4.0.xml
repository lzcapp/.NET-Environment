<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Utilities.v4.0</name>
  </assembly>
  <members>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.AMD64">
      <summary>表示 AMD64 处理器。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.ARM">
      <summary>表示 ARM 处理器。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.IA64">
      <summary>表示 IA64 处理器。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.MSIL">
      <summary>表示 MSIL。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.X86">
      <summary>表示 x86 处理器。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例，并允许派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 类注册其资源。</summary>
      <param name="taskResources">任务资源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例，允许 <see cref="T:Microsoft.Build.Utilities.Task" /> 的派生类注册资源，以及提供前缀，以便根据字符串资源名称编写帮助关键字。</summary>
      <param name="taskResources">任务资源。</param>
      <param name="helpKeywordPrefix">帮助关键字前缀。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute">
      <summary>运行该任务。</summary>
      <returns>如果成功，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService">
      <summary>当在派生类中重写时，给予任务无限的租约时间。</summary>
      <returns>null 可指定无限生存期。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.AssemblyFoldersExInfo.#ctor(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView,System.String,System.String,System.Version)">
      <summary>创建 AssemblyFoldersExInfo 类的新实例。</summary>
      <param name="hive">若要使用的注册表配置单元。</param>
      <param name="view">要使用的注册表视图。</param>
      <param name="registryKey">该组件的注册表项。</param>
      <param name="directoryPath">注册表项的默认文件夹路径。</param>
      <param name="targetFrameworkVersion">注册表项的目标框架版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>单个输入的源文件的构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">用于。 tlog 文件来解释</param>
      <param name="sourceFile">要解释的依赖关系的主要来源文件</param>
      <param name="excludedInputPaths">包含要在最新的检查过程中忽略的文件的路径集的</param>
      <param name="outputs">通过编译此源生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告 ︰ 最小重新生成优化需要 100%准确计算的输出结果来指定 ！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记周围 （多对一种情况下） 或为 false，则清除它们 （一对一或一对多的用例），则返回 true</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)">
      <summary>多个输入的源文件的构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">用于。 tlog 文件来解释</param>
      <param name="sourceFiles">主源代码文件，以解释依赖关系</param>
      <param name="excludedInputPaths">包含要在最新的检查过程中忽略的文件的路径集的</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告 ︰ 最小重新生成优化需要 100%准确计算的输出结果来指定 ！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记周围 （多对一种情况下） 或为 false，则清除它们 （一对一或一对多的用例），则返回 true</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>多个输入的源文件的构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">用于。 tlog 文件来解释</param>
      <param name="sourceFiles">主源代码文件，以解释依赖关系</param>
      <param name="excludedInputPaths">包含要在最新的检查过程中忽略的文件的路径集的</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告 ︰ 最小重新生成优化需要 100%准确计算的输出结果来指定 ！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记周围 （多对一种情况下） 或为 false，则清除它们 （一对一或一对多的用例），则返回 true</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>多个输入的源文件的构造函数</summary>
      <param name="tlogFiles">用于。 tlog 文件来解释</param>
      <param name="sourceFiles">主源代码文件，以解释依赖关系</param>
      <param name="excludedInputPaths">包含要在最新的检查过程中忽略的文件的路径集的</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告 ︰ 最小重新生成优化需要 100%准确计算的输出结果来指定 ！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记周围 （多对一种情况下） 或为 false，则清除它们 （一对一或一对多的用例），则返回 true</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>多个输入的源文件的构造函数</summary>
      <param name="tlogFiles">用于。 tlog 文件来解释</param>
      <param name="sourceFiles">主源代码文件，以解释依赖关系</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告 ︰ 最小重新生成优化需要 100%准确计算的输出结果来指定 ！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记周围 （多对一种情况下） 或为 false，则清除它们 （一对一或一对多的用例），则返回 true</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation">
      <summary>此方法计算根据输出文件和输入的完全依赖项关系图的需要进行编译的源。</summary>
      <returns>需要编译的文件的数组</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)">
      <summary>此方法计算根据输出文件和输入，也可以选择搜索的子根的可能包含输入的文件的复合根标记的完全依赖项关系图的需要进行编译的源。</summary>
      <param name="searchForSubRootsInCompositeRootingMarkers">如果为 true，则搜索的子根复合根标记。</param>
      <returns>需要编译的文件的数组</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>测试以查看是否从跟踪依赖项检查中排除指定的文件</summary>
      <param name="fileName">要测试的文件的完整路径</param>
      <returns>排除的文件，则返回 true。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutput">对应 ot （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutputs">对应 ot （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="dependencyToRemove">若要删除依赖关系。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="sources">应该从关系图中删除的源</param>
      <param name="dependencyToRemove">若要删除依赖关系。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)">
      <summary>在与根对应输入依赖项关系图中移除的项。</summary>
      <param name="rootingMarker">要删除的根。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog">
      <summary>此方法将重新编写 tlog 从新的当前输出表将跟踪项。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将重新编写 tlog，从当前依赖项。 源编译的将跟踪新条目。</summary>
      <param name="includeInTLog">用于确定是否应在压缩的 tlog 中包括特定文件的委托。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
      <param name="constructOutputsFromTLogs">如果为 true，则构造 tlog 文件从输出。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造函数</summary>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputForSourceRoot(System.String,System.String)">
      <summary>此方法将给定的源密钥计算的输出结果添加到输出关系图</summary>
      <param name="sourceKey">要添加的输出结果的源</param>
      <param name="computedOutput">此源键计算的输出结果。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法将给定的源密钥计算的输出结果添加到输出关系图。</summary>
      <param name="sourceKey">要添加的输出结果的源。</param>
      <param name="computedOutputs">此源键计算的输出结果。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,System.String[])">
      <summary>此方法将给定的源密钥计算的输出结果添加到输出关系图。</summary>
      <param name="sourceKey">要添加的输出结果的源。</param>
      <param name="computedOutputs">此源键计算的输出结果。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForNonCompositeSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法可确定源根 （如所示的根标记内容） 的输出</summary>
      <param name="sources">要查找其输出的源</param>
      <returns>输出的源数组</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法可确定源根 （如所示的根标记内容） 的输出。</summary>
      <param name="sources">要查找其输出的源。</param>
      <returns>源的输出结果的数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>此方法可确定输出源根 （如所示的根标记内容），可以选择搜索复合加油可能包含的子根标记输出文件。</summary>
      <param name="sources">要查找其输出的源。</param>
      <param name="searchForSubRootsInCompositeRootingMarkers">如果为 true，则搜索的子根复合根标记。</param>
      <returns>返回源的输出结果的数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutput">对应于 （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutputs">对应于 （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="dependencyToRemove">若要删除依赖关系。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="sources">应该从关系图中删除的源</param>
      <param name="dependencyToRemove">若要删除依赖关系。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutput">对应于 （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除给定的源和对应的输出的输出关系图项。</summary>
      <param name="source">应该从关系图中删除的源</param>
      <param name="correspondingOutputs">对应 ot （用于相同文件处理） 的源的输出</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveOutputForSourceRoot(System.String,System.String)">
      <summary>从给定的源文件依赖项关系图中删除指定的输出。</summary>
      <param name="sourceRoot">源根。</param>
      <param name="outputPathToRemove">要删除的输出路径</param>
      <returns>已删除的输出路径，则返回 true。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveRootsWithSharedOutputs(Microsoft.Build.Framework.ITaskItem[])">
      <summary>删除任何共享相同的输出从依赖项关系图的根。</summary>
      <param name="sources">使用组窗体中的根标记要删除的源。</param>
      <returns>已删除的根标记数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog">
      <summary>此方法将从当前的输出表中重新编写 tlog。 将跟踪新项。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将从当前的输出表中重新编写 tlog。 将跟踪新项。</summary>
      <param name="includeInTLog">相关性筛选器。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)">
      <summary>默认构造函数</summary>
      <param name="quoteHyphensOnCommandLine">如果为 true，连字符应该用引号括起来。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 对象。</summary>
      <param name="fileItem">要追加到命令行的任务项规范。 如果为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)">
      <summary>在命令行后面附加用参数表示的文件名（如有必要插入引号）。</summary>
      <param name="fileName">要追加的文件名。 如果为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>向命令行中追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 数组中的文件名列表，名称由指定的分隔符分隔。</summary>
      <param name="fileItems">要追加的任务项规范。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">要放置在命令行中任务项规范之间的分隔符。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
      <summary>向命令行中追加指定的 string 数组中的文件名列表，名称由指定的分隔符分隔。</summary>
      <param name="fileNames">要追加的文件名。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">要在命令行中的文件名之间放置的分隔符。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)">
      <summary>在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</summary>
      <param name="fileName">要追加的文件名。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)">
      <summary>必要时在缓冲区的第一个用引号引起来的文本后面追加给定文本。</summary>
      <param name="buffer">要追加到的缓冲区。</param>
      <param name="unquotedTextToAppend">要用引号引起来的文本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty">
      <summary>将空间添加到指定字符串，前提是该字符串为非空。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)">
      <summary>在命令行的后面追加指定的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加一个采用作为单个字符串参数的任务项规范的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将在必要时添加引号。 如果此值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>在命令行的后面追加一个开关，该开关采用充当字符串参数的任务项规范数组。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行的开关参数数组。 将在必要时添加引号。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 此值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
      <summary>在命令行的后面追加一个采用单个字符串参数的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将在必要时添加引号。 如果此值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
      <summary>在命令行的后面追加一个采用字符串参数数组的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行的开关参数数组。 将在必要时添加引号。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 此值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加一个开关（该开关采用充当单个字符串参数的任务项规范），但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将不会添加引号。 如果此值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>在命令行的后面追加一个采用作为单个字符串参数的任务项规范的开关，但不尝试在其两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行的开关参数数组。 将不会添加引号。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 此值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)">
      <summary>在命令行的后面追加采用单字符串参数的开关，但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将不会添加引号。 如果此值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)">
      <summary>在命令行的后面追加一个采用字符串参数数组的开关，但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行的开关参数数组。 将不会添加引号。 如果数组为 null，则此方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 此值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)">
      <summary>在命令行中追加字符串，而不尝试将字符串封装在引号中。</summary>
      <param name="textToAppend">要追加到命令行中的字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)">
      <summary>在命令行后追加字符串，并在必要时用引号将字符串引起来。</summary>
      <param name="textToAppend">要追加到命令行中的字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)">
      <summary>确定指定的字符串参数是否应用引号括起来，因为它包含空格。</summary>
      <param name="parameter">要检查是否存在需要使用引号的字符的字符串。</param>
      <returns>如果应使用引号将开关参数括起来，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString">
      <summary>以字符串形式返回命令行。</summary>
      <returns>表示命令行的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)">
      <summary>如果命令行参数包含双引号 (") 字符，则返回错误。 因为在命令行参数中双引号是非法字符，此方法可帮助防止参数注入攻击。</summary>
      <param name="switchName">表示错误消息的开关名称的字符串。</param>
      <param name="parameter">一个字符串，表示用于扫描双引号的开关参数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])">
      <summary>给定的一套 ITaskItem 窗体中的源文件，创建一个包含对应于这些源的根标记的临时响应文件。</summary>
      <param name="sources">组源文件。</param>
      <returns>响应文件的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)">
      <summary>给定一个根标记，使用它在该根标记中创建临时响应文件。</summary>
      <param name="rootMarker">要放入响应文件中的根标记。</param>
      <returns>响应文件的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EndTrackingContext">
      <summary>停止跟踪文件访问。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath">
      <summary>将前面添加到 PATH 环境变量的相应 FileTracker 程序集的路径。 用于进程内跟踪。</summary>
      <returns>PATH 环境变量的旧值。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(System.String)">
      <summary>将前面添加到 PATH 环境变量的相应 FileTracker 程序集的路径。 对于进程内跟踪，或者在.NET Framework 可能不是在路径上使用。</summary>
      <param name="rootPath">FileTracker.dll 根路径。 如果指定，将覆盖 toolType。</param>
      <returns>路径的旧值</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)">
      <summary>测试以指定的文件是否从跟踪依赖项中排除</summary>
      <param name="fileName">要测试的文件的完整路径</param>
      <returns>如果该文件被排除，则返回 true。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)">
      <summary>测试以查看指定的文件是否在指定路径下</summary>
      <param name="fileName">要测试的文件的完整路径</param>
      <param name="path">可能包含该文件的路径。</param>
      <returns>如果该文件的路径下，则返回 true。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath">
      <summary>搜索 Tracker.exe，位置 %PATH%并返回与匹配的第一个路径。如果找不到匹配的路径，匹配 Tracker.exe 或者为 null 的完整路径。</summary>
      <returns>返回 Tracker.exe 的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)">
      <summary>确定是否我们必须跟踪 proc 扩展或进程内跟踪是否将起作用。</summary>
      <param name="toolType">所跟踪的工具可执行文件类型</param>
      <returns>如果我们需要跟踪进程外，false，如果进程内跟踪是确定，则返回 true</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>确定是否我们必须跟踪 proc 扩展或进程内跟踪是否将起作用。</summary>
      <param name="toolType">所跟踪的工具可执行文件类型</param>
      <param name="dllName">所跟踪的工具。</param>
      <param name="cancelEventName">取消事件跟踪程序的名称，则为 null，如果没有则省略应侦听</param>
      <returns>如果我们需要跟踪进程外，false，如果进程内跟踪是确定，则返回 true</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)">
      <summary>构造的主要来源 ITaskItem 数组中的根标记字符串。</summary>
      <param name="source">主要源。</param>
      <returns>返回的标记字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>构造的主要来源 ITaskItem 数组中的根标记字符串。</summary>
      <param name="source">主要源。</param>
      <param name="output">输出文件。</param>
      <returns>返回的标记字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造的主要来源 ITaskItem 数组中的根标记字符串。</summary>
      <param name="sources">主要来源 ITaskItem 数组。</param>
      <returns>返回的标记字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造的主要来源 ITaskItem 数组中的根标记字符串。</summary>
      <param name="sources">主要来源 ITaskItem 数组。</param>
      <param name="outputs">输出文件。</param>
      <returns>返回的标记字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>给出 ExecutableType 正在包装的工具和信息我们知道我们当前的位数，计算出，并返回正确的 FileTracker.dll 的路径。</summary>
      <param name="toolType">该工具正在包装的 ExecutableType。</param>
      <returns>返回该工具的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>给出 ExecutableType 正在包装的工具和信息我们知道我们当前的位数，计算出，并返回正确的 FileTracker.dll 的路径。</summary>
      <param name="toolType">ToolType。</param>
      <param name="rootPath">FileTracker.dll 根路径。 如果指定，将覆盖 toolType。</param>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>给出 ExecutableType 正在包装的工具和信息我们知道我们当前的位数，计算出，并返回正确的 Tracker.exe 的路径。</summary>
      <param name="toolType">该工具正在包装的 ExecutableType。</param>
      <returns>返回跟踪器的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>给出 ExecutableType 正在包装的工具和信息我们知道我们当前的位数，计算出，并返回正确的 Tracker.exe 的路径。</summary>
      <param name="toolType">ToolType。</param>
      <param name="rootPath">Tracker.exe 根路径。 如果指定，将覆盖 toolType。</param>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ResumeTracking">
      <summary>恢复跟踪文件将访问当前跟踪上下文中。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)">
      <summary>设置全局线程计数，并将该计数分配给当前线程。</summary>
      <param name="threadCount">线程计数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)">
      <summary>启动进程;该命令的跟踪。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">可执行文件的类型的包装的工具是</param>
      <returns>返回的进程实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>启动进程;该命令的跟踪。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">此命令的参数</param>
      <param name="toolType">可执行文件的类型的包装的工具是</param>
      <param name="rootFiles">根标记</param>
      <returns>返回的进程实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>启动进程;该命令的跟踪。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">可执行文件的类型的包装的工具是</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <returns>返回的进程实例</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)">
      <summary>启动进程;该命令的跟踪。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">可执行文件的类型的包装的工具是</param>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <returns>进程实例</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)">
      <summary>启动进程;该命令的跟踪。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">可执行文件的类型的包装的工具是</param>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果跟踪器应侦听取消的特定事件，将其名称传递此处</param>
      <returns>进程实例</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)">
      <summary>开始跟踪文件访问。</summary>
      <param name="intermediateDirectory">要写入跟踪 directory 日志文件</param>
      <param name="taskName">调用此函数，用于确定跟踪的名称的任务名称日志文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)">
      <summary>启动跟踪文件访问、 使用提供的响应文件中的根标记。 若要自动生成响应文件指定一个根标记，调用 FileTracker.CreateRootingMarkerResponseFile。</summary>
      <param name="intermediateDirectory">要写入跟踪 directory 日志文件</param>
      <param name="taskName">调用此函数，用于确定跟踪的名称的任务名称日志文件</param>
      <param name="rootMarkerResponseFile">响应文件中的根标记。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup">
      <summary>停止跟踪文件访问，并删除当前跟踪上下文。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SuspendTracking">
      <summary>暂时挂起当前跟踪上下文中的文件访问的跟踪。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)">
      <summary>此方法构造正确的 Tracker.exe 参数从其参数。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <returns>作为字符串参数</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>此方法构造正确的 Tracker.exe 参数从其参数。</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果取消事件已创建该跟踪器应侦听，其名称在此处传递</param>
      <returns>作为字符串参数</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)">
      <summary>此方法构造其参数的正确 Tracker.exe 命令参数</summary>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <returns>作为字符串参数</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)">
      <summary>此方法构造了正确的 Tracker.exe 响应文件参数从其参数。</summary>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <returns>作为字符串参数</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)">
      <summary>此方法构造了正确的 Tracker.exe 响应文件参数从其参数。</summary>
      <param name="dllName">将执行跟踪 dll 的名称</param>
      <param name="intermediateDirectory">将写入跟踪日志的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果取消事件已创建该跟踪器应侦听，其名称在此处传递</param>
      <returns>作为字符串参数</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)">
      <summary>写入跟踪日志中的所有上下文和线程。</summary>
      <param name="intermediateDirectory">要写入跟踪 directory 日志文件</param>
      <param name="taskName">调用此函数，用于确定跟踪的名称的任务名称日志文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)">
      <summary>编写跟踪日志对应于当前的跟踪上下文。</summary>
      <param name="intermediateDirectory">要写入跟踪 directory 日志文件</param>
      <param name="taskName">调用此函数，用于确定跟踪的名称的任务名称日志文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 tlog 文件</param>
      <param name="skipMissingFiles">忽略磁盘不存在的文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="ownerTask">使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 tlog 文件</param>
      <param name="missingFileTimeUtc">缺少的文件都应记录时的日期时间。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
      <param name="tlogFilesToIgnore">若要忽略 Tlog。</param>
      <param name="missingFileTimeUtc">缺少的文件都应记录时的日期时间。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的.tlog 文件</param>
      <param name="tlogFilesToIgnore">若要忽略.tlog 文件</param>
      <param name="missingFileTimeUtc">日期和应记录丢失的文件的时间。</param>
      <param name="excludedInputPaths">包含要被忽略的文件包括所有的子目录的路径集。</param>
      <param name="sharedLastWriteTimeUtcCache">将缓存使用它可以在之间共享多个 FlatTrackingData 实例。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
      <param name="skipMissingFiles">忽略磁盘不存在的文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="tlogFiles">.Write。 tlog 文件来解释</param>
      <param name="missingFileTimeUtc">缺少的文件都应记录时的日期时间。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>返回 true 如果从跟踪依赖项检查中排除指定的文件。</summary>
      <param name="fileName">要测试的文件的名称。</param>
      <returns>true 如果该文件被排除。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>压缩和完成 Tlog 基于跟踪的执行成功。</summary>
      <param name="trackedOperationsSucceeded">True 表示跟踪的操作已成功。</param>
      <param name="readTLogNames">要读取的 Tlog。</param>
      <param name="writeTLogNames">要写入的 Tlog。</param>
      <param name="trackedFilesToRemoveFromTLogs">要从 Tlog 中删除的跟踪的文件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)">
      <summary>返回缓存的文件的上次编写时间的值。 将更新该文件已签缓存第一个时间。</summary>
      <param name="file">文件的名称</param>
      <returns>上次写入的文件的时间。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>检查以确定跟踪数据是否指示一切都已根据 UpToDateCheckType 最新。</summary>
      <param name="hostTask">宿主任务。</param>
      <param name="upToDateCheckType">UpToDateCheckType</param>
      <param name="readTLogNames">读取 tlog 的数组</param>
      <param name="writeTLogNames">写入 tlog 的数组</param>
      <returns>如果所有内容都是最新。 则返回 truefalse 否则为。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)">
      <summary>简单地检查根据跟踪数据和 UpToDateCheckType 的最新状态。</summary>
      <param name="Log">从主机任务 TaskLoggingHelper</param>
      <param name="upToDateCheckType">若要使用的 UpToDateCheckType</param>
      <param name="inputs">FlatTrackingData 结构，它包含输入</param>
      <param name="outputs">包含输出 FlatTrackingData 结构</param>
      <returns>如果所有内容都是最新。 则返回 truefalse 否则为。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog">
      <summary>此方法将从输出表中重新编写 tlog。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将从当前表重新编写 tlog</summary>
      <param name="includeInTLog">相关性筛选器。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails">
      <summary>更新项的依赖关系表的详细信息的当前状态</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.Logger" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> 对象并采用默认格式的错误消息。</summary>
      <param name="args">错误事件的参数。</param>
      <returns>一个 <see cref="T:System.String" />，表示采用规范格式的错误消息。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> 对象并采用默认格式的警告消息。</summary>
      <param name="args">警告事件的参数。</param>
      <returns>一个 <see cref="T:System.String" />，表示采用规范格式的警告消息。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>在派生类中重写时，订阅特定事件的记录器。</summary>
      <param name="eventSource">记录器可订阅的可用事件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>确定当前的 <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> 设置是否至少是传入的值。</summary>
      <param name="checkVerbosity">传入的记录器详细级别设置。</param>
      <returns>如果当前的记录器详细级别设置至少是传入的值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Shutdown">
      <summary>当在派生类中重写时，释放在初始化时和生成期间分配给记录器的资源。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.#ctor">
      <summary>创建多路复用记录器的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>初始化 MuxLogger 实例与指定的事件源。</summary>
      <param name="eventSource">事件源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>初始化 MuxLogger 实例与指定的事件源和指定的最大节点数。</summary>
      <param name="eventSource">事件源。</param>
      <param name="maxNodeCount">最大节点数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)">
      <summary>在注册一个记录器 MuxLogger ，并且在生成开始事件已记录引发生成开始事件。</summary>
      <param name="submissionId">要注册的记录器提交 ID。</param>
      <param name="logger">要注册的记录器。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Shutdown">
      <summary>关闭 MuxLogger 并清除出任何状态。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)">
      <summary>从 MuxLogger 中移除指定的记录器。</summary>
      <param name="submissionId">要删除的记录程序提交 ID。</param>
      <returns>返回 true 如果该方法是在删除记录器方面取得成功，否则，返回 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.#ctor(System.String,System.Version,System.String)">
      <summary>创建目标平台 SDK 类的新实例。</summary>
      <param name="targetPlatformIdentifier">目标平台的标识符。</param>
      <param name="targetPlatformVersion">目标平台的版本。</param>
      <param name="path">指向目标平台 SDK 的路径。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.Equals(Microsoft.Build.Utilities.TargetPlatformSDK)">
      <summary>确保目标平台 Sdk 之间相等。</summary>
      <param name="other">目标平台 SDK 可与此元素进行比较。</param>
      <returns>返回 true 如果项都相等，否则，返回 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.Equals(System.Object)">
      <summary>确保目标平台 SDK 和对象之间相等。</summary>
      <param name="obj">要与此元素进行比较的对象。</param>
      <returns>返回 true 如果项都相等，否则，返回 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.GetHashCode">
      <summary>获取目标平台 SDK 哈希代码。</summary>
      <returns>返回哈希代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.Task" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager)">
      <summary>使用指定的 <see cref="T:Microsoft.Build.Utilities.Task" /> 初始化 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 类的新实例。</summary>
      <param name="taskResources">任务资源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>使用指定的 <see cref="T:Microsoft.Build.Utilities.Task" /> 和 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 初始化 <see cref="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix" /> 类的新实例。</summary>
      <param name="taskResources">任务资源。</param>
      <param name="helpKeywordPrefix">要追加到字符串资源以创建帮助关键字的前缀。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.Execute">
      <summary>在派生类中重写时，执行任务。</summary>
      <returns>如果已成功执行任务，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(Microsoft.Build.Framework.ITaskItem)">
      <summary>使用指定的源 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 初始化 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 类的新实例。</summary>
      <param name="sourceItem">要复制的项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String)">
      <summary>使用指定项规范的字符串初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
      <param name="itemSpec">项规范。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String,System.Collections.IDictionary)">
      <summary>使用指定项规范的字符串及其元数据初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
      <param name="itemSpec">项规范。</param>
      <param name="itemMetadata">项规范的自定义元数据。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata">
      <summary>克隆项规范的自定义元数据的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.IDictionary" />，表示自定义元数据的克隆。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>将项规范的元数据复制到指定的目标任务项。</summary>
      <param name="destinationItem">此方法要将元数据复制到的项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.GetMetadata(System.String)">
      <summary>检索项的指定元数据。</summary>
      <param name="metadataName">要检索的元数据的名称。</param>
      <returns>一个 <see cref="T:System.String" />，表示元数据的值。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.InitializeLifetimeService">
      <summary>在派生类中重写时，给予任务项无限的租约时间。</summary>
      <returns>null 可指定无限生存期。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 对此对象返回的元数据克隆的实现。 返回的值采用其原始的转义形式。</summary>
      <returns>返回克隆的元数据，并保留值的转义。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 允许此项要查询的元数据值的实现。</summary>
      <param name="metadataName">要查询的元数据</param>
      <returns>返回转义元数据值。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 这样一种在项上设置自定义元数据的实现。 假定传入的值未转义，并根据需要将值进行转义以维护其值。</summary>
      <param name="metadataName">元数据名称。</param>
      <param name="metadataValue">元数据的值。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.op_Explicit(Microsoft.Build.Utilities.TaskItem)~System.String">
      <summary>允许从 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 显式类型转换为 <see cref="T:System.String" />，并返回该项的 <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" />。</summary>
      <param name="taskItemToCast">要操作的项。</param>
      <returns>项的 <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.RemoveMetadata(System.String)">
      <summary>移除项的指定元数据。</summary>
      <param name="metadataName">要移除的元数据的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.SetMetadata(System.String,System.String)">
      <summary>设置或修改项的指定元数据的值。</summary>
      <param name="metadataName">要设置或修改的元数据的名称。</param>
      <param name="metadataValue">元数据的新值。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.ToString">
      <summary>获取项规范。</summary>
      <returns>表示项规范的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.IBuildEngine,System.String)">
      <summary>公共构造函数可由任务工厂以帮助他们日志记录消息。</summary>
      <param name="buildEngine">生成引擎。</param>
      <param name="taskName">任务名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> 类的一个新实例，并将它与指定的任务实例关联。</summary>
      <param name="taskInstance">包含此任务实例的任务。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)">
      <summary>从给定的完整消息字符串中提取消息代码前缀。</summary>
      <param name="message">要分析的完整消息，包括代码前缀。</param>
      <param name="messageWithoutCodePrefix">已删除消息（包括代码前缀）。</param>
      <returns>从完整的消息字符串中提取的消息代码前缀，或如果没有消息代码，则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])">
      <summary>加载指定的资源字符串，并可以使用给定参数对其进行格式设置。</summary>
      <param name="resourceName">要加载的字符串资源的名称。</param>
      <param name="args">用于格式化已加载字符串的可选参数。</param>
      <returns>格式化的字符串。</returns>
      <exception cref="T:System.ArgumentException">不存在 <paramref name="resourceName" /> 指示的字符串资源。</exception>
      <exception cref="T:System.InvalidOperationException">未设置所有者任务的 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 属性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])">
      <summary>使用给定参数设置给定字符串的格式。</summary>
      <param name="unformatted">要进行格式设置的字符串。</param>
      <param name="args">用于设置格式的参数。</param>
      <returns>格式化的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unformatted" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(System.String)">
      <summary>获取从资源任务库中的消息。</summary>
      <param name="resourceName">资源的名称。</param>
      <returns>从任务库中的资源返回的消息。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.InitializeLifetimeService">
      <summary>InitializeLifetimeService 称为激活远程对象时。 此方法将确定该对象的生存期会多长时间。 线程安全。 但是，InitializeLifetimeService 和 MarkAsInactive 只应调用该顺序一起或根本不，不能超过一次。</summary>
      <returns>要控制此对象的生存期的租约对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)">
      <summary>使用指定的重要性级别来记录基础工具、可执行文件或 shell 命令的命令行。</summary>
      <param name="importance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <param name="commandLine">命令行字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)">
      <summary>记录任务的基础工具、可执行文件或 shell 命令的命令行。</summary>
      <param name="commandLine">命令行字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>记录关键消息使用指定的字符串和其他邮件详细信息。 线程安全。</summary>
      <param name="subcategory">警告类型 （可以为 null） 的说明。</param>
      <param name="code">消息 （可以为 null） 代码。</param>
      <param name="helpKeyword">宿主 IDE （可以为 null） 的帮助关键字。</param>
      <param name="file">导致出现的消息 （可以为 null） 文件的路径。</param>
      <param name="lineNumber">导致消息 （如果不可用，则设置为零） 的文件中的行。</param>
      <param name="columnNumber">导致消息 （如果不可用，则设置为零） 的文件中的列。</param>
      <param name="endLineNumber">导致出现消息 （如果不可用，则设置为零） 文件中的行的范围的最后一行。</param>
      <param name="endColumnNumber">导致出现消息 （如果不可用，则设置为零） 文件中的列的范围的最后一列。</param>
      <param name="message">消息字符串中。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">时，引发 message 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])">
      <summary>记录指定消息的错误。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定消息和其他错误详细信息记录错误。</summary>
      <param name="subcategory">错误类型的描述。</param>
      <param name="errorCode">错误代码。</param>
      <param name="helpKeyword">与错误关联的 Help 关键字。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的行。</param>
      <param name="columnNumber">文件中出错的列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)">
      <summary>使用来自给定异常的消息记录错误。</summary>
      <param name="exception">要记录的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)">
      <summary>使用给定异常中的消息和堆栈跟踪（可选）来记录错误。</summary>
      <param name="exception">要记录的异常</param>
      <param name="showStackTrace">若要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean,System.Boolean,System.String)">
      <summary>使用给定异常和任何内部异常中的消息和堆栈跟踪（可选）来记录错误。</summary>
      <param name="exception">要记录的异常。</param>
      <param name="showStackTrace">若要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <param name="showDetail">若要记录异常类型和任何内部异常，则为 true；否则为 false。</param>
      <param name="file">与异常相关的文件的名称，如果应记录项目文件，则为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录错误。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他错误详细信息记录错误。</summary>
      <param name="subcategoryResourceName">描述错误类型的字符串资源的名称。</param>
      <param name="errorCode">错误代码。</param>
      <param name="helpKeyword">与错误关联的 Help 关键字。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的行。</param>
      <param name="columnNumber">文件中出错的列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录具有错误代码的错误。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他错误详细信息记录错误。</summary>
      <param name="subcategoryResourceName">描述错误类型的字符串资源的名称。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的行。</param>
      <param name="columnNumber">文件中出错的列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)">
      <summary>帮助记录自定义 <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> 生成事件。</summary>
      <param name="message">文本消息。</param>
      <param name="helpKeyword">帮助关键字。</param>
      <param name="projectFile">项目名称。</param>
      <param name="succeeded">如果指示已成功生成项目，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)">
      <summary>帮助记录自定义 <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> 生成事件。</summary>
      <param name="message">文本消息。</param>
      <param name="helpKeyword">帮助关键字。</param>
      <param name="projectFile">项目名称。</param>
      <param name="targetNames">要生成的目标。 一个空字符串，用于指示默认目标。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>使用指定字符串和重要性记录消息。</summary>
      <param name="importance">指定消息重要性的枚举值之一。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])">
      <summary>使用指定的字符串记录消息。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>记录一条消息，使用指定的字符串和其他邮件详细信息。 线程安全。</summary>
      <param name="subcategory">警告类型 （可以为 null） 的说明。</param>
      <param name="code">消息代码 （可以为 null）</param>
      <param name="helpKeyword">宿主 IDE （可以为 null） 的帮助关键字。</param>
      <param name="file">导致出现的消息 （可以为 null） 文件的路径。</param>
      <param name="lineNumber">导致消息 （如果不可用，则设置为零） 的文件中的行。</param>
      <param name="columnNumber">导致消息 （如果不可用，则设置为零） 的文件中的列。</param>
      <param name="endLineNumber">导致出现消息 （如果不可用，则设置为零） 文件中的行的范围的最后一行。</param>
      <param name="endColumnNumber">导致出现消息 （如果不可用，则设置为零） 文件中的列的范围的最后一列。</param>
      <param name="importance">邮件的重要性。</param>
      <param name="message">消息字符串中。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">时，引发 message 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>使用指定的资源字符串和重要性记录消息。</summary>
      <param name="importance">指定消息重要性的枚举值之一。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录消息。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>记录来自给定文本行的错误消息或警告。</summary>
      <param name="lineOfText">提供记录信息的文本行。</param>
      <param name="messageImportance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <returns>如果已记录错误，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineOfText" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)">
      <summary>为给定文件中的每一行文本记录错误、警告和消息。</summary>
      <param name="fileName">要从中记录消息的文件的名称。</param>
      <returns>如果指示至少记录了一个错误，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>为给定文件中的每一行文本记录错误、警告和消息。 同时记录消息的重要性。</summary>
      <param name="fileName">要从中记录消息的文件的名称。</param>
      <param name="messageImportance">指定所记录消息的重要性的枚举值之一。</param>
      <returns>如果指示至少记录了一个错误，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">当 filename 为 null 时引发。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)">
      <summary>记录来自给定流的错误消息或警告。</summary>
      <param name="stream">读取从中进行记录的流的 <see cref="T:System.IO.TextReader" />。</param>
      <param name="messageImportance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <returns>如果已记录错误，则为 true；否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])">
      <summary>使用指定的消息记录警告。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的消息和其他警告详细信息记录一个警告。</summary>
      <param name="subcategory">对警告类型的描述。</param>
      <param name="warningCode">警告代码。</param>
      <param name="helpKeyword">与警告关联的 Help 关键字。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中出现警告的行。</param>
      <param name="columnNumber">文件中出现警告的列。</param>
      <param name="endLineNumber">文件中出现警告的结束行。</param>
      <param name="endColumnNumber">文件中出现警告的结束列。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于格式化消息字符串的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)">
      <summary>使用来自指定异常的消息记录警告。</summary>
      <param name="exception">要记录的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)">
      <summary>使用来自给定异常的消息和堆栈跟踪（可选）记录警告。</summary>
      <param name="exception">要记录的异常</param>
      <param name="showStackTrace">若要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录警告。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他警告详细信息记录警告。</summary>
      <param name="subcategoryResourceName">用于描述警告类型的字符串资源的名称。</param>
      <param name="warningCode">警告代码。</param>
      <param name="helpKeyword">与警告关联的 Help 关键字。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中出现警告的行。</param>
      <param name="columnNumber">文件中出现警告的列。</param>
      <param name="endLineNumber">文件中出现警告的结束行。</param>
      <param name="endColumnNumber">文件中出现警告的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录具有警告代码的警告。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他警告详细信息记录具有警告代码的警告。</summary>
      <param name="subcategoryResourceName">用于描述警告类型的字符串资源的名称。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中出现警告的行。</param>
      <param name="columnNumber">文件中出现警告的列。</param>
      <param name="endLineNumber">文件中出现警告的结束行。</param>
      <param name="endColumnNumber">文件中出现警告的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于格式化已加载字符串的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.MarkAsInactive">
      <summary>这将通知 TaskLoggingHelper ，不再需要它。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.ClearSDKStaticCache">
      <summary>清除 appDomain 宽缓存的平台和扩展 Sdk。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersExInfo(System.String,System.String,System.String,System.String,System.String,System.Reflection.ProcessorArchitecture)">
      <summary>获取已排序的列表 <see cref="T:Microsoft.Build.Utilities.AssemblyFoldersExInfo" /> 对象，其中包含有关在其中注册的第三方程序集的目录信息。 在生成和设计时使用此信息。</summary>
      <param name="registryRoot">目标框架根注册表位置。 对于.NET 中，这是 SOFTWARE\MICROSOFT\。NETFramework。</param>
      <param name="targetFrameworkVersion">目标的框架版本 （2.0、 3.0、 3.5、 4.0、...）。</param>
      <param name="registryKeySuffix">PocketPC\AssemblyFoldersEx，或其他人，也可能是文件夹 (AssemblyFoldersEx) 的名称。</param>
      <param name="osVersion">目标最小值和最大 OS 的版本在注册表中。 这些值用于最小值和最大返回仅用于操作系统版本之间已声明的目录。 如果此值为空或 null，则执行不进行筛选。</param>
      <param name="platform">目标的平台的 Guid。 用于返回具有匹配的平台 GUID 的目录。 如果此值为空或 null 都会执行任何筛选。</param>
      <param name="targetProcessorArchitecture">目标的处理器体系结构。 这可确定哪个注册表配置单元中搜索以及按什么顺序。</param>
      <returns>返回列表 AssemblyFoldersExInfo。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDisplayNameForTargetFrameworkDirectory(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>创建指定的目标框架详细信息的显示名称。</summary>
      <param name="targetFrameworkDirectory">目标 framework 目录。</param>
      <param name="frameworkName">框架名称。</param>
      <returns>返回指定的目标框架详细信息的显示名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 根注册表项的全名。</summary>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>包含 .NET Framework 根注册表项的全名的字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取包含 .NET Framework SDK 安装路径的 <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> 下的值的名称。</summary>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>返回包含 .NET Framework SDK 安装路径的 <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> 下的注册表项值名称的字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>安装根路径包含的 SDK 的 GetDotNetFrameworkRootRegistryKey 的值的名称</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">与相关联的 Visual Studio 请求的 SDK 版本</param>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>返回 .NET Framework SDK 根注册表项的全名。</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <returns>返回注册表项根的字符串表示形式，用于指示 .NET Framework SDK 的查找位置。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回.NET Framework SDK 根注册表项的完整名称</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">与相关联的 Visual Studio 请求的 SDK 版本</param>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 文件夹的前缀。</summary>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>返回 .NET Framework 文件夹的前缀。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 根目录的完全限定路径。</summary>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>一个字符串，其中包含 .NET Framework 根目录的完全限定路径；如果未安装目标 .NET Framework 版本，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取到框架的根目录的完全限定的路径。</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所需的体系结构或此进程当前正在运行下的体系结构的 DotNetFrameworkArchitecture.Current。</param>
      <returns>返回到框架的根目录的完全限定的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取文件在 .NET Framework 目录中的完全限定路径。</summary>
      <param name="fileName">要在 .NET Framework 目录中查找的文件。</param>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>一个字符串，其中包含指定文件的完全限定路径；如果未安装 .NET Framework 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取指定的体系结构框架根目录中的文件的完全限定的路径。</summary>
      <param name="fileName">要在.NET Framework 目录中找到的文件名称</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所需的体系结构或此进程当前正在运行下的体系结构的 DotNetFrameworkArchitecture.Current。</param>
      <returns>返回到框架根目录中的文件的完全限定的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>返回给定的 framework 版本的引用程序集位置的路径。</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <returns>返回包含 Reference Assemblies 文件夹的完全限定路径的字符串；如果未安装目标版本的 .NET Framework，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取指向 .NET Framework SDK 的 /bin 目录的完全限定路径。</summary>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>一个字符串，包含指向 .NET Framework SDK的 \bin 目录的完全限定路径，或者如果未安装 .NET Framework SDK 的目标版本，则为 null 引用（Visual Basic 中的 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回到.NET Framework SDK 的"bin"目录的路径。</summary>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">与相关联的 Visual Studio 请求的 SDK 版本</param>
      <returns>路径字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取文件在 .NET Framework SDK 中的完全限定路径。</summary>
      <param name="fileName">要在 .NET Framework SDK 中查找的文件。</param>
      <param name="version">要面向的 .NET Framework 版本。</param>
      <returns>一个字符串，包含指向 .NET Framework SDK的 \bin 目录的完全限定路径，或者如果未安装 .NET Framework SDK 的目标版本，则为 null 引用（Visual Basic 中的 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取.NET Framework SDK 中的文件的完全限定的路径。</summary>
      <param name="fileName">要在.NET Framework SDK 目录中找到的文件名称</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所请求的文件所需体系结构。</param>
      <returns>返回到.NET Framework SDK 中的文件的完全限定的路径。 如果找不到.NET Framework SDK，则引发错误。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>获取.NET Framework SDK 中的文件的完全限定的路径。 如果找不到.NET Framework SDK 时出错。</summary>
      <param name="fileName">要在.NET Framework SDK 目录中找到的文件名称</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">请求的 SDK 与相关联的 Visual Studio 的版本。</param>
      <returns>路径字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取.NET Framework SDK 中的文件的完全限定的路径。 如果找不到.NET Framework SDK 时出错。</summary>
      <param name="fileName">要在.NET Framework SDK 目录中找到的文件名称</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">请求的 SDK 与相关联的 Visual Studio 的版本。</param>
      <param name="architecture">所请求的文件所需体系结构。</param>
      <returns>路径字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName)">
      <summary>获取给定的目标框架的引用程序集位置的路径。</summary>
      <param name="frameworkName">框架名称。</param>
      <returns>返回引用程序集位置的路径。</returns>
      <exception cref="T:System.ArgumentNullException">当 frameworkName 为 null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>获取相对于给定 targetFrameworkRoot 给定的框架版本的引用程序集位置的路径。</summary>
      <param name="targetFrameworkRootPath">它将用于计算引用程序集路径的根目录。 将按以下方式 TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType 生成引用 assembies。</param>
      <param name="frameworkName">FrameworkName 类，该类表示 TargetFrameworkMoniker。 这不能为 null。</param>
      <returns>返回引用程序集位置的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.String,System.String)">
      <summary>返回给定的目标框架的引用程序集位置的路径。 此方法将假定该请求的 ReferenceAssemblyRoot 路径将是由 Environment.SpecialFolder.ProgramFiles 中还包括指定的程序文件目录时。NETFramework 或.NET Framework targetFrameworkIdentifiers 会看到它 targetFrameworkVersion 2.0、 3.0、 3.5 或 4.0，我们将返回针对传统的.NET framework 的正确链接的引用程序集路径。 此链接将使用现有 GetPathToDotNetFrameworkReferenceAssemblies 以生成引用程序集路径的列表。</summary>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <returns>引用程序集位置的集合。</returns>
      <exception cref="T:System.ArgumentNullException">当 frameworkName 为 null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(System.String,System.String,System.String)">
      <summary>返回给定的目标框架的标准库 (即为 mscorlib) 的引用程序集位置的路径。 此方法将假定该请求的 ReferenceAssemblyRoot 路径将是由 Environment.SpecialFolder.ProgramFiles 中还包括指定的程序文件目录时。NETFramework 或.NET Framework targetFrameworkIdentifiers 会看到它 targetFrameworkVersion 2.0、 3.0、 3.5 或 4.0，我们将返回针对传统的.NET framework 的正确链接的引用程序集路径。 此链接将使用现有 GetPathToDotNetFrameworkReferenceAssemblies 以生成引用程序集路径的列表。</summary>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <returns>引用程序集位置的集合。</returns>
      <exception cref="T:System.ArgumentNullException">当 frameworkName 为 null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(System.String,System.String,System.String,System.String)">
      <summary>Mscorlib 和 system.dll 中返回的路径</summary>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <param name="platformTarget">这用于确定应在其中我们查找标准库。 请注意，此参数仅用于.NET Framework 3.5 或更少。</param>
      <returns>引用程序集位置的集合。</returns>
      <exception cref="T:System.ArgumentNullException">当 frameworkName 为 null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(System.String)">
      <summary>获取文件在系统目录中的完全限定路径。</summary>
      <param name="fileName">要在系统文件夹中查找的文件。</param>
      <returns>一个字符串，包含系统目录中的文件的完全限定路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回适用于所需的.NET Framework 和 Visual Studio 版本的 Windows SDK 的路径。 请注意，这仅对支持的目标.NET Framework 版本 4.5 和更高版本。</summary>
      <param name="version">目标.NET Framework 版本</param>
      <param name="visualStudioVersion">Visual Studio 与 SDK 相关联的版本。</param>
      <returns>到适当的 Windows SDK 位置的路径</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回所需的.NET Framework 和 Visual Studio 版本 Windows SDK 中的文件的路径。 请注意，这仅对支持的目标.NET Framework 版本 4.5 和更高版本。</summary>
      <param name="fileName">被请求的文件的名称。</param>
      <param name="version">目标.NET Framework 版本。</param>
      <param name="visualStudioVersion">Visual Studio 与 SDK 相关联的版本。</param>
      <returns>适当的 Windows SDK 文件路径</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>返回所需的.NET Framework 和 Visual Studio 版本和所需的体系结构在 Windows SDK 中的文件的路径。 请注意，这仅对支持的目标.NET Framework 版本 4.5 和更高版本。</summary>
      <param name="fileName">被请求的文件的名称。</param>
      <param name="version">目标.NET Framework 版本。</param>
      <param name="visualStudioVersion">请求的 SDK 与相关联的 Visual Studio 的版本。</param>
      <param name="architecture">所需的体系结构产生的文件。</param>
      <returns>适当的 Windows SDK 文件路径</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.String)">
      <summary>如果它存在到 SDK 根客户提供 SDK 名字对象和目标的平台获取路径。</summary>
      <param name="sdkMoniker">Sdk 的名字对象</param>
      <param name="targetPlatformIdentifier">适用于平台的标识符</param>
      <param name="targetPlatformVersion">版本的平台</param>
      <returns>如果不存在，sdk 将存在于目标的平台或空字符串的 sdk 根目录完整路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.String,System.String,System.String)">
      <summary>给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 位置中搜索默认 sdk 的已传递的 sdk 名称中。 Sdk 名字对象的格式是 SDKName，Version=X.X</summary>
      <param name="sdkMoniker">SDK 以确定的安装位置的名称。</param>
      <param name="targetPlatformIdentifier">若要查找适用于 Sdk 的目标的平台</param>
      <param name="targetPlatformVersion">要找到适用于 Sdk 的目标的平台版本</param>
      <param name="diskRoots">若要搜索的 sdk 中的磁盘根的列表</param>
      <param name="registryRoot">若要查找的 sdk 中的注册表根目录</param>
      <returns>SDK 的位置找到时，如果为空字符串找不到该</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.Version)">
      <summary>给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 位置中搜索默认 sdk 的已传递的 sdk 名称中。 Sdk 名字对象的格式是 SDKName，Version=X.X</summary>
      <param name="sdkMoniker">SDK 以确定的安装位置的名称。</param>
      <param name="targetPlatformIdentifier">若要查找适用于 Sdk 的目标的平台</param>
      <param name="targetPlatformVersion">要找到适用于 Sdk 的目标的平台版本</param>
      <returns>SDK 的位置找到时，如果为空字符串找不到该</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.Version,System.String[],System.String)">
      <summary>给定 SDKName，targetPlatformIdentifier 和 TargetPlatformVersion 位置中搜索默认 sdk 的已传递的 sdk 名称中。 Sdk 名字对象的格式是 SDKName，Version=X.X</summary>
      <param name="sdkMoniker">SDK 以确定的安装位置的名称。</param>
      <param name="targetPlatformIdentifier">若要查找适用于 Sdk 的目标的平台</param>
      <param name="targetPlatformVersion">要找到适用于 Sdk 的目标的平台版本</param>
      <param name="diskRoots">若要搜索的 sdk 中的磁盘根的列表</param>
      <param name="registryRoot">若要查找的 sdk 中的注册表根目录</param>
      <returns>SDK 的位置找到时，如果为空字符串找不到该</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(System.String,System.Version)">
      <summary>获取给定的目标平台的计算机上安装的 SDK 的列表</summary>
      <param name="targetPlatformIdentifier">若要查找适用于 Sdk 的目标的平台</param>
      <param name="targetPlatformVersion">要找到适用于 Sdk 的目标的平台版本</param>
      <returns>已安装的 SDK 和它们的位置的 IDictionary。 K:SDKName V:SDK 安装位置</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(System.String[],System.String,System.String,System.Version)">
      <summary>获取给定的目标平台的计算机上安装的 SDK 的列表</summary>
      <param name="diskRoots">要搜索的 sdk 的磁盘位置的数组</param>
      <param name="registryRoot">根注册表位置中查找 sdk</param>
      <param name="targetPlatformIdentifier">若要查找适用于 Sdk 的目标的平台</param>
      <param name="targetPlatformVersion">要找到适用于 Sdk 的目标的平台版本</param>
      <returns>已安装的 SDK 和它们的位置的 IDictionary。 K:SDKName V:SDK 安装位置</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.String)">
      <summary>给定的目标平台标识符和目标平台版本，搜索为该目标平台的平台 SDK 的默认 SDK 位置。</summary>
      <param name="targetPlatformIdentifier">为其查找 SDK 的目标的平台。</param>
      <param name="targetPlatformVersion">为其查找 SDK 的目标的平台版本。</param>
      <returns>SDK 的位置，如果返回找到此属性，否则，返回一个空字符串如果找不到 SDK。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.String,System.String,System.String)">
      <summary>给定的目标平台标识符和目标平台版本，搜索为该目标平台的平台 SDK 的默认 SDK 位置。</summary>
      <param name="targetPlatformIdentifier">为其查找 SDK 的目标的平台。</param>
      <param name="targetPlatformVersion">为其查找 SDK 的目标的平台版本。</param>
      <param name="diskRoots">在其中搜索 SDK 根磁盘阵列。</param>
      <param name="registryRoot">在其中搜索 SDK 的注册表根目录。</param>
      <returns>SDK 的位置，如果返回找到此属性，否则，返回一个空字符串如果找不到 SDK。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.Version)">
      <summary>给定的目标平台标识符和目标平台版本，搜索为该目标平台的平台 SDK 的默认 SDK 位置。</summary>
      <param name="targetPlatformIdentifier">为其查找 SDK 的目标的平台。</param>
      <param name="targetPlatformVersion">为其查找 SDK 的目标的平台版本。</param>
      <returns>SDK 的位置，如果返回找到此属性，否则，返回一个空字符串如果找不到 SDK。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.Version,System.String[],System.String)">
      <summary>给定的目标平台标识符和目标平台版本，搜索为该目标平台的平台 SDK 的默认 SDK 位置。</summary>
      <param name="targetPlatformIdentifier">为其查找 SDK 的目标的平台。</param>
      <param name="targetPlatformVersion">为其查找 SDK 的目标的平台版本。</param>
      <param name="diskRoots">在其中搜索 SDK 根磁盘阵列。</param>
      <param name="registryRoot">在其中搜索 SDK 的注册表根目录。</param>
      <returns>SDK 的位置，如果返回找到此属性，否则，返回一个空字符串如果找不到 SDK。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetProgramFilesReferenceAssemblyRoot">
      <summary>获取引用程序集目录在 program files 目录下的根位置。</summary>
      <returns>返回引用程序集目录的根位置。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含的设计时文件的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">该 SDK 的根文件夹必须包含的设计时文件夹。</param>
      <returns>返回用于在设计时文件在 SDK 中，必须将用于搜索的顺序搜索中使用的文件夹列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(System.String,System.String,System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含的设计时文件的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">该 SDK 的根文件夹必须包含的设计时文件夹。</param>
      <param name="targetConfiguration">配置 SDK 设定为目标。 这是"Debug"或"零售"。</param>
      <param name="targetArchitecture">SDK 以之为目标体系结构。</param>
      <returns>返回用于在设计时文件在 SDK 中，必须将用于搜索的顺序搜索中使用的文件夹列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含的 redist 文件的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">该 SDK 的根文件夹必须包含的 redist 文件夹。</param>
      <returns>返回用于在 redist 文件在 SDK 中，必须将用于搜索的顺序搜索中使用的文件夹列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(System.String,System.String,System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含的 redist 文件的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">该 SDK 的根文件夹必须包含的 redist 文件夹。</param>
      <param name="targetConfiguration">配置 SDK 设定为目标。 这是"Debug"或"零售"。</param>
      <param name="targetArchitecture">SDK 以之为目标体系结构。</param>
      <returns>返回用于在 redist 文件在 SDK 中，必须将用于搜索的顺序搜索中使用的文件夹列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含所引用的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">SDK 的根文件夹。</param>
      <returns>返回要在搜索中的 SDK，必须将用于搜索的顺序中的引用中使用的文件夹的列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(System.String,System.String,System.String)">
      <summary>获取 SDK 文件夹中指定的 SDK 根处的 sdk 中包含所引用的列表。 该列表位于必须在搜索中使用的引用的顺序。</summary>
      <param name="sdkRoot">SDK 的根文件夹。</param>
      <param name="targetConfiguration">配置 SDK 设定为目标。 这是"Debug"或"零售"。</param>
      <param name="targetArchitecture">SDK 以之为目标体系结构。</param>
      <returns>返回要在搜索中的 SDK，必须将用于搜索的顺序中的引用中使用的文件夹的列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSupportedTargetFrameworks">
      <summary>获取支持的目标框架名字对象的列表。</summary>
      <returns>支持的目标框架名字对象的列表</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks">
      <summary>获取在计算机上的目标平台 Sdk 的列表。</summary>
      <returns>列表中的目标平台 Sdk，Item1: TargetPlatformName Item2 ︰ 版本的 SDK Item3: sdk 根路径</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks(System.String[],System.String)">
      <summary>获取在计算机上的目标平台 Sdk 的列表。</summary>
      <param name="diskRoots">要搜索平台 Sdk 的磁盘位置的列表。</param>
      <param name="registryRoot">要查找的平台 Sdk 的注册表根位置。</param>
      <returns>返回目标平台 Sdk 的列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.HighestVersionOfTargetFrameworkIdentifier(System.String,System.String)">
      <summary>获取基于标识符的目标框架名字对象的最高版本。</summary>
      <param name="targetFrameworkRootDirectory">目标框架的根目录。</param>
      <param name="frameworkIdentifier">框架标识符。</param>
      <returns>返回基于标识符的目标框架名字对象的最高版本。 此方法将仅查找完全框架;将返回没有配置文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)">
      <summary>使用指定的 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 初始化 <see cref="T:System.Resources.ResourceManager" /> 类的新实例。</summary>
      <param name="taskResources">任务资源的 <see cref="T:System.Resources.ResourceManager" />。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>使用指定的 <see cref="T:System.Resources.ResourceManager" /> 和帮助关键字前缀初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 类的新实例。</summary>
      <param name="taskResources">任务资源的 <see cref="T:System.Resources.ResourceManager" />。</param>
      <param name="helpKeywordPrefix">要用于该任务引发的消息的帮助关键字。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute">
      <summary>调用该宿主对象来执行该任务的工作。</summary>
      <returns>如果该方法成功，则为 true；否则，则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Cancel">
      <summary>取消进程执行的任务，通过询问其自动关闭，则在很短的时间之后, 执行强制终止。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)">
      <summary>删除指定的临时文件。</summary>
      <param name="fileName">要删除的临时文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Execute">
      <summary>使用指定任务参数运行可执行文件。</summary>
      <returns>如果任务成功运行，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)">
      <summary>创建一个临时的响应 (.rsp) 文件并运行可执行文件。</summary>
      <param name="pathToTool">可执行文件的路径。</param>
      <param name="responseFileCommands">要放入 .rsp 文件中的命令行参数。</param>
      <param name="commandLineCommands">要直接传递到可执行文件的命令行参数。</param>
      <returns>可执行文件返回的退出代码。 如果该任务记录了错误，但是可执行文件返回的退出代码为 0，则此方法将返回 -1。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands">
      <summary>返回一个字符串值，该值包含要直接传递到可执行文件的命令行参数。</summary>
      <returns>一个字符串值，其中包含要直接传递到可执行文件的命令行参数。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool">
      <summary>返回指向可执行文件的完全限定路径。</summary>
      <returns>指向可执行文件的完全限定路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands">
      <summary>返回一个字符串值，该值包含运行可执行文件之前要添加到响应 (.rsp) 文件的命令行参数。</summary>
      <returns>包含运行可执行文件之前要添加到响应 (.rsp) 文件的命令行参数的字符串值。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)">
      <summary>初始化来生成执行该工具的进程所需的信息。</summary>
      <param name="pathToTool">工具的路径。</param>
      <param name="commandLineCommands">命令行命令。</param>
      <param name="responseFileSwitch">响应文件开关。</param>
      <returns>若要启动该进程所需的信息。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)">
      <summary>返回由可执行文件用于指定响应 (.rsp) 文件的命令行开关。</summary>
      <param name="responseFilePath">临时 .rsp 文件的完整路径。</param>
      <returns>返回可执行文件用来指定响应 (.rsp) 文件的命令行开关。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory">
      <summary>返回要在其中运行可执行文件的目录。</summary>
      <returns>要在其中运行可执行文件的目录，或者，如果要在当前目录中运行可执行文件，则为 null 引用（Visual Basic 中的 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors">
      <summary>处理由可执行文件引发的执行错误。</summary>
      <returns>如果方法成功运行，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject">
      <summary>初始化任务的宿主对象。</summary>
      <returns>宿主对象的 <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>分析单行文本，以标识规范格式方面的任何错误或警告。</summary>
      <param name="singleLine">要进行分析的方法的单行文本。</param>
      <param name="messageImportance">
        <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 的一个值，该值指示用来记录消息的重要性级别。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)">
      <summary>记录所有已注册记录器的工具名称和路径。</summary>
      <param name="toolName">可执行文件名称。</param>
      <param name="pathToTool">可执行文件的路径。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)">
      <summary>将运行的起始点记录到所有已注册的记录器。</summary>
      <param name="message">用于提供记录器（通常为命令行和开关）的描述性消息。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)">
      <summary>要转义的响应文件的内容的可重写方法。</summary>
      <param name="responseString">响应字符串。</param>
      <returns>返回的响应字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution">
      <summary>指示是否应跳过任务执行。</summary>
      <returns>若要跳过任务执行，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters">
      <summary>指示所有任务参数是否均有效。</summary>
      <returns>如果所有任务参数都有效，则为 true，否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TrackedDependencies.ExpandWildcards(Microsoft.Build.Framework.ITaskItem[])">
      <summary>展开项目列表中的通配符。</summary>
      <param name="expand">要展开的项的数组。</param>
      <returns>展开的项目的数组</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine">
      <summary>获取或设置可供任务使用的生成引擎接口。</summary>
      <returns>可用于任务的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过字符串资源名称组成 Help 关键字。</summary>
      <returns>用于组成帮助关键字的 <see cref="T:System.String" />。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject">
      <summary>获取或设置与派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 相关联的宿主对象实例。</summary>
      <returns>与派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 相关联的宿主对象实例 <see cref="T:Microsoft.Build.Framework.ITaskHost" />。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.Log">
      <summary>获取包含任务日志记录方法的任务日志记录帮助程序对象的实例。</summary>
      <returns>包含任务日志记录方法的 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources">
      <summary>获取或设置派生 <see cref="T:Microsoft.Build.Utilities.Task" /> 的区域性特定资源。</summary>
      <returns>表示派生 <see cref="T:Microsoft.Build.Utilities.Task" /> 的区域性特定资源的 <see cref="T:System.Resources.ResourceManager" />。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.DirectoryPath">
      <summary>获取或设置在注册表项默认值中找到的文件夹。</summary>
      <returns>返回对注册表项默认文件夹的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.Hive">
      <summary>获取或设置的注册表配置单元。</summary>
      <returns>返回注册表配置单元。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.Key">
      <summary>获取或设置组件的注册表项。</summary>
      <returns>返回注册表项。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.TargetFrameworkVersion">
      <summary>获取或设置该注册表项的目标框架版本。</summary>
      <returns>返回目标框架版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.View">
      <summary>获取或设置的注册表视图。</summary>
      <returns>返回的注册表视图。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable">
      <summary>获取依赖关系表。</summary>
      <returns>返回的依赖关系表。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.DependencyTable">
      <summary>获取依赖关系表。</summary>
      <returns>返回的依赖关系表。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine">
      <summary>获取表示用于继承类的命令行的 <see cref="T:System.Text.StringBuilder" /> 实例。</summary>
      <returns>用于继承类的 <see cref="T:System.Text.StringBuilder" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.Length">
      <summary>表示命令行的长度。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.DependencyTable">
      <summary>获取依赖关系表。</summary>
      <returns>返回的依赖关系表。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.MissingFiles">
      <summary>获取或设置丢失的 TLog 中检测到的文件</summary>
      <returns>返回将 TLog 中检测到缺少的文件</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileName">
      <summary>获取或设置我们所看到的最新文件的路径。</summary>
      <returns>返回已找到的最新文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime">
      <summary>获取或设置我们所看到的最新文件的时间</summary>
      <returns>返回已找到的最新文件的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc">
      <summary>获取或设置我们所看到的最新文件的 UTC 时间。</summary>
      <returns>返回已找到的最新文件的 UTC 时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName">
      <summary>获取或设置的最新的日志文件的路径。</summary>
      <returns>返回的最新的日志文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime">
      <summary>获取或设置最新的 Tlog 的时间。</summary>
      <returns>返回最新的 Tlog 的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc">
      <summary>获取或设置最新的 Tlog 的 UTC 时间。</summary>
      <returns>返回最新的 Tlog 的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileName">
      <summary>获取或设置已找到旧文件的路径。</summary>
      <returns>返回已找到旧文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime">
      <summary>获取或设置的最旧的文件，我们已经看到的时间。</summary>
      <returns>返回的最旧的文件，我们已经看到的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc">
      <summary>获取或设置最早的文件，我们已经看到的 UTC 时间。</summary>
      <returns>返回最早的文件，我们已经看到的 UTC 时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles">
      <summary>获取或设置指定是否要跳过或记录中 TLog，但它们不再存在的文件的交换机。</summary>
      <returns>返回指定文件中 TLog，但不再存在，是否将跳过或记录的交换机。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogFiles">
      <summary>获取或设置此结构的 TLog 文件。</summary>
      <returns>返回此结构的 TLog 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable">
      <summary>获取或设置一个指定传递给我们的所有 Tlog 都是否可在磁盘上的开关。</summary>
      <returns>返回指定传递给我们的所有 Tlog 都是否可在磁盘上的交换机。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries">
      <summary>获取或设置指定是否将 TLog 中的根标记都视为文件访问的交换机或仅视为标记。</summary>
      <returns>返回参数，用于指定将 TLog 中的根标记被视为文件访问，还是仅视为标记。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Parameters">
      <summary>获取或设置记录器的用户定义参数。</summary>
      <returns>记录器参数。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Verbosity">
      <summary>获取或设置要显示在事件日志中的详细信息的级别。</summary>
      <returns>枚举值之一。 默认值为 <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.MuxLogger.Parameters">
      <summary>获取和设置所需的参数属性 ILogger 接口。</summary>
      <returns>返回参数属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.MuxLogger.Verbosity">
      <summary>获取和设置所需的详细级别属性 ILogger 接口。</summary>
      <returns>返回详细级别属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ProcessorArchitecture.CurrentProcessArchitecture">
      <summary>获取系统的当前处理器体系结构。</summary>
      <returns>包含处理器体系结构值的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.Path">
      <summary>获取或设置目标平台 SDK 的路径。</summary>
      <returns>返回目标平台 SDK 的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformIdentifier">
      <summary>获取或设置目标平台 SDK 标识符。</summary>
      <returns>返回目标平台 SDK 标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformVersion">
      <summary>获取或设置目标平台的版本。</summary>
      <returns>返回目标平台版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine">
      <summary>获取或设置任务所使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> 对象的实例。</summary>
      <returns>可供任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine2">
      <summary>获取任务所使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine2" /> 对象的实例。</summary>
      <returns>可供任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine2" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine3">
      <summary>获取实例 <see cref="T:Microsoft.Build.Framework.IBuildEngine3" /> 任务使用的对象。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Framework.IBuildEngine3" /> 任务可用。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine4">
      <summary>获取实例 <see cref="T:Microsoft.Build.Framework.IBuildEngine4" /> 任务使用的对象。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.IBuildEngine4" /> 任务可用。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过资源名称组成 Help 关键字。</summary>
      <returns>用于通过资源名称组成 Help 关键字的前缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HostObject">
      <summary>获取或设置与此任务关联的宿主对象。</summary>
      <returns>与此任务关联的宿主对象。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.Log">
      <summary>获取包含任务日志记录方法的 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> 类的实例。</summary>
      <returns>日志记录帮助器对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.TaskResources">
      <summary>获取或设置与该任务相关联的区域性特定的源。</summary>
      <returns>与该任务相关联的区域性特定的源。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.ItemSpec">
      <summary>获取或设置项规范。</summary>
      <returns>表示项规范的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataCount">
      <summary>获取在该项上设置的元数据的数目。</summary>
      <returns>一个 <see cref="T:System.Int32" />，表示在该项上设置的元数据的计数。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataNames">
      <summary>获取该项上所有元数据的名称。</summary>
      <returns>元数据名称的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 获取或设置项的实现包括值。  对于基于磁盘的项，这是文件路径。</summary>
      <returns>返回包含值的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine">
      <summary>获取与任务关联的生成引擎。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />，表示与任务关联的生成引擎的实例。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors">
      <summary>获取一个值，该值指示此任务是否已经通过该记录帮助器对象记录了任何错误。</summary>
      <returns>如果此任务已经通过该记录帮助器对象记录了任何错误，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过资源名称组成 Help 关键字。</summary>
      <returns>用于通过资源名称组成 Help 关键字的前缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName">
      <summary>获取父任务的名称。</summary>
      <returns>父任务的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources">
      <summary>获取或设置记录方法使用的区域性特定资源。</summary>
      <returns>一个 <see cref="T:System.Resources.ResourceManager" />，表示记录方法使用的区域性特定资源。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem">
      <summary>获取系统目录的完全限定路径。</summary>
      <returns>包含指向系统目录的目录路径的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EchoOff">
      <summary>指示命令行回显已关闭。</summary>
      <returns>命令行回显处于关闭状态时，则为 true。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride">
      <summary>获取一组环境变量名称-值对。 可在自定义任务类（从 ToolTask 派生）中重写以返回一组新的或更改的环境变量，从而创建关联工具的执行上下文。</summary>
      <returns>返回一组环境变量。 每个字典键均为要重写的环境变量的名称，而字典值是要为该环境变量设置的值。 EnvironmentOverride 的默认实现返回 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables">
      <summary>应于传递给生成的可执行文件的环境变量 （或有选择地重写） 的等号分隔的对的数组常规环境块。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ExitCode">
      <summary>获取可执行文件返回的退出代码。</summary>
      <returns>可执行文件返回的退出代码。 如果该任务记录了错误，但是可执行文件返回的退出代码为 0，则此方法将返回 -1。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors">
      <summary>此 ToolTask 是否记录了任何错误</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError">
      <summary>在标准错误流上收到的所有邮件被都记录为错误。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding">
      <summary>获取响应文件的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding">
      <summary>获取任务的标准错误流的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance">
      <summary>任务参数：用于从标准错误流记录文本的重要性。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse">
      <summary>获取标准错误消息将被记录的实际重要性。</summary>
      <returns>返回标准错误消息将被记录的实际重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance">
      <summary>获取用于记录错误的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</summary>
      <returns>用于记录错误的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding">
      <summary>获取任务的标准输出流的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance">
      <summary>任务参数：关于记录标准输出流的文本的重要性。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse">
      <summary>获取标准输出消息将被记录的实际重要性。</summary>
      <returns>返回标准输出消息将被记录的实际重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance">
      <summary>获取用于记录错误的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</summary>
      <returns>用于记录错误的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout">
      <summary>超时时间以等待任务终止，然后将其终止。 以毫秒为单位。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.Timeout">
      <summary>获取或设置在经过多长时间后终止任务可执行文件。</summary>
      <returns>超时长度，以毫秒为单位。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled">
      <summary>用于发出信号时已取消了一种工具。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolExe">
      <summary>项目可将此设置为重写任务的 ToolName。 任务可能会重写此内容以避免这种情况。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolName">
      <summary>获取要运行的可执行文件的名称。</summary>
      <returns>要运行的可执行文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolPath">
      <summary>获取或设置要运行的可执行文件的路径。</summary>
      <returns>要运行的文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor">
      <summary>获取或设置一个指定该工具任务是否将创建一个用于命令行批处理文件并执行，使用该命令处理器，而不是直接执行该命令的开关。</summary>
      <returns>如果为 true，该工具任务将创建一个用于命令行批处理文件并执行使用命令处理器。 如果为 false 工具任务将直接执行命令。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution">
      <summary>指示是否该任务将在工具执行过程中产生该节点。</summary>
      <returns>如果该任务将在工具执行过程中产生该节点，则为 true。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.AppDomainIsolatedTask">
      <summary>提供与 <see cref="T:Microsoft.Build.Utilities.Task" /> 类相同的功能，但又派生自 <see cref="T:System.MarshalByRefObject" />，因此可在其自身应用程序域中实例化。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.AssemblyFoldersExInfo">
      <summary>包含有关在 AssemblyFoldersEx 注册表项中的条目的信息。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
      <summary>此类是文件跟踪日志解释器，用于。 规范格式或已取得 root 权限 (^) 以使其规范中的跟踪日志</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles">
      <summary>此类是跟踪日志解释器，用于该文件。 跟踪日志中的规范格式 Canoncial.write。 日志需要根路径，因为输出需要要通过输入相关联。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.CommandLineBuilder">
      <summary>包含用于构造命令行的实用工具方法。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.DependencyFilter">
      <summary>依赖项的筛选器委托。 用于在任务的顺序以 TLog 保存期间有选择地从书面的关系图中移除依赖关系。</summary>
      <param name="fullPath">要写入到压缩的 TLog 依赖项文件的完整路径</param>
      <returns>如果该文件应该实际将写入 TLog (true) 或不 (false)</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.DotNetFrameworkArchitecture">
      <summary>用于指定 ToolLocationHelper 的一些方法面向的.NET Framework 的目标的位数</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Current">
      <summary>指示当前正在运行在.NET Framework。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness32">
      <summary>表示 32 位.NET Framework</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness64">
      <summary>指示 64 位.NET Framework</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ExecutableType">
      <summary>枚举表示 Tracker.exe 正在包装的可执行文件的类型</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native32Bit">
      <summary>32 位本机可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native64Bit">
      <summary>64 位本机可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.ManagedIL">
      <summary>托管的可执行文件，而无需指定的位数</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed32Bit">
      <summary>托管可执行文件专门标记为 32 位</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed64Bit">
      <summary>托管可执行文件专门标记为 64 位</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.SameAsCurrentProcess">
      <summary>与当前运行的可执行文件使用相同的位数。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.FileTracker">
      <summary>此类包含用于封装启动和记录的跟踪器的实用工具函数</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.FlatTrackingData">
      <summary>此类用于在生成期间跟踪文件依赖项。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.HostObjectInitializationStatus">
      <summary>定义在尝试初始化宿主对象后 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 的下一步操作。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute">
      <summary>指示存在适用于此任务的宿主对象，它可支持所有传入的参数，并应被调用来执行任务的实际工作。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute">
      <summary>指示宿主对象不可用，或宿主对象不能支持此版本所需的全部功能。 因此，<see cref="T:Microsoft.Build.Utilities.ToolTask" /> 应回退到版本的替代执行方式，如调用命令行工具。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess">
      <summary>指示该主机对象是最新的且无需进一步操作。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure">
      <summary>指示正传入到任务的某些参数无效，且任务应立即失败。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Logger">
      <summary>在派生窗体中重写时，为处理 MSBuild 引擎引发的事件的记录器提供功能。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.MuxLogger">
      <summary>表示多路复用记录器。 此记录器的目的是要注册和注销在生成过程的多个记录器。 支持 Visual Studio IDE 方案注册和取消注册每个项目系统的生成请求的记录器。 一个物理生成可以有多个逻辑生成，每个都有其自己的记录程序集。MuxLogger自行注册作为常规中央 /l 样式记录器生成管理器。 它生成管理器从接收消息并路由到正确的记录器，基于逻辑生成消息的来源。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ProcessorArchitecture">
      <summary>根据当前系统的处理器体系结构来确定 MSBuild 应该使用的工具集中的正确工具。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion">
      <summary>指定要与 <see cref="T:Microsoft.Build.Utilities.ToolLocationHelper" /> 中的方法配合使用的 .NET Framework 的版本。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11">
      <summary>指定 .NET Framework 1.1。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20">
      <summary>指定 .NET Framework 2.0。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version30">
      <summary>指定 .NET Framework 3.0。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version35">
      <summary>指定 .NET Framework 3.5。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version40">
      <summary>4.0 版</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version45">
      <summary>4.5 版</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest">
      <summary>指定 .NET Framework 的最新发行的版本。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TargetPlatformSDK">
      <summary>表示目标平台 SDK。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Task">
      <summary>在派生窗体中重写时，为任务提供功能。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskItem">
      <summary>定义项目中传递到任务的单个项。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskLoggingHelper">
      <summary>提供任务使用的帮助器日志记录方法。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolLocationHelper">
      <summary>提供一些实用工具方法，用于查找 .NET Framework 和 .NET Framework SDK 文件及目录。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolTask">
      <summary>在派生窗体中重写时，为包装命令行工具的任务提供功能。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TrackedDependencies">
      <summary>此类包含用于帮助跟踪依赖项的实用工具函数</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.UpToDateCheckType">
      <summary>我们可以支持的最新的检查的可能的类型</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanOutput">
      <summary>输入输出比更新</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputOrOutputNewerThanTracking">
      <summary>输入或输出比跟踪更新</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanTracking">
      <summary>输入跟踪比更新</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.VisualStudioVersion">
      <summary>用于指定从中选择 ToolLocationHelper 某些方法的相关的工具的 Visual Studio 版本</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.Version100">
      <summary>Visual Studio 2010 和 SP1</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.Version110">
      <summary>Visual Studio 2012</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.VersionLatest">
      <summary>在发布时可用的最新版本</summary>
    </member>
  </members>
</doc>